{"version":3,"file":"run.js","sourceRoot":"","sources":["../../src/run.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport * as clack from '@clack/prompts';\nimport { runReactNativeWizard } from './react-native/react-native-wizard';\nimport { abortIfCancelled } from './utils/clack';\n\nimport { Integration, type Platform } from '../lib/Constants';\nimport { readEnvironment } from '../lib/Helper/Env';\nimport { run as legacyRun } from '../lib/Setup';\nimport { runAndroidWizard } from './android/android-wizard';\nimport { runAngularWizard } from './angular/angular-wizard';\nimport { runAppleWizard } from './apple/apple-wizard';\nimport { runFlutterWizard } from './flutter/flutter-wizard';\nimport { runNextjsWizard } from './nextjs/nextjs-wizard';\nimport { runNuxtWizard } from './nuxt/nuxt-wizard';\nimport { runRemixWizard } from './remix/remix-wizard';\nimport { runSourcemapsWizard } from './sourcemaps/sourcemaps-wizard';\nimport { runSvelteKitWizard } from './sveltekit/sveltekit-wizard';\nimport { enableDebugLogs } from './utils/debug';\nimport type { PreselectedProject, WizardOptions } from './utils/types';\nimport { WIZARD_VERSION } from './version';\n\ntype WizardIntegration =\n  | 'angular'\n  | 'reactNative'\n  | 'flutter'\n  | 'ios'\n  | 'android'\n  | 'cordova'\n  | 'electron'\n  | 'nextjs'\n  | 'nuxt'\n  | 'remix'\n  | 'sveltekit'\n  | 'sourcemaps';\n\ntype Args = {\n  integration?: WizardIntegration;\n\n  uninstall: boolean;\n  signup: boolean;\n  skipConnect: boolean;\n  debug: boolean;\n  quiet: boolean;\n  disableTelemetry: boolean;\n  promoCode?: string;\n  preSelectedProject?: {\n    authToken: string;\n    selfHosted: boolean;\n    dsn: string;\n    projectId: string;\n    projectSlug: string;\n    projectName: string;\n    orgId: string;\n    orgName: string;\n    orgSlug: string;\n  };\n  url?: string;\n  platform?: Platform[];\n  org?: string;\n  project?: string;\n  saas?: boolean;\n  forceInstall?: boolean;\n  comingFrom?: string;\n  ignoreGitChanges?: boolean;\n  xcodeProjectDir?: string;\n};\n\nfunction preSelectedProjectArgsToObject(\n  args: Args,\n): PreselectedProject | undefined {\n  if (!args.preSelectedProject) {\n    return undefined;\n  }\n\n  return {\n    authToken: args.preSelectedProject.authToken,\n    selfHosted: args.preSelectedProject.selfHosted,\n    project: {\n      id: args.preSelectedProject.projectId,\n      keys: [\n        {\n          dsn: {\n            public: args.preSelectedProject.dsn,\n          },\n        },\n      ],\n      organization: {\n        id: args.preSelectedProject.orgId,\n        name: args.preSelectedProject.orgName,\n        slug: args.preSelectedProject.orgSlug,\n      },\n      slug: args.preSelectedProject.projectSlug,\n    },\n  };\n}\n\nexport async function run(argv: Args) {\n  const finalArgs = {\n    ...argv,\n    ...readEnvironment(),\n  };\n\n  // Enable debug logs if the user has passed the --debug flag\n  if (finalArgs.debug) {\n    enableDebugLogs();\n  }\n\n  let integration = finalArgs.integration;\n  if (!integration) {\n    clack.intro(`Sentry Wizard ${WIZARD_VERSION}`);\n\n    integration = await abortIfCancelled(\n      clack.select({\n        message: 'What do you want to set up?',\n        options: [\n          { value: 'reactNative', label: 'React Native' },\n          { value: 'flutter', label: 'Flutter' },\n          { value: 'ios', label: 'iOS' },\n          { value: 'angular', label: 'Angular' },\n          { value: 'android', label: 'Android' },\n          { value: 'cordova', label: 'Cordova' },\n          { value: 'electron', label: 'Electron' },\n          { value: 'nextjs', label: 'Next.js' },\n          { value: 'nuxt', label: 'Nuxt' },\n          { value: 'remix', label: 'Remix' },\n          { value: 'sveltekit', label: 'SvelteKit' },\n          { value: 'sourcemaps', label: 'Configure Source Maps Upload' },\n        ],\n      }),\n    );\n\n    if (!integration) {\n      clack.log.error('No integration selected. Exiting.');\n      return;\n    }\n\n    clack.outro(`Starting ${integration} setup`);\n  }\n\n  const wizardOptions: WizardOptions = {\n    telemetryEnabled: !finalArgs.disableTelemetry,\n    promoCode: finalArgs.promoCode,\n    url: finalArgs.url,\n    orgSlug: finalArgs.org,\n    projectSlug: finalArgs.project,\n    saas: finalArgs.saas,\n    preSelectedProject: preSelectedProjectArgsToObject(finalArgs),\n    forceInstall: finalArgs.forceInstall,\n    comingFrom: finalArgs.comingFrom,\n    ignoreGitChanges: finalArgs.ignoreGitChanges,\n  };\n\n  switch (integration) {\n    case 'reactNative':\n      await runReactNativeWizard({\n        ...wizardOptions,\n        uninstall: finalArgs.uninstall,\n      });\n      break;\n\n    case 'flutter':\n      await runFlutterWizard(wizardOptions);\n      break;\n\n    case 'ios':\n      await runAppleWizard({\n        ...wizardOptions,\n        projectDir: finalArgs.xcodeProjectDir,\n      });\n      break;\n\n    case 'android':\n      await runAndroidWizard(wizardOptions);\n      break;\n\n    case 'angular':\n      await runAngularWizard(wizardOptions);\n      break;\n\n    case 'nextjs':\n      await runNextjsWizard(wizardOptions);\n      break;\n\n    case 'nuxt':\n      await runNuxtWizard(wizardOptions);\n      break;\n\n    case 'remix':\n      await runRemixWizard(wizardOptions);\n      break;\n\n    case 'sveltekit':\n      await runSvelteKitWizard(wizardOptions);\n      break;\n\n    case 'sourcemaps':\n      await runSourcemapsWizard(wizardOptions);\n      break;\n\n    case 'cordova':\n      argv.integration = 'cordova';\n      void legacyRun(\n        {\n          ...argv,\n          url: argv.url ?? '',\n          integration: Integration.cordova,\n          platform: argv.platform ?? [],\n        },\n        wizardOptions,\n      );\n      break;\n\n    case 'electron':\n      argv.integration = 'electron';\n      void legacyRun(\n        {\n          ...argv,\n          url: argv.url ?? '',\n          integration: Integration.electron,\n          platform: argv.platform ?? [],\n        },\n        wizardOptions,\n      );\n      break;\n\n    default:\n      clack.log.error('No setup wizard selected!');\n  }\n}\n"]}