{"version":3,"file":"SentryProjectSelector.js","sourceRoot":"","sources":["../../../lib/Steps/SentryProjectSelector.ts"],"names":[],"mappings":";;;AACA,uCAAkC;AAElC,yCAAsC;AA+BtC,SAAS,KAAK,CAAC,CAAS;IACtB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC;AAED,MAAa,qBAAsB,SAAQ,mBAAQ;IAC1C,KAAK,CAAC,IAAI,CACf,OAAsC;QAEtC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAEpB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACnB,4DAA4D;YAC5D,OAAO,EAAE,CAAC;SACX;QAED,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,IAAI,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACpE,MAAM,IAAI,KAAK,CACb,yEAAyE,CAC1E,CAAC;SACH;QAED,IAAI,eAAe,GAAwC,IAAI,CAAC;QAChE,IAAI,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,eAAe,GAAG;gBAChB,eAAe,EAAE,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;aAC5C,CAAC;YACF,4DAA4D;YAC5D,2EAA2E;YAC3E,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC;SACnB;aAAM;YACL,eAAe,GAAG,MAAM,IAAA,iBAAM,EAAC;gBAC7B;oBACE,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAgB,EAAE,EAAE;wBACxD,OAAO;4BACL,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,EAAE,IAAI,IAAI,EAAE,MAAM,OAAO,CAAC,IAAI,EAAE;4BAC7D,KAAK,EAAE,OAAO;yBACf,CAAC;oBACJ,CAAC,CAAC;oBACF,OAAO,EAAE,uCAAuC;oBAChD,IAAI,EAAE,iBAAiB;oBACvB,IAAI,EAAE,MAAM;iBACb;aACF,CAAC,CAAC;SACJ;QACD,MAAM,GAAG,GAAG,eAAe,EAAE,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI;YAC3D,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,IAAI;SACd,CAAC;QACF,OAAO;YACL,MAAM,EAAE;gBACN,IAAI,EAAE;oBACJ,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,IAAI,IAAI;iBAC7C;gBACD,GAAG;gBACH,YAAY,EAAE;oBACZ,IAAI,EAAE,eAAe,EAAE,eAAe,CAAC,YAAY,EAAE,IAAI,IAAI,IAAI;iBAClE;gBACD,OAAO,EAAE;oBACP,EAAE,EAAE,eAAe,EAAE,eAAe,CAAC,EAAE,IAAI,IAAI;oBAC/C,IAAI,EAAE,eAAe,EAAE,eAAe,CAAC,IAAI,IAAI,IAAI;iBACpD;aACF;SACF,CAAC;IACJ,CAAC;CACF;AA5DD,sDA4DC","sourcesContent":["import type { Answers } from 'inquirer';\nimport { prompt } from 'inquirer';\n\nimport { BaseStep } from './BaseStep';\n\ntype Project = {\n  id: string;\n  slug: string;\n  organization?: {\n    name: string;\n    slug: string;\n  };\n  keys: {\n    dsn: {\n      public: string;\n      private: string;\n    };\n  }[];\n};\n\ntype Wizard = {\n  projects: Project[];\n  apiKeys: {\n    token: string;\n  };\n};\n\ntype Config = {\n  organization?: { slug?: string | null };\n  project?: { id?: string | null; slug?: string | null };\n  dsn?: { public?: string | null; private?: string | null };\n  auth?: { token?: string | null };\n};\n\nfunction sleep(n: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, n));\n}\n\nexport class SentryProjectSelector extends BaseStep {\n  public async emit(\n    answers: Answers & { wizard?: Wizard },\n  ): Promise<{ config?: Config }> {\n    this.debug(answers);\n\n    if (!answers.wizard) {\n      // we skip this completely because the wizard wasn't running\n      return {};\n    }\n\n    if (!answers.wizard.projects || answers.wizard.projects.length === 0) {\n      throw new Error(\n        'No Projects found. Please create a new Project in Sentry and try again.',\n      );\n    }\n\n    let selectedProject: { selectedProject: Project } | null = null;\n    if (answers.wizard.projects.length === 1) {\n      selectedProject = {\n        selectedProject: answers.wizard.projects[0],\n      };\n      // the wizard CLI closes too quickly when we skip the prompt\n      // as it will cause the UI to be stuck saying Waiting for wizard to connect\n      await sleep(1000);\n    } else {\n      selectedProject = await prompt([\n        {\n          choices: answers.wizard.projects.map((project: Project) => {\n            return {\n              name: `${project.organization?.name ?? ''} / ${project.slug}`,\n              value: project,\n            };\n          }),\n          message: 'Please select your project in Sentry:',\n          name: 'selectedProject',\n          type: 'list',\n        },\n      ]);\n    }\n    const dsn = selectedProject?.selectedProject.keys[0]?.dsn ?? {\n      public: null,\n      private: null,\n    };\n    return {\n      config: {\n        auth: {\n          token: answers.wizard.apiKeys?.token ?? null,\n        },\n        dsn,\n        organization: {\n          slug: selectedProject?.selectedProject.organization?.slug ?? null,\n        },\n        project: {\n          id: selectedProject?.selectedProject.id ?? null,\n          slug: selectedProject?.selectedProject.slug ?? null,\n        },\n      },\n    };\n  }\n}\n"]}