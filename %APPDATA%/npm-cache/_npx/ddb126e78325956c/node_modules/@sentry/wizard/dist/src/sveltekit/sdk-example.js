"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createExamplePage = void 0;
const fs = __importStar(require("fs"));
const path = __importStar(require("path"));
// @ts-expect-error - clack is ESM and TS complains about that. It works though
const prompts_1 = __importDefault(require("@clack/prompts"));
const templates_1 = require("./templates");
/**
 * Creates example page and API route to test Sentry
 */
async function createExamplePage(svelteConfig, projectProps) {
    const routesDirectory = svelteConfig.kit?.files?.routes || 'src/routes';
    const exampleRoutePath = path.resolve(path.join(routesDirectory, 'sentry-example-page'));
    if (!fs.existsSync(routesDirectory)) {
        prompts_1.default.log.warn(`Couldn't find your routes directory. Creating it now: ${routesDirectory}`);
        fs.mkdirSync(routesDirectory, { recursive: true });
    }
    if (!fs.existsSync(exampleRoutePath)) {
        fs.mkdirSync(exampleRoutePath);
    }
    else {
        prompts_1.default.log.warn(`It seems like a sentry example page already exists (${path.basename(exampleRoutePath)}). Skipping creation of example route.`);
        return;
    }
    await fs.promises.writeFile(path.join(exampleRoutePath, '+page.svelte'), (0, templates_1.getSentryExampleSveltePage)(projectProps));
    await fs.promises.writeFile(path.join(exampleRoutePath, '+server.js'), (0, templates_1.getSentryExampleApiRoute)());
}
exports.createExamplePage = createExamplePage;
//# sourceMappingURL=sdk-example.js.map