{"version":3,"file":"android-wizard.js","sourceRoot":"","sources":["../../../src/android/android-wizard.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport * as fs from 'fs';\n// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport * as clack from '@clack/prompts';\nimport * as Sentry from '@sentry/node';\nimport chalk from 'chalk';\nimport * as path from 'path';\nimport { traceStep, withTelemetry } from '../telemetry';\nimport {\n  CliSetupConfig,\n  abort,\n  addSentryCliConfig,\n  confirmContinueIfNoOrDirtyGitRepo,\n  getOrAskForProjectData,\n  printWelcome,\n  propertiesCliSetupConfig,\n} from '../utils/clack';\nimport { WizardOptions } from '../utils/types';\nimport * as codetools from './code-tools';\nimport * as gradle from './gradle';\nimport * as manifest from './manifest';\n\nconst proguardMappingCliSetupConfig: CliSetupConfig = {\n  ...propertiesCliSetupConfig,\n  name: 'proguard mappings',\n};\n\nexport async function runAndroidWizard(options: WizardOptions): Promise<void> {\n  return withTelemetry(\n    {\n      enabled: options.telemetryEnabled,\n      integration: 'android',\n      wizardOptions: options,\n    },\n    () => runAndroidWizardWithTelemetry(options),\n  );\n}\n\nasync function runAndroidWizardWithTelemetry(\n  options: WizardOptions,\n): Promise<void> {\n  printWelcome({\n    wizardName: 'Sentry Android Wizard',\n    promoCode: options.promoCode,\n  });\n\n  await confirmContinueIfNoOrDirtyGitRepo({\n    ignoreGitChanges: options.ignoreGitChanges,\n    cwd: undefined,\n  });\n\n  const projectDir = process.cwd();\n  const buildGradleFiles = findFilesWithExtensions(projectDir, [\n    '.gradle',\n    'gradle.kts',\n  ]);\n\n  if (!buildGradleFiles || buildGradleFiles.length === 0) {\n    clack.log.error(\n      'No Gradle project found. Please run this command from the root of your project.',\n    );\n    Sentry.captureException('No Gradle project found');\n    await abort();\n    return;\n  }\n\n  const appFile = await traceStep('Select App File', () =>\n    gradle.selectAppFile(buildGradleFiles),\n  );\n\n  const { selectedProject, selfHosted, sentryUrl, authToken } =\n    await getOrAskForProjectData(options, 'android');\n\n  // ======== STEP 1. Add Sentry Gradle Plugin to build.gradle(.kts) ============\n  clack.log.step(\n    `Adding ${chalk.bold('Sentry Gradle plugin')} to your app's ${chalk.cyan(\n      'build.gradle',\n    )} file.`,\n  );\n  const pluginAdded = await traceStep('Add Gradle Plugin', () =>\n    gradle.addGradlePlugin(\n      appFile,\n      selectedProject.organization.slug,\n      selectedProject.slug,\n    ),\n  );\n  if (!pluginAdded) {\n    clack.log.warn(\n      \"Could not add Sentry Gradle plugin to your app's build.gradle file. You'll have to add it manually.\\nPlease follow the instructions at https://docs.sentry.io/platforms/android/#install\",\n    );\n  }\n  Sentry.setTag('gradle-plugin-added', pluginAdded);\n\n  // ======== STEP 2. Configure Sentry SDK via AndroidManifest ============\n  clack.log.step(\n    `Configuring Sentry SDK via ${chalk.cyan('AndroidManifest.xml')}`,\n  );\n  const appDir = path.dirname(appFile);\n  const manifestFile = path.join(appDir, 'src', 'main', 'AndroidManifest.xml');\n\n  const manifestUpdated = traceStep('Update Android Manifest', () =>\n    manifest.addManifestSnippet(\n      manifestFile,\n      selectedProject.keys[0].dsn.public,\n    ),\n  );\n  if (!manifestUpdated) {\n    clack.log.warn(\n      \"Could not configure the Sentry SDK. You'll have to do it manually.\\nPlease follow the instructions at https://docs.sentry.io/platforms/android/#configure\",\n    );\n  }\n  Sentry.setTag('android-manifest-updated', manifestUpdated);\n\n  // ======== STEP 3. Patch Main Activity with a test error snippet ============\n  clack.log.step(\n    `Patching ${chalk.bold('Main Activity')} with a test error snippet.`,\n  );\n  const mainActivity = traceStep('Find Main Activity', () =>\n    manifest.getMainActivity(manifestFile),\n  );\n  let packageName = mainActivity.packageName;\n  if (!packageName) {\n    // if no package name in AndroidManifest, look into gradle script\n    packageName = gradle.getNamespace(appFile);\n  }\n  const activityName = mainActivity.activityName;\n  Sentry.setTag('has-activity-name', !!activityName);\n  Sentry.setTag('has-package-name', !!packageName);\n  if (!activityName || !packageName) {\n    clack.log.warn(\n      \"Could not find Activity with intent action MAIN. You'll have to manually verify the setup.\\nPlease follow the instructions at https://docs.sentry.io/platforms/android/#verify\",\n    );\n    Sentry.captureException('Could not find Main Activity');\n  } else {\n    const packageNameStable = packageName;\n    const activityFile = traceStep('Find Main Activity Source File', () =>\n      codetools.findActivitySourceFile(appDir, packageNameStable, activityName),\n    );\n\n    const activityPatched = traceStep('Patch Main Activity', () =>\n      codetools.patchMainActivity(activityFile),\n    );\n    if (!activityPatched) {\n      clack.log.warn(\n        \"Could not patch main activity. You'll have to manually verify the setup.\\nPlease follow the instructions at https://docs.sentry.io/platforms/android/#verify\",\n      );\n    }\n    Sentry.setTag('main-activity-patched', activityPatched);\n  }\n\n  // ======== STEP 4. Add sentry-cli config file ============\n  clack.log.step(\n    `Configuring ${chalk.bold('proguard mappings upload')} via the ${chalk.cyan(\n      'sentry.properties',\n    )} file.`,\n  );\n\n  await addSentryCliConfig({ authToken }, proguardMappingCliSetupConfig);\n\n  // ======== OUTRO ========\n  const issuesPageLink = selfHosted\n    ? `${sentryUrl}organizations/${selectedProject.organization.slug}/issues/?project=${selectedProject.id}`\n    : `https://${selectedProject.organization.slug}.sentry.io/issues/?project=${selectedProject.id}`;\n\n  clack.outro(`\n${chalk.greenBright('Successfully installed the Sentry Android SDK!')}\n\n${chalk.cyan(\n  `You can validate your setup by launching your application and checking Sentry issues page afterwards\n${issuesPageLink}`,\n)}\n\nCheck out the SDK documentation for further configuration:\nhttps://docs.sentry.io/platforms/android/\n  `);\n}\n\n//find files with the given extension\nfunction findFilesWithExtensions(\n  dir: string,\n  extensions: string[],\n  filesWithExtensions: string[] = [],\n): string[] {\n  const cwd = process.cwd();\n  const files = fs.readdirSync(dir, { withFileTypes: true });\n  for (const file of files) {\n    if (file.isDirectory()) {\n      const childDir = path.join(dir, file.name);\n      findFilesWithExtensions(childDir, extensions, filesWithExtensions);\n    } else if (extensions.some((ext) => file.name.endsWith(ext))) {\n      filesWithExtensions.push(path.relative(cwd, path.join(dir, file.name)));\n    }\n  }\n  return filesWithExtensions;\n}\n"]}