{"version":3,"file":"metro.js","sourceRoot":"","sources":["../../../src/react-native/metro.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport * as clack from '@clack/prompts';\n// @ts-expect-error - magicast is ESM and TS complains about that. It works though\nimport { ProxifiedModule, parseModule, writeFile } from 'magicast';\nimport * as fs from 'fs';\nimport * as Sentry from '@sentry/node';\n\nimport {\n  getLastRequireIndex,\n  hasSentryContent,\n  removeRequire,\n} from '../utils/ast-utils';\nimport {\n  abortIfCancelled,\n  makeCodeSnippet,\n  showCopyPasteInstructions,\n} from '../utils/clack';\n\nimport * as recast from 'recast';\nimport x = recast.types;\nimport t = x.namedTypes;\nimport chalk from 'chalk';\n\nconst b = recast.types.builders;\n\nexport const metroConfigPath = 'metro.config.js';\n\nexport async function patchMetroWithSentryConfig() {\n  const mod = await parseMetroConfig();\n\n  const showInstructions = () =>\n    showCopyPasteInstructions({\n      filename: metroConfigPath,\n      codeSnippet: getMetroWithSentryConfigSnippet(true),\n    });\n\n  const success = await patchMetroWithSentryConfigInMemory(\n    mod,\n    showInstructions,\n  );\n  if (!success) {\n    return;\n  }\n\n  const saved = await writeMetroConfig(mod);\n  if (saved) {\n    clack.log.success(\n      chalk.green(`${chalk.cyan(metroConfigPath)} changes saved.`),\n    );\n  } else {\n    clack.log.warn(\n      `Could not save changes to ${chalk.cyan(\n        metroConfigPath,\n      )}, please follow the manual steps.`,\n    );\n    return await showInstructions();\n  }\n}\n\nexport async function patchMetroWithSentryConfigInMemory(\n  mod: ProxifiedModule,\n  showInstructions: () => Promise<void>,\n): Promise<boolean> {\n  if (hasSentryContent(mod.$ast as t.Program)) {\n    const shouldContinue = await confirmPathMetroConfig();\n    if (!shouldContinue) {\n      await showInstructions();\n      return false;\n    }\n  }\n\n  const configExpression = getModuleExportsAssignmentRight(\n    mod.$ast as t.Program,\n  );\n  if (!configExpression) {\n    clack.log.warn(\n      'Could not find Metro config, please follow the manual steps.',\n    );\n    await showInstructions();\n    return false;\n  }\n\n  const wrappedConfig = wrapWithSentryConfig(configExpression);\n\n  const replacedModuleExportsRight = replaceModuleExportsRight(\n    mod.$ast as t.Program,\n    wrappedConfig,\n  );\n  if (!replacedModuleExportsRight) {\n    clack.log.warn(\n      'Could not automatically wrap the config export, please follow the manual steps.',\n    );\n    await showInstructions();\n    return false;\n  }\n\n  const addedSentryMetroImport = addSentryMetroRequireToMetroConfig(\n    mod.$ast as t.Program,\n  );\n  if (!addedSentryMetroImport) {\n    clack.log.warn(\n      'Could not add `@sentry/react-native/metro` import to Metro config, please follow the manual steps.',\n    );\n    await showInstructions();\n    return false;\n  }\n\n  clack.log.success(\n    `Added Sentry Metro plugin to ${chalk.cyan(metroConfigPath)}.`,\n  );\n  return true;\n}\n\nexport async function patchMetroConfigWithSentrySerializer() {\n  const mod = await parseMetroConfig();\n\n  const showInstructions = () =>\n    showCopyPasteInstructions({\n      filename: metroConfigPath,\n      codeSnippet: getMetroSentrySerializerSnippet(true),\n    });\n\n  if (hasSentryContent(mod.$ast as t.Program)) {\n    const shouldContinue = await confirmPathMetroConfig();\n    if (!shouldContinue) {\n      return await showInstructions();\n    }\n  }\n\n  const configObj = getMetroConfigObject(mod.$ast as t.Program);\n  if (!configObj) {\n    clack.log.warn(\n      'Could not find Metro config object, please follow the manual steps.',\n    );\n    return showInstructions();\n  }\n\n  const addedSentrySerializer = addSentrySerializerToMetroConfig(configObj);\n  if (!addedSentrySerializer) {\n    clack.log.warn(\n      'Could not add Sentry serializer to Metro config, please follow the manual steps.',\n    );\n    return await showInstructions();\n  }\n\n  const addedSentrySerializerImport = addSentrySerializerRequireToMetroConfig(\n    mod.$ast as t.Program,\n  );\n  if (!addedSentrySerializerImport) {\n    clack.log.warn(\n      'Could not add Sentry serializer import to Metro config, please follow the manual steps.',\n    );\n    return await showInstructions();\n  }\n\n  clack.log.success(\n    `Added Sentry Metro plugin to ${chalk.cyan(metroConfigPath)}.`,\n  );\n\n  const saved = await writeMetroConfig(mod);\n  if (saved) {\n    clack.log.success(\n      chalk.green(`${chalk.cyan(metroConfigPath)} changes saved.`),\n    );\n  } else {\n    clack.log.warn(\n      `Could not save changes to ${chalk.cyan(\n        metroConfigPath,\n      )}, please follow the manual steps.`,\n    );\n    return await showInstructions();\n  }\n}\n\nexport async function unPatchMetroConfig() {\n  const mod = await parseMetroConfig();\n\n  const removedAtLeastOneRequire = removeSentryRequire(mod.$ast as t.Program);\n  const removedSerializerConfig = removeSentrySerializerFromMetroConfig(\n    mod.$ast as t.Program,\n  );\n\n  if (removedAtLeastOneRequire || removedSerializerConfig) {\n    const saved = await writeMetroConfig(mod);\n    if (saved) {\n      clack.log.success(\n        `Removed Sentry Metro plugin from ${chalk.cyan(metroConfigPath)}.`,\n      );\n    }\n  } else {\n    clack.log.warn(\n      `No Sentry Metro plugin found in ${chalk.cyan(metroConfigPath)}.`,\n    );\n  }\n}\n\nexport function removeSentrySerializerFromMetroConfig(\n  program: t.Program,\n): boolean {\n  const configObject = getMetroConfigObject(program);\n  if (!configObject) {\n    return false;\n  }\n\n  const serializerProp = getSerializerProp(configObject);\n  if ('invalid' === serializerProp || 'undefined' === serializerProp) {\n    return false;\n  }\n\n  const customSerializerProp = getCustomSerializerProp(serializerProp);\n  if (\n    'invalid' === customSerializerProp ||\n    'undefined' === customSerializerProp\n  ) {\n    return false;\n  }\n\n  if (\n    serializerProp.value.type === 'ObjectExpression' &&\n    customSerializerProp.value.type === 'CallExpression' &&\n    customSerializerProp.value.callee.type === 'Identifier' &&\n    customSerializerProp.value.callee.name === 'createSentryMetroSerializer'\n  ) {\n    if (customSerializerProp.value.arguments.length === 0) {\n      // FROM serializer: { customSerializer: createSentryMetroSerializer() }\n      // TO serializer: {}\n      let removed = false;\n      serializerProp.value.properties = serializerProp.value.properties.filter(\n        (p) => {\n          if (\n            p.type === 'ObjectProperty' &&\n            p.key.type === 'Identifier' &&\n            p.key.name === 'customSerializer'\n          ) {\n            removed = true;\n            return false;\n          }\n          return true;\n        },\n      );\n\n      if (removed) {\n        return true;\n      }\n    } else {\n      if (customSerializerProp.value.arguments[0].type !== 'SpreadElement') {\n        // FROM serializer: { customSerializer: createSentryMetroSerializer(wrapperSerializer) }\n        // TO serializer: { customSerializer: wrapperSerializer }\n        customSerializerProp.value = customSerializerProp.value.arguments[0];\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nexport function removeSentryRequire(program: t.Program): boolean {\n  return removeRequire(program, '@sentry');\n}\n\nexport async function parseMetroConfig(): Promise<ProxifiedModule> {\n  const metroConfigContent = (\n    await fs.promises.readFile(metroConfigPath)\n  ).toString();\n\n  return parseModule(metroConfigContent);\n}\n\nexport async function writeMetroConfig(mod: ProxifiedModule): Promise<boolean> {\n  try {\n    await writeFile(mod.$ast, metroConfigPath);\n  } catch (e) {\n    clack.log.error(\n      `Failed to write to ${chalk.cyan(metroConfigPath)}: ${JSON.stringify(e)}`,\n    );\n    return false;\n  }\n  return true;\n}\n\nexport function addSentrySerializerToMetroConfig(\n  configObj: t.ObjectExpression,\n): boolean {\n  const serializerProp = getSerializerProp(configObj);\n  if ('invalid' === serializerProp) {\n    return false;\n  }\n\n  // case 1: serializer property doesn't exist yet, so we can just add it\n  if ('undefined' === serializerProp) {\n    configObj.properties.push(\n      b.objectProperty(\n        b.identifier('serializer'),\n        b.objectExpression([\n          b.objectProperty(\n            b.identifier('customSerializer'),\n            b.callExpression(b.identifier('createSentryMetroSerializer'), []),\n          ),\n        ]),\n      ),\n    );\n    return true;\n  }\n\n  const customSerializerProp = getCustomSerializerProp(serializerProp);\n  // case 2: serializer.customSerializer property doesn't exist yet, so we just add it\n  if (\n    'undefined' === customSerializerProp &&\n    serializerProp.value.type === 'ObjectExpression'\n  ) {\n    serializerProp.value.properties.push(\n      b.objectProperty(\n        b.identifier('customSerializer'),\n        b.callExpression(b.identifier('createSentryMetroSerializer'), []),\n      ),\n    );\n    return true;\n  }\n\n  return false;\n}\n\nfunction getCustomSerializerProp(\n  prop: t.ObjectProperty,\n): t.ObjectProperty | 'undefined' | 'invalid' {\n  const customSerializerProp =\n    prop.value.type === 'ObjectExpression' &&\n    prop.value.properties.find(\n      (p: t.ObjectProperty) =>\n        p.key.type === 'Identifier' && p.key.name === 'customSerializer',\n    );\n\n  if (!customSerializerProp) {\n    return 'undefined';\n  }\n\n  if (customSerializerProp.type === 'ObjectProperty') {\n    return customSerializerProp;\n  }\n\n  return 'invalid';\n}\n\nfunction getSerializerProp(\n  obj: t.ObjectExpression,\n): t.ObjectProperty | 'undefined' | 'invalid' {\n  const serializerProp = obj.properties.find(\n    (p: t.ObjectProperty) =>\n      p.key.type === 'Identifier' && p.key.name === 'serializer',\n  );\n\n  if (!serializerProp) {\n    return 'undefined';\n  }\n\n  if (serializerProp.type === 'ObjectProperty') {\n    return serializerProp;\n  }\n\n  return 'invalid';\n}\n\nexport function addSentrySerializerRequireToMetroConfig(\n  program: t.Program,\n): boolean {\n  const lastRequireIndex = getLastRequireIndex(program);\n  const sentrySerializerRequire = createSentrySerializerRequire();\n  const sentryImportIndex = lastRequireIndex + 1;\n  if (sentryImportIndex < program.body.length) {\n    // insert after last require\n    program.body.splice(lastRequireIndex + 1, 0, sentrySerializerRequire);\n  } else {\n    // insert at the beginning\n    program.body.unshift(sentrySerializerRequire);\n  }\n  return true;\n}\n\nexport function addSentryMetroRequireToMetroConfig(\n  program: t.Program,\n): boolean {\n  const lastRequireIndex = getLastRequireIndex(program);\n  const sentryMetroRequire = createSentryMetroRequire();\n  const sentryImportIndex = lastRequireIndex + 1;\n  if (sentryImportIndex < program.body.length) {\n    // insert after last require\n    program.body.splice(lastRequireIndex + 1, 0, sentryMetroRequire);\n  } else {\n    // insert at the beginning\n    program.body.unshift(sentryMetroRequire);\n  }\n  return true;\n}\n\nfunction wrapWithSentryConfig(\n  configObj: t.Identifier | t.CallExpression | t.ObjectExpression,\n): t.CallExpression {\n  return b.callExpression(b.identifier('withSentryConfig'), [configObj]);\n}\n\nfunction replaceModuleExportsRight(\n  program: t.Program,\n  wrappedConfig: t.CallExpression,\n): boolean {\n  const moduleExports = getModuleExports(program);\n  if (!moduleExports) {\n    return false;\n  }\n\n  if (moduleExports.expression.type === 'AssignmentExpression') {\n    moduleExports.expression.right = wrappedConfig;\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Creates const {createSentryMetroSerializer} = require('@sentry/react-native/dist/js/tools/sentryMetroSerializer');\n */\nfunction createSentrySerializerRequire() {\n  return b.variableDeclaration('const', [\n    b.variableDeclarator(\n      b.objectPattern([\n        b.objectProperty.from({\n          key: b.identifier('createSentryMetroSerializer'),\n          value: b.identifier('createSentryMetroSerializer'),\n          shorthand: true,\n        }),\n      ]),\n      b.callExpression(b.identifier('require'), [\n        b.literal('@sentry/react-native/dist/js/tools/sentryMetroSerializer'),\n      ]),\n    ),\n  ]);\n}\n\n/**\n * Creates const {withSentryConfig} = require('@sentry/react-native/metro');\n */\nfunction createSentryMetroRequire() {\n  return b.variableDeclaration('const', [\n    b.variableDeclarator(\n      b.objectPattern([\n        b.objectProperty.from({\n          key: b.identifier('withSentryConfig'),\n          value: b.identifier('withSentryConfig'),\n          shorthand: true,\n        }),\n      ]),\n      b.callExpression(b.identifier('require'), [\n        b.literal('@sentry/react-native/metro'),\n      ]),\n    ),\n  ]);\n}\n\nasync function confirmPathMetroConfig() {\n  const shouldContinue = await abortIfCancelled(\n    clack.select({\n      message: `Metro Config already contains Sentry-related code. Should the wizard modify it anyway?`,\n      options: [\n        {\n          label: 'Yes, add the Sentry Metro plugin',\n          value: true,\n        },\n        {\n          label: 'No, show me instructions to manually add the plugin',\n          value: false,\n        },\n      ],\n      initialValue: true,\n    }),\n  );\n\n  if (!shouldContinue) {\n    Sentry.setTag('ast-mod-fail-reason', 'has-sentry-content');\n  }\n\n  return shouldContinue;\n}\n\n/**\n * Returns value from `module.exports = value` or `const config = value`\n */\nexport function getMetroConfigObject(\n  program: t.Program,\n): t.ObjectExpression | undefined {\n  // check config variable\n  const configVariable = program.body.find((s) => {\n    if (\n      s.type === 'VariableDeclaration' &&\n      s.declarations.length === 1 &&\n      s.declarations[0].type === 'VariableDeclarator' &&\n      s.declarations[0].id.type === 'Identifier' &&\n      s.declarations[0].id.name === 'config'\n    ) {\n      return true;\n    }\n    return false;\n  }) as t.VariableDeclaration | undefined;\n\n  if (\n    configVariable?.declarations[0].type === 'VariableDeclarator' &&\n    configVariable?.declarations[0].init?.type === 'ObjectExpression'\n  ) {\n    Sentry.setTag('metro-config', 'config-variable');\n    return configVariable.declarations[0].init;\n  }\n\n  return getModuleExportsObject(program);\n}\n\nfunction getModuleExportsObject(\n  program: t.Program,\n): t.ObjectExpression | undefined {\n  // check module.exports\n  const moduleExports = getModuleExportsAssignmentRight(program);\n\n  if (moduleExports?.type === 'ObjectExpression') {\n    return moduleExports;\n  }\n\n  Sentry.setTag('metro-config', 'not-found');\n  return undefined;\n}\n\nexport function getModuleExportsAssignmentRight(\n  program: t.Program,\n): t.Identifier | t.CallExpression | t.ObjectExpression | undefined {\n  // check module.exports\n  const moduleExports = getModuleExports(program);\n\n  if (\n    moduleExports?.expression.type === 'AssignmentExpression' &&\n    (moduleExports.expression.right.type === 'ObjectExpression' ||\n      moduleExports.expression.right.type === 'CallExpression' ||\n      moduleExports.expression.right.type === 'Identifier')\n  ) {\n    Sentry.setTag('metro-config', 'module-exports');\n    return moduleExports?.expression.right;\n  }\n\n  Sentry.setTag('metro-config', 'not-found');\n  return undefined;\n}\n\nfunction getModuleExports(\n  program: t.Program,\n): t.ExpressionStatement | undefined {\n  // find module.exports\n  return program.body.find((s) => {\n    if (\n      s.type === 'ExpressionStatement' &&\n      s.expression.type === 'AssignmentExpression' &&\n      s.expression.left.type === 'MemberExpression' &&\n      s.expression.left.object.type === 'Identifier' &&\n      s.expression.left.object.name === 'module' &&\n      s.expression.left.property.type === 'Identifier' &&\n      s.expression.left.property.name === 'exports'\n    ) {\n      return true;\n    }\n    return false;\n  }) as t.ExpressionStatement | undefined;\n}\n\nfunction getMetroSentrySerializerSnippet(colors: boolean) {\n  return makeCodeSnippet(colors, (unchanged, plus, _) =>\n    unchanged(`const {getDefaultConfig, mergeConfig} = require('@react-native/metro-config');\";\n${plus(\n  \"const {createSentryMetroSerializer} = require('@sentry/react-native/dist/js/tools/sentryMetroSerializer');\",\n)}\n\nconst config = {\n  ${plus(`serializer: {\n    customSerializer: createSentryMetroSerializer(),\n  },`)}\n};\n\nmodule.exports = mergeConfig(getDefaultConfig(__dirname), config);\n`),\n  );\n}\n\nfunction getMetroWithSentryConfigSnippet(colors: boolean) {\n  return makeCodeSnippet(colors, (unchanged, plus, _) =>\n    unchanged(`const {getDefaultConfig, mergeConfig} = require('@react-native/metro-config');\";\n${plus(\"const {withSentryConfig} = require('@sentry/react-native/metro');\")}\n\nconst config = {};\n\nmodule.exports = ${plus(\n      'withSentryConfig(',\n    )}mergeConfig(getDefaultConfig(__dirname), config)${plus(')')};\n`),\n  );\n}\n"]}