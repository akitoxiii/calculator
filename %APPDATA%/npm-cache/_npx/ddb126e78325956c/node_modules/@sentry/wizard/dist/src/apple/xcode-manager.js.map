{"version":3,"file":"xcode-manager.js","sourceRoot":"","sources":["../../../src/apple/xcode-manager.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport * as clack from '@clack/prompts';\nimport * as fs from 'node:fs';\nimport * as path from 'node:path';\nimport type { SentryProjectData } from '../utils/types';\nimport * as templates from './templates';\n\nimport {\n  project as createXcodeProject,\n  type PBXBuildFile,\n  type PBXGroup,\n  type PBXNativeTarget,\n  type PBXObjects,\n  type PBXSourcesBuildPhase,\n  type Project,\n  type XCConfigurationList,\n} from 'xcode';\n\ninterface ProjectFile {\n  key: string;\n  path: string;\n}\n\nfunction setDebugInformationFormatAndSandbox(\n  proj: Project,\n  targetName: string,\n): void {\n  const xcObjects = proj.hash.project.objects;\n  if (!xcObjects.PBXNativeTarget) {\n    xcObjects.PBXNativeTarget = {};\n  }\n  const targetKey: string = Object.keys(xcObjects.PBXNativeTarget).filter(\n    (key) => {\n      const value = xcObjects.PBXNativeTarget?.[key];\n      return (\n        !key.endsWith('_comment') &&\n        typeof value !== 'string' &&\n        value?.name === targetName\n      );\n    },\n  )[0];\n  const target = xcObjects.PBXNativeTarget[targetKey] as\n    | PBXNativeTarget\n    | undefined;\n\n  if (!xcObjects.XCBuildConfiguration) {\n    xcObjects.XCBuildConfiguration = {};\n  }\n  if (!xcObjects.XCConfigurationList) {\n    xcObjects.XCConfigurationList = {};\n  }\n  const buildConfigurationListId = target?.buildConfigurationList ?? '';\n  const configurationList = xcObjects.XCConfigurationList?.[\n    buildConfigurationListId\n  ] as XCConfigurationList | undefined;\n  const buildListConfigurationIds =\n    configurationList?.buildConfigurations ?? [];\n  for (const buildListConfigId of buildListConfigurationIds) {\n    const config =\n      xcObjects.XCBuildConfiguration[buildListConfigId.value] ?? {};\n    if (typeof config === 'string') {\n      // Ignore comments\n      continue;\n    }\n\n    const buildSettings = config.buildSettings ?? {};\n    buildSettings.DEBUG_INFORMATION_FORMAT = '\"dwarf-with-dsym\"';\n    buildSettings.ENABLE_USER_SCRIPT_SANDBOXING = '\"NO\"';\n\n    config.buildSettings = buildSettings;\n    xcObjects.XCBuildConfiguration[buildListConfigId.value] = config;\n  }\n}\n\nfunction addSentrySPM(proj: Project, targetName: string): void {\n  const xcObjects = proj.hash.project.objects;\n\n  const sentryFrameworkUUID = proj.generateUuid();\n  const sentrySPMUUID = proj.generateUuid();\n\n  // Check whether xcObjects already have sentry framework\n  if (xcObjects.PBXFrameworksBuildPhase) {\n    for (const key in xcObjects.PBXFrameworksBuildPhase || {}) {\n      const frameworkBuildPhase = xcObjects.PBXFrameworksBuildPhase[key];\n      if (key.endsWith('_comment') || typeof frameworkBuildPhase === 'string') {\n        // Ignore comments\n        continue;\n      }\n      for (const framework of frameworkBuildPhase.files ?? []) {\n        // We identify the Sentry framework by the comment \"Sentry in Frameworks\",\n        // which is set by this manager in previous runs.\n        if (framework.comment === 'Sentry in Frameworks') {\n          return;\n        }\n      }\n    }\n  }\n\n  if (!xcObjects.PBXBuildFile) {\n    xcObjects.PBXBuildFile = {};\n  }\n  xcObjects.PBXBuildFile[sentryFrameworkUUID] = {\n    isa: 'PBXBuildFile',\n    productRef: sentrySPMUUID,\n    productRef_comment: 'Sentry',\n  };\n  xcObjects.PBXBuildFile[`${sentryFrameworkUUID}_comment`] =\n    'Sentry in Frameworks';\n\n  if (!xcObjects.PBXFrameworksBuildPhase) {\n    xcObjects.PBXFrameworksBuildPhase = {};\n  }\n  for (const key in xcObjects.PBXFrameworksBuildPhase) {\n    const value = xcObjects.PBXFrameworksBuildPhase[key];\n    if (key.endsWith('_comment') || typeof value === 'string') {\n      // Ignore comments\n      continue;\n    }\n\n    const frameworks = value.files ?? [];\n    frameworks.push({\n      value: sentryFrameworkUUID,\n      comment: 'Sentry in Frameworks',\n    });\n    value.files = frameworks;\n\n    xcObjects.PBXFrameworksBuildPhase[key] = value;\n  }\n\n  if (!xcObjects.PBXNativeTarget) {\n    xcObjects.PBXNativeTarget = {};\n  }\n  const targetKey = Object.keys(xcObjects.PBXNativeTarget || {}).filter(\n    (key) => {\n      const value = xcObjects.PBXNativeTarget?.[key];\n      return (\n        !key.endsWith('_comment') &&\n        typeof value !== 'string' &&\n        value?.name === targetName\n      );\n    },\n  )[0];\n  const target = xcObjects.PBXNativeTarget[targetKey] as PBXNativeTarget;\n\n  if (!target.packageProductDependencies) {\n    target.packageProductDependencies = [];\n  }\n  target.packageProductDependencies.push({\n    value: sentrySPMUUID,\n    comment: 'Sentry',\n  });\n\n  const sentrySwiftPackageUUID = proj.generateUuid();\n  const xcProject = proj.getFirstProject().firstProject;\n  if (!xcProject.packageReferences) {\n    xcProject.packageReferences = [];\n  }\n  xcProject.packageReferences.push({\n    value: sentrySwiftPackageUUID,\n    comment: 'XCRemoteSwiftPackageReference \"sentry-cocoa\"',\n  });\n\n  if (!xcObjects.XCRemoteSwiftPackageReference) {\n    xcObjects.XCRemoteSwiftPackageReference = {};\n  }\n\n  xcObjects.XCRemoteSwiftPackageReference[sentrySwiftPackageUUID] = {\n    isa: 'XCRemoteSwiftPackageReference',\n    repositoryURL: '\"https://github.com/getsentry/sentry-cocoa/\"',\n    requirement: {\n      kind: 'upToNextMajorVersion',\n      minimumVersion: '8.0.0',\n    },\n  };\n  xcObjects.XCRemoteSwiftPackageReference[`${sentrySwiftPackageUUID}_comment`] =\n    'XCRemoteSwiftPackageReference \"sentry-cocoa\"';\n\n  if (!xcObjects.XCSwiftPackageProductDependency) {\n    xcObjects.XCSwiftPackageProductDependency = {};\n  }\n  xcObjects.XCSwiftPackageProductDependency[sentrySPMUUID] = {\n    isa: 'XCSwiftPackageProductDependency',\n    package: sentrySwiftPackageUUID,\n    package_comment: 'XCRemoteSwiftPackageReference \"sentry-cocoa\"',\n    productName: 'Sentry',\n  };\n  xcObjects.XCSwiftPackageProductDependency[`${sentrySPMUUID}_comment`] =\n    'Sentry';\n\n  clack.log.step('Added Sentry SPM dependency to your project');\n}\n\nfunction addUploadSymbolsScript(\n  xcodeProject: Project,\n  sentryProject: SentryProjectData,\n  targetName: string,\n  uploadSource: boolean,\n): void {\n  const xcObjects = xcodeProject.hash.project.objects;\n  if (!xcObjects.PBXNativeTarget) {\n    xcObjects.PBXNativeTarget = {};\n  }\n  const targetKey = Object.keys(xcObjects.PBXNativeTarget).filter((key) => {\n    const value = xcObjects.PBXNativeTarget?.[key];\n    return (\n      !key.endsWith('_comment') &&\n      typeof value !== 'string' &&\n      value?.name === targetName\n    );\n  })[0];\n\n  if (!xcObjects.PBXShellScriptBuildPhase) {\n    xcObjects.PBXShellScriptBuildPhase = {};\n  }\n  for (const key in xcObjects.PBXShellScriptBuildPhase) {\n    const value = xcObjects.PBXShellScriptBuildPhase[key] ?? {};\n    if (typeof value === 'string') {\n      // Ignore comments\n      continue;\n    }\n\n    // Sentry script already exists, update it\n    if (value.shellScript?.includes('sentry-cli')) {\n      delete xcObjects.PBXShellScriptBuildPhase?.[key];\n      delete xcObjects.PBXShellScriptBuildPhase?.[`${key}_comment`];\n      break;\n    }\n    xcObjects.PBXShellScriptBuildPhase[key] = value;\n  }\n\n  const isHomebrewInstalled = fs.existsSync('/opt/homebrew/bin/sentry-cli');\n  xcodeProject.addBuildPhase(\n    [],\n    'PBXShellScriptBuildPhase',\n    'Upload Debug Symbols to Sentry',\n    targetKey,\n    {\n      inputFileListPaths: [],\n      outputFileListPaths: [],\n      inputPaths: [templates.scriptInputPath],\n      shellPath: '/bin/sh',\n      shellScript: templates.getRunScriptTemplate(\n        sentryProject.organization.slug,\n        sentryProject.slug,\n        uploadSource,\n        isHomebrewInstalled,\n      ),\n    },\n  );\n  clack.log.step(`Added Sentry upload script to \"${targetName}\" build phase`);\n}\n\nexport class XcodeProject {\n  projectPath: string;\n  project: Project;\n  objects: PBXObjects;\n  files: ProjectFile[] | undefined;\n\n  /**\n   * Creates a new XcodeProject instance, a wrapper around the Xcode project file `<PROJECT>.xcodeproj/project.pbxproj`.\n   *\n   * @param projectPath - The path to the Xcode project file\n   */\n  public constructor(projectPath: string) {\n    this.projectPath = projectPath;\n    this.project = createXcodeProject(projectPath);\n    this.project.parseSync();\n    this.objects = this.project.hash.project.objects;\n  }\n\n  public getAllTargets(): string[] {\n    const targets = this.objects.PBXNativeTarget ?? {};\n    return Object.keys(targets)\n      .filter((key) => {\n        const value = targets[key];\n        return (\n          !key.endsWith('_comment') &&\n          typeof value !== 'string' &&\n          value.productType.startsWith('\"com.apple.product-type.application')\n        );\n      })\n      .map((key) => {\n        return (targets[key] as PBXNativeTarget).name;\n      });\n  }\n\n  public updateXcodeProject(\n    sentryProject: SentryProjectData,\n    target: string,\n    addSPMReference: boolean,\n    uploadSource = true,\n  ): void {\n    addUploadSymbolsScript(this.project, sentryProject, target, uploadSource);\n    if (uploadSource) {\n      setDebugInformationFormatAndSandbox(this.project, target);\n    }\n    if (addSPMReference) {\n      addSentrySPM(this.project, target);\n    }\n    const newContent = this.project.writeSync();\n    fs.writeFileSync(this.projectPath, newContent);\n  }\n\n  public filesForTarget(target: string): string[] | undefined {\n    const files = this.projectFiles();\n    const fileDictionary: Record<string, string> = {};\n    files.forEach((file) => {\n      fileDictionary[file.key] = file.path;\n    });\n\n    const targets = this.objects.PBXNativeTarget || {};\n    const nativeTarget = Object.keys(targets).filter((key) => {\n      const value = targets[key];\n      return (\n        !key.endsWith('_comment') &&\n        typeof value !== 'string' &&\n        value.name === target\n      );\n    })[0];\n\n    if (nativeTarget === undefined) {\n      return undefined;\n    }\n\n    const buildPhaseKey = (\n      targets[nativeTarget] as PBXNativeTarget\n    ).buildPhases?.filter((phase) => {\n      return this.objects.PBXSourcesBuildPhase?.[phase.value] !== undefined;\n    })[0];\n\n    if (buildPhaseKey === undefined) {\n      return undefined;\n    }\n\n    const buildPhase = this.objects.PBXSourcesBuildPhase?.[\n      buildPhaseKey.value\n    ] as PBXSourcesBuildPhase;\n    const buildPhaseFiles = buildPhase?.files ?? [];\n\n    const baseDir = path.dirname(path.dirname(this.projectPath));\n\n    return buildPhaseFiles\n      .map((file) => {\n        const fileRef = (\n          this.objects.PBXBuildFile?.[file.value] as PBXBuildFile\n        )?.fileRef;\n        if (!fileRef) {\n          return '';\n        }\n        const buildFile = fileDictionary[fileRef];\n        if (!buildFile) {\n          return '';\n        }\n        return path.join(baseDir, buildFile);\n      })\n      .filter((f: string) => f.length > 0);\n  }\n\n  projectFiles(): ProjectFile[] {\n    if (this.files === undefined) {\n      const proj = this.project.getFirstProject();\n      const mainGroupKey = proj.firstProject.mainGroup;\n      const mainGroup = this.objects.PBXGroup?.[mainGroupKey];\n      if (!mainGroup || typeof mainGroup === 'string') {\n        return [];\n      }\n      this.files = this.buildGroup(mainGroup);\n    }\n    return this.files;\n  }\n\n  buildGroup(group: PBXGroup, path = ''): ProjectFile[] {\n    const result: ProjectFile[] = [];\n    for (const child of group.children ?? []) {\n      const fileReference = this.objects.PBXFileReference?.[child.value];\n      const groupReference = this.objects.PBXGroup?.[child.value];\n      if (fileReference) {\n        if (typeof fileReference === 'string') {\n          continue;\n        }\n        result.push({\n          key: child.value,\n          path: `${path}${fileReference.path.replace(/\"/g, '')}`,\n        });\n      } else if (groupReference) {\n        if (typeof groupReference === 'string') {\n          continue;\n        }\n        const groupChildren = this.buildGroup(\n          groupReference,\n          groupReference.path\n            ? `${path}${groupReference.path.replace(/\"/g, '')}/`\n            : path,\n        );\n        result.push(...groupChildren);\n      }\n    }\n    return result;\n  }\n}\n"]}