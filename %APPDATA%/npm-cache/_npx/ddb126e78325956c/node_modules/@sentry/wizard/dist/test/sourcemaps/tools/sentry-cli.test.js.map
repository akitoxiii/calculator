{"version":3,"file":"sentry-cli.test.js","sourceRoot":"","sources":["../../../../test/sourcemaps/tools/sentry-cli.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAyB;AAEzB,yEAA0F;AAE1F,0FAA4E;AAC5E,oDAA6D;AAE7D,mCAA6D;AAE7D,MAAM,YAAY,GAAG,WAAE;KACpB,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,WAAW,CAAC;KAC/B,kBAAkB,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;AAE/C,WAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC7B,OAAO;QACL,GAAG,EAAE;YACH,IAAI,EAAE,WAAE,CAAC,EAAE,EAAE;YACb,OAAO,EAAE,WAAE,CAAC,EAAE,EAAE;SACjB;QACD,OAAO,EAAE,WAAE,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC;QACxC,QAAQ,EAAE,WAAE,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,KAAK,CAAC;KACzC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,+DAA+D;AAC/D,WAAE,CAAC,IAAI,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE,CAAC,CAAC;IAC/C,GAAG,CAAC,MAAM,WAAE,CAAC,YAAY,CAAC,0BAA0B,CAAC,CAAC;IACtD,iBAAiB,EAAE,WAAE,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC;QAC3C,OAAO,EAAE;YACP,KAAK,EAAE,KAAK;SACb;QACD,OAAO,EAAE,OAAO;KACjB,CAAC;CACH,CAAC,CAAC,CAAC;AAEJ,IAAA,iBAAQ,EAAC,gCAAgC,EAAE,GAAG,EAAE;IAC9C,IAAA,kBAAS,EAAC,GAAG,EAAE;QACb,WAAE,CAAC,aAAa,EAAE,CAAC;IACrB,CAAC,CAAC,CAAC;IACH,WAAE,CAAC,IAAI,CAAC;QACN;YACE,qBAAqB,CAAC,GAAG;YACzB,qBAAqB,CAAC,IAAI;YAC1B,qBAAqB,CAAC,OAAO;YAC7B,qBAAqB,CAAC,OAAO;YAC7B,qBAAqB,CAAC,GAAG;YACzB,qBAAqB,CAAC,IAAI;SAC3B;KACF,CAAC,CAAC,iDAAiD,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE;QACxE,WAAE,CAAC,KAAK,CAAC,qBAAqB,EAAE,sBAAsB,CAAC,CAAC,eAAe,CACrE,MAAM,CACP,CAAC;QACF,MAAM,IAAA,2CAA8B,GAAE,CAAC;QACvC,IAAA,eAAM,EAAC,YAAY,CAAC,CAAC,oBAAoB,CACvC,eAAM,CAAC,gBAAgB,CAAC,cAAc,CAAC,EACvC,eAAM,CAAC,gBAAgB,CACrB,UAAU,MAAM,CAAC,gBAAgB,oBAAoB,CACtD,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAA,WAAE,EAAC,8EAA8E,EAAE,KAAK,IAAI,EAAE;QAC5F,WAAE,CAAC,MAAM,CAAC,yBAAiB,CAAC,CAAC,iBAAiB,CAAC;YAC7C,OAAO,EAAE;gBACP,KAAK,EAAE,0BAA0B;aAClC;YACD,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QAEH,MAAM,IAAA,2CAA8B,GAAE,CAAC;QAEvC,IAAA,eAAM,EAAC,YAAY,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;IAC9C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import * as fs from 'fs';\n\nimport { addSentryCommandToBuildCommand } from '../../../src/sourcemaps/tools/sentry-cli';\n\nimport * as packageManagerHelpers from '../../../src/utils/package-manager';\nimport { getPackageDotJson } from '../../../src/utils/clack';\n\nimport { vi, it, describe, expect, afterEach } from 'vitest';\n\nconst writeFileSpy = vi\n  .spyOn(fs.promises, 'writeFile')\n  .mockImplementation(() => Promise.resolve());\n\nvi.mock('@clack/prompts', () => {\n  return {\n    log: {\n      info: vi.fn(),\n      success: vi.fn(),\n    },\n    confirm: vi.fn().mockResolvedValue(true),\n    isCancel: vi.fn().mockReturnValue(false),\n  };\n});\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-return\nvi.mock('../../../src/utils/clack', async () => ({\n  ...(await vi.importActual('../../../src/utils/clack')),\n  getPackageDotJson: vi.fn().mockResolvedValue({\n    scripts: {\n      build: 'tsc',\n    },\n    version: '1.0.0',\n  }),\n}));\n\ndescribe('addSentryCommandToBuildCommand', () => {\n  afterEach(() => {\n    vi.clearAllMocks();\n  });\n  it.each([\n    [\n      packageManagerHelpers.NPM,\n      packageManagerHelpers.PNPM,\n      packageManagerHelpers.YARN_V1,\n      packageManagerHelpers.YARN_V2,\n      packageManagerHelpers.BUN,\n      packageManagerHelpers.DENO,\n    ],\n  ])('adds the cli command to the script command (%s)', async (_, pacMan) => {\n    vi.spyOn(packageManagerHelpers, '_detectPackageManger').mockReturnValue(\n      pacMan,\n    );\n    await addSentryCommandToBuildCommand();\n    expect(writeFileSpy).toHaveBeenCalledWith(\n      expect.stringContaining('package.json'),\n      expect.stringContaining(\n        `tsc && ${pacMan.runScriptCommand} sentry:sourcemaps`,\n      ),\n    );\n  });\n\n  it('does not add the cli command to the script command if it is already in there', async () => {\n    vi.mocked(getPackageDotJson).mockResolvedValue({\n      scripts: {\n        build: 'tsc && sentry:sourcemaps',\n      },\n      version: '1.0.0',\n    });\n\n    await addSentryCommandToBuildCommand();\n\n    expect(writeFileSpy).not.toHaveBeenCalled();\n  });\n});\n"]}