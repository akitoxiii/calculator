{"version":3,"file":"angular.js","sourceRoot":"","sources":["../../../../src/sourcemaps/tools/angular.ts"],"names":[],"mappings":";;;;;;AAAA,+EAA+E;AAC/E,6DAAmC;AACnC,kDAA0B;AAC1B,6CAAsE;AAEzD,QAAA,mBAAmB,GAAG,IAAA,uBAAe,EAAC,IAAI,EAAE,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAC3E,SAAS,CAAC;;;;;;cAME,IAAI,CAAC,mBAAmB,CAAC;;;;;;EAMrC,CAAC,CACF,CAAC;AAEK,KAAK,UAAU,uCAAuC;IAC3D,iBAAK,CAAC,GAAG,CAAC,IAAI,CACZ,yCAAyC,eAAK,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAC5E,CAAC;IAEF,gGAAgG;IAChG,sCAAsC;IACtC,OAAO,CAAC,GAAG,CAAC,2BAAmB,CAAC,CAAC;IAEjC,MAAM,IAAA,wBAAgB,EACpB,iBAAK,CAAC,MAAM,CAAC;QACX,OAAO,EAAE,4EAA4E;QACrF,OAAO,EAAE;YACP;gBACE,KAAK,EAAE,YAAY;gBACnB,IAAI,EAAE,8DAA8D;gBACpE,KAAK,EAAE,IAAI;aACZ;SACF;QACD,YAAY,EAAE,IAAI;KACnB,CAAC,CACH,CAAC;AACJ,CAAC;AAtBD,0FAsBC","sourcesContent":["// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport clack from '@clack/prompts';\nimport chalk from 'chalk';\nimport { abortIfCancelled, makeCodeSnippet } from '../../utils/clack';\n\nexport const angularJsonTemplate = makeCodeSnippet(true, (unchanged, plus) =>\n  unchanged(`{\n  \"projects\": {\n    'your-project': {\n      \"architect\": {\n        \"build\": {\n          \"options\": {\n            ${plus(`\"sourceMap\": true`)}\n          },\n        },\n      }\n    }\n  }\n}`),\n);\n\nexport async function configureAngularSourcemapGenerationFlow(): Promise<void> {\n  clack.log.info(\n    `Enable generating source maps in your ${chalk.bold('angular.json')} file:`,\n  );\n\n  // Intentionally logging directly to console here so that the code can be copied/pasted directly\n  // eslint-disable-next-line no-console\n  console.log(angularJsonTemplate);\n\n  await abortIfCancelled(\n    clack.select({\n      message: `Verify that you are generating source maps when building your Angular app.`,\n      options: [\n        {\n          label: 'I checked!',\n          hint: 'My build output folder contains .js.map files after a build.',\n          value: true,\n        },\n      ],\n      initialValue: true,\n    }),\n  );\n}\n"]}