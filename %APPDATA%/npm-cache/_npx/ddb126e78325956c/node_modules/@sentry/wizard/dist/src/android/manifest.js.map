{"version":3,"file":"manifest.js","sourceRoot":"","sources":["../../../src/android/manifest.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport * as fs from 'fs';\n// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport * as clack from '@clack/prompts';\nimport * as Sentry from '@sentry/node';\nimport { manifest } from './templates';\nimport xml, { Attributes, ElementCompact } from 'xml-js';\nimport chalk from 'chalk';\n\n/**\n * Looks for the closing </application> tag in the manifest and adds the Sentry config after it.\n *\n * For example:\n * ```xml\n * <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n *   xmlns:tools=\"http://schemas.android.com/tools\">\n *\n *   <application>\n *     ...\n *     // this is what we add and more\n *     <meta-data android:name=\"io.sentry.dsn\" android:value=\"__dsn__\" />\n *   </application> <!-- we are looking for this one\n * </manifest>\n * ```\n *\n * @param manifestFile the path to the main AndroidManifest.xml file\n * @param dsn\n * @returns true if successfully patched the manifest, false otherwise\n */\nexport function addManifestSnippet(manifestFile: string, dsn: string): boolean {\n  if (!fs.existsSync(manifestFile)) {\n    clack.log.warn('AndroidManifest.xml not found.');\n    Sentry.captureException('No AndroidManifest file');\n    return false;\n  }\n\n  const manifestContent = fs.readFileSync(manifestFile, 'utf8');\n\n  if (/android:name=\"io\\.sentry[^\"]*\"/i.test(manifestContent)) {\n    // sentry is already configured\n    clack.log.success(chalk.greenBright('Sentry SDK is already configured.'));\n    return true;\n  }\n\n  const applicationMatch = /<\\/application>/i.exec(manifestContent);\n  if (!applicationMatch) {\n    clack.log.warn('<application> tag not found within the manifest.');\n    Sentry.captureException('No <application> tag');\n    return false;\n  }\n\n  const insertionIndex = applicationMatch.index;\n  const newContent =\n    manifestContent.slice(0, insertionIndex) +\n    manifest(dsn) +\n    manifestContent.slice(insertionIndex);\n  fs.writeFileSync(manifestFile, newContent, 'utf8');\n\n  clack.log.success(\n    chalk.greenBright(\n      `Updated ${chalk.bold(\n        'AndroidManifest.xml',\n      )} with the Sentry SDK configuration.`,\n    ),\n  );\n\n  return true;\n}\n\n/**\n * There might be multiple <activity> in the manifest, as well as multiple <activity-alias> with category LAUNCHER,\n * but only one main activity with action MAIN. We are looking for this one by parsing xml and walking it.\n *\n * In addition, older Android versions required to specify the packag name in the manifest,\n * while the new ones - in the Gradle config. So we are just sanity checking if the package name\n * is in the manifest and returning it as well.\n *\n * For example:\n *\n * ```xml\n * <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n *   xmlns:tools=\"http://schemas.android.com/tools\"\n *   package=\"com.example.sample\">\n *\n *   <application>\n *     <activity\n *       android:name=\"ui.MainActivity\"\n *       ...other props>\n *        <intent-filter>\n *          <action android:name=\"android.intent.action.MAIN\" /> <!-- we are looking for this one\n *\n *          <category android:name=\"android.intent.category.LAUNCHER\" />\n *        </intent-filter>\n *     </activity>\n *   </application>\n * </manifest>\n * ```\n *\n * @param manifestFile path to the AndroidManifest.xml file\n * @returns package name (if available in the manifest) + the main activity name\n */\nexport function getMainActivity(manifestFile: string): {\n  packageName?: string;\n  activityName?: string;\n} {\n  if (!fs.existsSync(manifestFile)) {\n    clack.log.warn('AndroidManifest.xml not found.');\n    Sentry.captureException('No AndroidManifest file');\n    return {};\n  }\n\n  const manifestContent = fs.readFileSync(manifestFile, 'utf8');\n  const converted: ElementCompact = xml.xml2js(manifestContent, {\n    compact: true,\n  });\n  const activities: ElementCompact[] | ElementCompact | undefined =\n    converted.manifest?.application?.activity;\n  const packageName: string | undefined =\n    converted.manifest?._attributes?.['package'];\n\n  if (!activities) {\n    clack.log.warn('No activity found in AndroidManifest.');\n    Sentry.captureException('No Activity');\n    return {};\n  }\n\n  let mainActivity;\n  if (Array.isArray(activities)) {\n    const withIntentFilter = activities.filter((a) => !!a['intent-filter']);\n    mainActivity = withIntentFilter.find((a) => isMainActivity(a));\n  } else if (isMainActivity(activities)) {\n    mainActivity = activities;\n  }\n\n  if (!mainActivity) {\n    clack.log.warn('No main activity found in AndroidManifest.');\n    Sentry.captureException('No Main Activity');\n    return {};\n  }\n\n  const attrs = mainActivity._attributes;\n  const activityName = attrs?.['android:name'] as string | undefined;\n  return { packageName: packageName, activityName: activityName };\n}\n\nfunction isMainActivity(activity: ElementCompact): boolean {\n  const intentFilters: ElementCompact[] | ElementCompact =\n    activity['intent-filter'];\n  if (Array.isArray(intentFilters)) {\n    return intentFilters.some((i) => {\n      const action: ElementCompact[] | ElementCompact | undefined = i.action;\n      return hasMainAction(action);\n    });\n  } else {\n    const action: ElementCompact[] | ElementCompact | undefined =\n      intentFilters.action;\n    return hasMainAction(action);\n  }\n}\n\nfunction hasMainAction(\n  action: ElementCompact[] | ElementCompact | undefined,\n): boolean {\n  if (!action) {\n    return false;\n  }\n\n  function isMain(attrs?: Attributes): boolean {\n    return attrs?.['android:name'] === 'android.intent.action.MAIN';\n  }\n\n  if (Array.isArray(action)) {\n    return action.some((c) => {\n      return isMain(c._attributes);\n    });\n  } else {\n    return isMain(action._attributes);\n  }\n}\n"]}