{"version":3,"file":"code-tools.test.js","sourceRoot":"","sources":["../../../test/flutter/code-tools.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { describe, expect, it } from 'vitest';\nimport {\n  patchMainContent,\n  getDependenciesLocation,\n  getDevDependenciesLocation,\n  getLastImportLineLocation,\n} from '../../src/flutter/code-tools';\nimport { initSnippet } from '../../src/flutter/templates';\n\ndescribe('code-tools', () => {\n  const pubspec = `name: flutter_example\ndescription: An example flutter app.\nversion: 1.0.0\npublish_to: 'none' # Remove this line if you wish to publish to pub.dev\n\nenvironment:\n  sdk: '>=2.17.0 <4.0.0'\n  flutter: '>=3.0.0'\n\ndependencies:\n  flutter:\n    sdk: flutter\n\ndev_dependencies:\n  flutter_lints: ^2.0.0\n`;\n\n  const simpleRunApp = `import 'package:flutter/widgets.dart';\n\nvoid main() {\n  runApp(const MyApp());\n}\n`;\n\n  const asyncRunApp = `import 'package:flutter/widgets.dart';\n\nvoid main() {\n  runApp(const MyApp());\n}\n`;\n\n  const selectedFeaturesMap = {\n    tracing: true,\n    profiling: true,\n  };\n\n  const simpleRunAppPatched = `import 'package:flutter/widgets.dart';\nimport 'package:sentry_flutter/sentry_flutter.dart';\n\nFuture<void> main() async {\n  ${initSnippet('dsn', selectedFeaturesMap, 'const MyApp()')}\n}\n`;\n\n  const paramRunApp = `import 'package:flutter/widgets.dart';\n\nFuture<void> main() async {\n  await someFunction();\n  runApp(MyApp(param: SomeParam()));\n  await anotherFunction();\n}\n`;\n\n  const paramRunAppPatched = `import 'package:flutter/widgets.dart';\nimport 'package:sentry_flutter/sentry_flutter.dart';\n\nFuture<void> main() async {\n  await someFunction();\n  ${initSnippet('dsn', selectedFeaturesMap, 'MyApp(param: SomeParam())')}\n  await anotherFunction();\n}\n`;\n\n  const multilineRunApp = `import 'package:flutter/widgets.dart';\n\nvoid main() {\n  runApp(\n    MyApp(\n      param: Param(),\n      multi: Another(1),\n      line: await bites(the: \"dust\"),\n    ),\n  );\n  anotherFunction();\n}\n`;\n\n  const multilineRunAppPatched = `import 'package:flutter/widgets.dart';\nimport 'package:sentry_flutter/sentry_flutter.dart';\n\nFuture<void> main() async {\n  ${initSnippet(\n    'dsn',\n    selectedFeaturesMap,\n    `\n    MyApp(\n      param: Param(),\n      multi: Another(1),\n      line: await bites(the: \"dust\"),\n    ),\n  `,\n  )}\n  anotherFunction();\n}\n`;\n\n  describe('patchMainContent', () => {\n    it('wraps simple runApp', () => {\n      expect(patchMainContent('dsn', simpleRunApp, selectedFeaturesMap)).toBe(\n        simpleRunAppPatched,\n      );\n    });\n\n    it('wraps async runApp', () => {\n      expect(patchMainContent('dsn', asyncRunApp, selectedFeaturesMap)).toBe(\n        simpleRunAppPatched,\n      );\n    });\n\n    it('wraps runApp with parameterized app', () => {\n      expect(patchMainContent('dsn', paramRunApp, selectedFeaturesMap)).toBe(\n        paramRunAppPatched,\n      );\n    });\n\n    it('wraps multiline runApp', () => {\n      expect(\n        patchMainContent('dsn', multilineRunApp, selectedFeaturesMap),\n      ).toBe(multilineRunAppPatched);\n    });\n  });\n\n  describe('pubspec', () => {\n    it('returns proper line index for dependencies', () => {\n      expect(getDependenciesLocation(pubspec)).toBe(\n        pubspec.indexOf('  flutter:\\n'),\n      );\n    });\n\n    it('returns proper line index for dev-dependencies', () => {\n      expect(getDevDependenciesLocation(pubspec)).toBe(\n        pubspec.indexOf('  flutter_lints: ^2.0.0\\n'),\n      );\n    });\n  });\n\n  describe('getLastImportLineLocation', () => {\n    it('returns proper line index', () => {\n      const code =\n        `import 'foo:bar';\\n` + `//<insert-location>\\n` + `class X {}`;\n      expect(getLastImportLineLocation(code)).toBe(\n        code.indexOf('//<insert-location>'),\n      );\n    });\n\n    it('returns proper line index when alias import is used', () => {\n      const code =\n        `import 'package:my_library/utils.dart' as utils;\\n` +\n        `//<insert-location>\\n` +\n        `class X {}`;\n      expect(getLastImportLineLocation(code)).toBe(\n        code.indexOf('//<insert-location>'),\n      );\n    });\n\n    it('returns proper line index when specific parts import is used', () => {\n      const code =\n        `import 'dart:math' show pi, sin;\\n` +\n        `//<insert-location>\\n` +\n        `class X {}`;\n      expect(getLastImportLineLocation(code)).toBe(\n        code.indexOf('//<insert-location>'),\n      );\n    });\n\n    it('returns proper line index when hide import is used', () => {\n      const code =\n        `import 'dart:math' hide Random;\\n` +\n        `//<insert-location>\\n` +\n        `class X {}`;\n      expect(getLastImportLineLocation(code)).toBe(\n        code.indexOf('//<insert-location>'),\n      );\n    });\n\n    it('returns proper line index when deferred import is used', () => {\n      const code =\n        `import 'package:my_library/large_library.dart' deferred as largeLibrary;\\n` +\n        `//<insert-location>\\n` +\n        `class X {}`;\n      expect(getLastImportLineLocation(code)).toBe(\n        code.indexOf('//<insert-location>'),\n      );\n    });\n\n    it('returns proper line index when multiple imports (with newlines) are present', () => {\n      const code =\n        `import 'foo:bar';\\n` +\n        `import 'package:my_library/utils.dart' as utils;\\n` +\n        `import 'dart:math' show pi, sin;\\n` +\n        `import 'dart:math' hide Random;\\n` +\n        `\\n` +\n        `import 'package:my_library/large_library.dart' deferred as largeLibrary;\\n` +\n        `//<insert-location>\\n` +\n        `class X {}`;\n      expect(getLastImportLineLocation(code)).toBe(\n        code.indexOf('//<insert-location>'),\n      );\n    });\n  });\n});\n"]}