{"version":3,"file":"sourcemaps.js","sourceRoot":"","sources":["../../../../src/angular/codemods/sourcemaps.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+EAA+E;AAC/E,sDAAwC;AACxC,2CAA6B;AAC7B,uCAAyB;AACzB,4DAAyF;AACzF,uCAAgD;AAkBzC,KAAK,UAAU,8BAA8B;IAClD,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,cAAc,CAAC,CAAC;IACjE,MAAM,WAAW,GAAG,oBAAoB,CAAC,eAAe,CAAC,CAAC;IAE1D,IAAI,CAAC,WAAW,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;QACnD,MAAM,IAAA,iDAAuC,GAAE,CAAC;QAChD,OAAO;KACR;IAED,MAAM,kBAAkB,GAAG,oBAAoB,CAAC,WAAW,CAAC,CAAC;IAE7D,IAAI,CAAC,kBAAkB,EAAE;QACvB,MAAM,IAAA,iDAAuC,GAAE,CAAC;QAChD,OAAO;KACR;IAED,IAAI;QACF,EAAE,CAAC,aAAa,CACd,eAAe,EACf,IAAI,CAAC,SAAS,CAAC,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC,CAC5C,CAAC;KACH;IAAC,OAAO,KAAK,EAAE;QACd,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,yDAAyD,CAAC,CAAC;QAC3E,IAAA,uBAAgB,EAAC,yDAAyD,CAAC,CAAC;QAC5E,MAAM,IAAA,iDAAuC,GAAE,CAAC;KACjD;AACH,CAAC;AA1BD,wEA0BC;AAED;;GAEG;AACH,SAAgB,oBAAoB,CAClC,WAA+B;IAE/B,MAAM,cAAc,GAAG,EAAE,GAAG,WAAW,EAAE,CAAC;IAE1C,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;IAE/D,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE;QACnD,OAAO,SAAS,CAAC;KAClB;IAED,oDAAoD;IACpD,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;QACpC,MAAM,aAAa,GAAG,cAAc,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAE1D,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;YAC5B,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;SAC9B;QAED,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,EAAE;YAClC,aAAa,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;SACpC;QAED,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,EAAE;YACjD,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,GAAG,EAAE,CAAC;SACnD;QAED,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,GAAG;YACxD,GAAG,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU;YAC1D,SAAS,EAAE,IAAI;SAChB,CAAC;KACH;IAED,OAAO,cAAc,CAAC;AACxB,CAAC;AAlCD,oDAkCC;AAED,SAAS,oBAAoB,CAAC,IAAY;IACxC,IAAI;QACF,MAAM,eAAe,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAmC,CAAC;KACtE;IAAC,MAAM;QACN,IAAA,uBAAgB,EAAC,gCAAgC,CAAC,CAAC;QACnD,OAAO,SAAS,CAAC;KAClB;AACH,CAAC","sourcesContent":["// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport * as clack from '@clack/prompts';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { configureAngularSourcemapGenerationFlow } from '../../sourcemaps/tools/angular';\nimport { captureException } from '@sentry/node';\n\ninterface PartialAngularJson {\n  projects?: {\n    [key: string]: {\n      architect?: {\n        build?: {\n          configurations?: {\n            production?: {\n              sourceMap?: boolean;\n            } & Record<string, unknown>;\n          };\n        };\n      };\n    };\n  };\n}\n\nexport async function addSourcemapEntryToAngularJSON(): Promise<void> {\n  const angularJsonPath = path.join(process.cwd(), 'angular.json');\n  const angularJson = getParsedAngularJson(angularJsonPath);\n\n  if (!angularJson || typeof angularJson !== 'object') {\n    await configureAngularSourcemapGenerationFlow();\n    return;\n  }\n\n  const updatedAngularJson = addSourceMapsSetting(angularJson);\n\n  if (!updatedAngularJson) {\n    await configureAngularSourcemapGenerationFlow();\n    return;\n  }\n\n  try {\n    fs.writeFileSync(\n      angularJsonPath,\n      JSON.stringify(updatedAngularJson, null, 2),\n    );\n  } catch (error) {\n    clack.log.error(`Failed to write sourcemap configuration to angular.json`);\n    captureException('Failed to write sourcemap configuration to angular.json');\n    await configureAngularSourcemapGenerationFlow();\n  }\n}\n\n/**\n * Extracted from `addSourcemapEntryToAngularJSON` and exported to allow for easier testing.\n */\nexport function addSourceMapsSetting(\n  angularJson: PartialAngularJson,\n): PartialAngularJson | undefined {\n  const newAngularJson = { ...angularJson };\n\n  const projectKeys = Object.keys(newAngularJson.projects || {});\n\n  if (!projectKeys.length || !newAngularJson.projects) {\n    return undefined;\n  }\n\n  // Emit sourcemaps from all projects in angular.json\n  for (const projectKey of projectKeys) {\n    const projectConfig = newAngularJson.projects[projectKey];\n\n    if (!projectConfig.architect) {\n      projectConfig.architect = {};\n    }\n\n    if (!projectConfig.architect.build) {\n      projectConfig.architect.build = {};\n    }\n\n    if (!projectConfig.architect.build.configurations) {\n      projectConfig.architect.build.configurations = {};\n    }\n\n    projectConfig.architect.build.configurations.production = {\n      ...projectConfig.architect.build.configurations.production,\n      sourceMap: true,\n    };\n  }\n\n  return newAngularJson;\n}\n\nfunction getParsedAngularJson(path: string): PartialAngularJson | undefined {\n  try {\n    const angularJSONFile = fs.readFileSync(path, 'utf-8');\n    return JSON.parse(angularJSONFile) as PartialAngularJson | undefined;\n  } catch {\n    captureException('Could not parse `angular.json`');\n    return undefined;\n  }\n}\n"]}