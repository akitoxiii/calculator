{"version":3,"file":"expo.test.js","sourceRoot":"","sources":["../../../test/react-native/expo.test.ts"],"names":[],"mappings":";;AAAA,mCAAgD;AAChD,sDAA2E;AAG3E,IAAA,iBAAQ,EAAC,MAAM,EAAE,GAAG,EAAE;IACpB,MAAM,WAAW,GAA4B;QAC3C,GAAG,EAAE,sBAAsB;QAC3B,GAAG,EAAE,aAAa;QAClB,OAAO,EAAE,cAAc;QACvB,SAAS,EAAE,gBAAgB;KAC5B,CAAC;IAEF,IAAA,iBAAQ,EAAC,8BAA8B,EAAE,GAAG,EAAE;QAC5C,IAAA,aAAI,EAAC,mCAAmC,EAAE,GAAG,EAAE;YAC7C,MAAM,aAAa,GAAG;;;;QAIpB,CAAC;YACH,IAAA,eAAM,EACJ,IAAA,mCAA4B,EAAC,aAAa,EAAE,WAAW,CAAC,CACzD,CAAC,QAAQ,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,IAAA,aAAI,EAAC,gDAAgD,EAAE,GAAG,EAAE;YAC1D,MAAM,aAAa,GAAG;;;;QAIpB,CAAC;YACH,IAAA,eAAM,EACJ,IAAA,mCAA4B,EAAC,aAAa,EAAE,WAAW,CAAC,CACzD,CAAC,QAAQ,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,aAAI,CAAC,IAAI,CAAC;YACR;gBACE;;;;UAIE;aACH;YACD;gBACE;;UAEE;aACH;SACF,CAAC,CAAC,uCAAuC,EAAE,CAAC,aAAa,EAAE,EAAE;YAC5D,IAAA,eAAM,EACJ,IAAA,mCAA4B,EAAC,aAAa,EAAE,WAAW,CAAC,CACzD,CAAC,QAAQ,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,aAAI,CAAC,IAAI,CAAC;YACR;gBACE;;;;UAIE;aACH;YACD,CAAC,IAAI,CAAC;YACN;gBACE;;UAEE;aACH;SACF,CAAC,CAAC,mDAAmD,EAAE,CAAC,aAAa,EAAE,EAAE;YACxE,MAAM,MAAM,GAAG,IAAA,mCAA4B,EAAC,aAAa,EAAE,WAAW,CAAC,CAAC;YACxE,IAAA,eAAM,EAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC;gBAC/C,IAAI,EAAE;oBACJ,OAAO,EAAE;wBACP;4BACE,2BAA2B;4BAC3B;gCACE,GAAG,EAAE,sBAAsB;gCAC3B,YAAY,EAAE,aAAa;gCAC3B,OAAO,EAAE,cAAc;6BACxB;yBACF;qBACF;iBACF;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { describe, expect, test } from 'vitest';\nimport { addWithSentryToAppConfigJson } from '../../src/react-native/expo';\nimport { RNCliSetupConfigContent } from '../../src/react-native/react-native-wizard';\n\ndescribe('expo', () => {\n  const MOCK_CONFIG: RNCliSetupConfigContent = {\n    url: 'https://sentry.mock/',\n    org: 'sentry-mock',\n    project: 'project-mock',\n    authToken: 'authToken-mock',\n  };\n\n  describe('addWithSentryToAppConfigJson', () => {\n    test('do not add if sentry-expo present', () => {\n      const appConfigJson = `{\n        \"expo\": {\n          \"plugins\": [\"sentry-expo\"]\n        }\n      }`;\n      expect(\n        addWithSentryToAppConfigJson(appConfigJson, MOCK_CONFIG),\n      ).toBeNull();\n    });\n\n    test('do not add if sentry-react-native/expo present', () => {\n      const appConfigJson = `{\n        \"expo\": {\n          \"plugins\": [\"@sentry/react-native/expo\"]\n        }\n      }`;\n      expect(\n        addWithSentryToAppConfigJson(appConfigJson, MOCK_CONFIG),\n      ).toBeNull();\n    });\n\n    test.each([\n      [\n        `{\n          \"expo\": {\n            \"plugins\": \"should be an array, but it is not\"\n          }\n        }`,\n      ],\n      [\n        `{\n          \"expo\": [\"should be an object, but it is not\"]\n        }`,\n      ],\n    ])('do not add if plugins is not an array', (appConfigJson) => {\n      expect(\n        addWithSentryToAppConfigJson(appConfigJson, MOCK_CONFIG),\n      ).toBeNull();\n    });\n\n    test.each([\n      [\n        `{\n          \"expo\": {\n            \"plugins\": []\n          }\n        }`,\n      ],\n      [`{}`],\n      [\n        `{\n          \"expo\": {}\n        }`,\n      ],\n    ])('add sentry react native expo plugin configuration', (appConfigJson) => {\n      const result = addWithSentryToAppConfigJson(appConfigJson, MOCK_CONFIG);\n      expect(JSON.parse(result ?? '{}')).toStrictEqual({\n        expo: {\n          plugins: [\n            [\n              '@sentry/react-native/expo',\n              {\n                url: 'https://sentry.mock/',\n                organization: 'sentry-mock',\n                project: 'project-mock',\n              },\n            ],\n          ],\n        },\n      });\n    });\n  });\n});\n"]}