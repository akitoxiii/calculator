{"version":3,"file":"example-component.test.js","sourceRoot":"","sources":["../../../test/angular/example-component.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { beforeEach, describe, expect, it, vi } from 'vitest';\nimport {\n  createExampleComponent,\n  getSentryExampleComponentCode,\n} from '../../src/angular/example-component';\n\nimport * as clackUtils from '../../src/utils/clack';\n\nconst fsMocks = vi.hoisted(() => ({\n  existsSyncMock: vi.fn(() => true),\n  writeFileSyncMock: vi.fn(),\n  mkdirSyncMock: vi.fn(),\n}));\n\nvi.mock('fs', () => ({\n  existsSync: fsMocks.existsSyncMock,\n  writeFileSync: fsMocks.writeFileSyncMock,\n  mkdirSync: fsMocks.mkdirSyncMock,\n}));\n\nvi.mock('@clack/prompts', () => ({\n  log: {\n    info: vi.fn(),\n    success: vi.fn(),\n    warn: vi.fn(),\n    error: vi.fn(),\n    step: vi.fn(),\n  },\n  outro: vi.fn(),\n  text: vi.fn(),\n  confirm: vi.fn(),\n  cancel: vi.fn(),\n  // passthrough for abortIfCancelled\n  isCancel: vi.fn().mockReturnValue(false),\n  spinner: vi\n    .fn()\n    .mockImplementation(() => ({ start: vi.fn(), stop: vi.fn() })),\n  select: vi.fn(),\n}));\n\ndescribe('createExampleComponent', () => {\n  const showCopyPasteSnippetSpy = vi.spyOn(\n    clackUtils,\n    'showCopyPasteInstructions',\n  );\n\n  beforeEach(() => {\n    vi.clearAllMocks();\n  });\n\n  it('creates an example component file', async () => {\n    const options = {\n      url: 'https://sentry.io',\n      orgSlug: 'myOrg',\n      projectId: '123456789',\n    };\n\n    // Mock the abortIfCancelled function to return the appRootPath\n    vi.spyOn(clackUtils, 'abortIfCancelled').mockResolvedValue('src/app');\n\n    // Mock the getSentryExampleComponentCode function\n    const exampleComponentCode = getSentryExampleComponentCode(options);\n\n    // Call the function to create the example component\n    await createExampleComponent(options);\n\n    expect(fsMocks.writeFileSyncMock).toHaveBeenCalledWith(\n      './src/app/sentry-example.component.ts',\n      exampleComponentCode,\n    );\n    expect(showCopyPasteSnippetSpy).toHaveBeenCalledWith({\n      codeSnippet: `import { SentryExample } from './sentry-example.component'\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, SentryExample],\n  template: \\`\n    <div class=\"app\">\n      <h1>Your Application</h1>\n      <app-sentry-example></app-sentry-example>\n    </div>\n  \\`,\n})\n`,\n      instructions:\n        'Add the example component one of your pages or components (for example, in app.component.ts).',\n    });\n  });\n});\n\ndescribe('getSentryExampleComponentCode', () => {\n  it('includes the correct issue stream URL', () => {\n    const exampleComponentCode = getSentryExampleComponentCode({\n      orgSlug: 'myOrg',\n      projectId: '123456789',\n      url: 'https://sentry.io',\n    });\n    expect(exampleComponentCode).toContain(\n      'https://myorg.sentry.io/issues/?project=123456789',\n    );\n  });\n});\n"]}