{"version":3,"file":"uninstall.js","sourceRoot":"","sources":["../../../src/react-native/uninstall.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAyB;AACzB,+EAA+E;AAC/E,6DAAmC;AACnC,kDAA0B;AAE1B,0CAGwB;AACxB,iCAA8E;AAC9E,qCAIkB;AAClB,mCAA6C;AAE7C,mCAMiB;AAEjB,kDAA0B;AAEnB,KAAK,UAAU,uBAAuB,CAC3C,OAAiC;IAEjC,IAAA,oBAAY,EAAC;QACX,UAAU,EAAE,sCAAsC;QAClD,OAAO,EAAE,gEAAgE;QACzE,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;KAC3C,CAAC,CAAC;IAEH,MAAM,IAAA,yCAAiC,EAAC;QACtC,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;QAC1C,GAAG,EAAE,SAAS;KACf,CAAC,CAAC;IAEH,MAAM,IAAA,0BAAkB,GAAE,CAAC;IAE3B,iBAAiB,EAAE,CAAC;IAEpB,mBAAmB,EAAE,CAAC;IAEtB,iBAAK,CAAC,IAAI,CACR;;KAEC,eAAK,CAAC,IAAI,CAAC,kCAAkC,CAAC;KAC9C,eAAK,CAAC,IAAI,CAAC,uBAAuB,CAAC;+BACT,eAAK,CAAC,IAAI,CACnC,sBAAsB,CACvB,8BAA8B,CAChC,CAAC;IAEF,iBAAK,CAAC,KAAK,CACT,GAAG,eAAK,CAAC,KAAK,CAAC,oBAAoB,CAAC;;KAEnC,eAAK,CAAC,GAAG,CACT,wGAAwG,CACzG,EAAE,CACH,CAAC;AACJ,CAAC;AArCD,0DAqCC;AAED,SAAS,iBAAiB;IACxB,MAAM,gBAAgB,GAAG,IAAA,0BAAmB,EAAC,oBAAa,CAAC,CAAC;IAC5D,IAAI,CAAC,gBAAgB,EAAE;QACrB,iBAAK,CAAC,GAAG,CAAC,IAAI,CACZ,2CAA2C,eAAK,CAAC,IAAI,CAAC,oBAAa,CAAC,GAAG,CACxE,CAAC;QACF,OAAO;KACR;IAED,kJAAkJ;IAClJ,MAAM,YAAY,GAAG,eAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;IACrD,yGAAyG;IACzG,YAAY,CAAC,SAAS,EAAE,CAAC;IACzB,MAAM,WAAW,GAAG,IAAA,mCAA2B,EAAC,YAAY,CAAC,CAAC;IAE9D,MAAM,WAAW,GAAG,IAAA,uBAAe,EAAC,WAAW,CAAC,CAAC;IACjD,IAAA,0BAAkB,EAAC,WAAW,CAAC,CAAC;IAEhC,IAAA,oCAA4B,EAAC,YAAY,CAAC,CAAC;IAE3C,IAAA,yBAAiB,EAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;AACpD,CAAC;AAED,SAAS,mBAAmB;IAC1B,MAAM,kBAAkB,GAAG,IAAA,0BAAmB,EAAC,uBAAgB,CAAC,CAAC;IACjE,IAAI,CAAC,kBAAkB,EAAE;QACvB,iBAAK,CAAC,GAAG,CAAC,IAAI,CACZ,sDAAsD,eAAK,CAAC,IAAI,CAC9D,uBAAgB,CACjB,GAAG,CACL,CAAC;QACF,OAAO;KACR;IAED,MAAM,cAAc,GAAG,EAAE,CAAC,YAAY,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;IACpE,MAAM,cAAc,GAClB,IAAA,sDAA6C,EAAC,cAAc,CAAC,CAAC;IAChE,IAAI,CAAC,cAAc,EAAE;QACnB,iBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAC;QAChE,OAAO;KACR;IAED,MAAM,qBAAqB,GAAG,IAAA,mCAA0B,EAAC,cAAc,CAAC,CAAC;IAEzE,IAAA,4BAAmB,EAAC,kBAAkB,EAAE,qBAAqB,CAAC,CAAC;AACjE,CAAC","sourcesContent":["import * as fs from 'fs';\n// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport clack from '@clack/prompts';\nimport chalk from 'chalk';\n\nimport {\n  confirmContinueIfNoOrDirtyGitRepo,\n  printWelcome,\n} from '../utils/clack';\nimport { APP_BUILD_GRADLE, XCODE_PROJECT, getFirstMatchedPath } from './glob';\nimport {\n  doesAppBuildGradleIncludeRNSentryGradlePlugin,\n  removeRNSentryGradlePlugin,\n  writeAppBuildGradle,\n} from './gradle';\nimport { unPatchMetroConfig } from './metro';\nimport { ReactNativeWizardOptions } from './options';\nimport {\n  findBundlePhase,\n  getValidExistingBuildPhases,\n  unPatchBundlePhase,\n  unPatchDebugFilesUploadPhase,\n  writeXcodeProject,\n} from './xcode';\n\nimport xcode from 'xcode';\n\nexport async function runReactNativeUninstall(\n  options: ReactNativeWizardOptions,\n): Promise<void> {\n  printWelcome({\n    wizardName: 'Sentry React Native Uninstall Wizard',\n    message: 'This wizard will remove Sentry from your React Native project.',\n    telemetryEnabled: options.telemetryEnabled,\n  });\n\n  await confirmContinueIfNoOrDirtyGitRepo({\n    ignoreGitChanges: options.ignoreGitChanges,\n    cwd: undefined,\n  });\n\n  await unPatchMetroConfig();\n\n  unPatchXcodeFiles();\n\n  unPatchAndroidFiles();\n\n  clack.note(\n    `To make sure your project builds after removing Sentry please run:\n\n1. ${chalk.bold('yarn remove @sentry/react-native')}\n2. ${chalk.bold('cd ios && pod install')}\n3. Remove all occurrences of ${chalk.bold(\n      '@sentry/react-native',\n    )} from your application code.`,\n  );\n\n  clack.outro(\n    `${chalk.green('Uninstall is done!')}\n\n   ${chalk.dim(\n     'If you encounter any issues, let us know here: https://github.com/getsentry/sentry-react-native/issues',\n   )}`,\n  );\n}\n\nfunction unPatchXcodeFiles() {\n  const xcodeProjectPath = getFirstMatchedPath(XCODE_PROJECT);\n  if (!xcodeProjectPath) {\n    clack.log.warn(\n      `Could not find Xcode project file using ${chalk.bold(XCODE_PROJECT)}.`,\n    );\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n  const xcodeProject = xcode.project(xcodeProjectPath);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n  xcodeProject.parseSync();\n  const buildPhases = getValidExistingBuildPhases(xcodeProject);\n\n  const bundlePhase = findBundlePhase(buildPhases);\n  unPatchBundlePhase(bundlePhase);\n\n  unPatchDebugFilesUploadPhase(xcodeProject);\n\n  writeXcodeProject(xcodeProjectPath, xcodeProject);\n}\n\nfunction unPatchAndroidFiles() {\n  const appBuildGradlePath = getFirstMatchedPath(APP_BUILD_GRADLE);\n  if (!appBuildGradlePath) {\n    clack.log.warn(\n      `Could not find Android app/build.gradle file using ${chalk.bold(\n        APP_BUILD_GRADLE,\n      )}.`,\n    );\n    return;\n  }\n\n  const appBuildGradle = fs.readFileSync(appBuildGradlePath, 'utf-8');\n  const includesSentry =\n    doesAppBuildGradleIncludeRNSentryGradlePlugin(appBuildGradle);\n  if (!includesSentry) {\n    clack.log.warn(`Sentry not found in Android app/build.gradle.`);\n    return;\n  }\n\n  const patchedAppBuildGradle = removeRNSentryGradlePlugin(appBuildGradle);\n\n  writeAppBuildGradle(appBuildGradlePath, patchedAppBuildGradle);\n}\n"]}