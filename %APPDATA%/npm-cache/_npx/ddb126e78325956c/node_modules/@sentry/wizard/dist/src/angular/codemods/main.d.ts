import type { Program } from '@babel/types';
import { Proxified, type ProxifiedModule } from 'magicast';
export declare function updateAppEntryMod(originalAppModuleMod: ProxifiedModule<any>, dsn: string, selectedFeatures: {
    performance: boolean;
    replay: boolean;
}): ProxifiedModule<any>;
export declare function insertInitCall(originalAppModuleMod: ProxifiedModule<any>, dsn: string, selectedFeatures: {
    performance: boolean;
    replay: boolean;
}): void;
type InitCallArgs = Record<string, string | number | Array<Proxified>>;
export declare function getInitCallArgs(dsn: string, selectedFeatures: {
    performance: boolean;
    replay: boolean;
}): InitCallArgs;
/**
 * We want to insert the handleError function just after all imports
 */
export declare function getAfterImportsInsertionIndex(originalEntryServerModAST: Program): number;
export {};
