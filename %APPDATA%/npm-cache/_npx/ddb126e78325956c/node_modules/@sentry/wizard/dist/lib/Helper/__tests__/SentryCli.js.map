{"version":3,"file":"SentryCli.js","sourceRoot":"","sources":["../../../../lib/Helper/__tests__/SentryCli.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Answers } from 'inquirer';\n\nimport type { Args } from '../../Constants';\nimport { Integration, Platform } from '../../Constants';\nimport { SentryCli } from '../SentryCli';\nimport { describe, expect, test, vi } from 'vitest';\n\ntype RequireResolve = typeof require.resolve;\n\nconst args: Args = {\n  debug: false,\n  integration: Integration.reactNative,\n  platform: [Platform.ios],\n  quiet: false,\n  skipConnect: false,\n  uninstall: false,\n  url: 'https://localhost:1234',\n  signup: false,\n  disableTelemetry: false,\n};\n\nconst demoAnswers: Answers = {\n  config: {\n    auth: {\n      token: 'abcd',\n    },\n    organization: {\n      slug: 'test_org',\n    },\n    project: {\n      slug: 'test_proj',\n    },\n  },\n};\n\ndescribe('SentryCli', () => {\n  const resolveFunc = vi\n    .fn()\n    .mockReturnValue('node_modules/sentry/cli') as unknown as RequireResolve;\n  test('convertAnswersToProperties', () => {\n    const sentry = new SentryCli(args);\n    sentry.setResolveFunction(resolveFunc);\n    const props = sentry.convertAnswersToProperties(demoAnswers);\n    expect(props['defaults/url']).toBe('https://localhost:1234');\n    expect(props['defaults/org']).toBe('test_org');\n    expect(props['defaults/project']).toBe('test_proj');\n    expect(props['auth/token']).toBe('abcd');\n    expect(props['cli/executable']).toBe('node_modules/sentry/cli');\n  });\n\n  test('dump properties', () => {\n    const sentry = new SentryCli(args);\n    sentry.setResolveFunction(resolveFunc);\n    const props = sentry.convertAnswersToProperties(demoAnswers);\n    expect(sentry.dumpProperties(props))\n      .toBe(`defaults.url=https://localhost:1234\ndefaults.org=test_org\ndefaults.project=test_proj\nauth.token=abcd\ncli.executable=node_modules/sentry/cli\n`);\n  });\n\n  test('dump config', () => {\n    const sentry = new SentryCli(args);\n    sentry.setResolveFunction(resolveFunc);\n    const props = {\n      auth: { 'auth/token': 'myToken' },\n    };\n    expect(sentry.dumpConfig(props)).toMatchInlineSnapshot(`\n      \"[auth]\n      token=myToken\n      \"\n    `);\n  });\n\n  test('convertAnswersToProperties windows', () => {\n    const resolveFunc = vi\n      .fn()\n      .mockReturnValue(\n        'node_modules\\\\sentry\\\\cli',\n      ) as unknown as RequireResolve;\n    const sentry = new SentryCli(args);\n    sentry.setResolveFunction(resolveFunc);\n    const props = sentry.convertAnswersToProperties(demoAnswers);\n    expect(props['defaults/url']).toBe('https://localhost:1234');\n    expect(props['defaults/org']).toBe('test_org');\n    expect(props['defaults/project']).toBe('test_proj');\n    expect(props['auth/token']).toBe('abcd');\n    expect(props['cli/executable']).toBe('node_modules\\\\\\\\sentry\\\\\\\\cli');\n  });\n\n  test('dump properties windows', () => {\n    const resolveFunc = vi\n      .fn()\n      .mockReturnValue(\n        'node_modules\\\\sentry\\\\cli',\n      ) as unknown as RequireResolve;\n    const sentry = new SentryCli(args);\n    sentry.setResolveFunction(resolveFunc);\n    const props = sentry.convertAnswersToProperties(demoAnswers);\n    expect(sentry.dumpProperties(props))\n      .toBe(`defaults.url=https://localhost:1234\ndefaults.org=test_org\ndefaults.project=test_proj\nauth.token=abcd\ncli.executable=node_modules\\\\\\\\sentry\\\\\\\\cli\n`);\n  });\n});\n"]}