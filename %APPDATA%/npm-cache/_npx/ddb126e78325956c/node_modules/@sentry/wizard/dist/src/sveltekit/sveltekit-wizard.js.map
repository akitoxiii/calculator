{"version":3,"file":"sveltekit-wizard.js","sourceRoot":"","sources":["../../../src/sveltekit/sveltekit-wizard.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport * as clack from '@clack/prompts';\nimport chalk from 'chalk';\n\nimport * as Sentry from '@sentry/node';\n\nimport { traceStep, withTelemetry } from '../telemetry';\nimport {\n  abort,\n  abortIfCancelled,\n  addDotEnvSentryBuildPluginFile,\n  askShouldCreateExamplePage,\n  confirmContinueIfNoOrDirtyGitRepo,\n  ensurePackageIsInstalled,\n  getOrAskForProjectData,\n  getPackageDotJson,\n  getPackageManager,\n  installPackage,\n  printWelcome,\n  runPrettierIfInstalled,\n} from '../utils/clack';\nimport { getPackageVersion, hasPackageInstalled } from '../utils/package-json';\nimport { NPM } from '../utils/package-manager';\nimport type { WizardOptions } from '../utils/types';\nimport { createExamplePage } from './sdk-example';\nimport { createOrMergeSvelteKitFiles, loadSvelteConfig } from './sdk-setup';\nimport { getKitVersionBucket, getSvelteVersionBucket } from './utils';\n\nexport async function runSvelteKitWizard(\n  options: WizardOptions,\n): Promise<void> {\n  return withTelemetry(\n    {\n      enabled: options.telemetryEnabled,\n      integration: 'sveltekit',\n      wizardOptions: options,\n    },\n    () => runSvelteKitWizardWithTelemetry(options),\n  );\n}\n\nexport async function runSvelteKitWizardWithTelemetry(\n  options: WizardOptions,\n): Promise<void> {\n  const { promoCode, telemetryEnabled, forceInstall } = options;\n\n  printWelcome({\n    wizardName: 'Sentry SvelteKit Wizard',\n    promoCode,\n    telemetryEnabled,\n  });\n\n  await confirmContinueIfNoOrDirtyGitRepo({\n    ignoreGitChanges: options.ignoreGitChanges,\n    cwd: undefined,\n  });\n\n  const packageJson = await getPackageDotJson();\n\n  await ensurePackageIsInstalled(packageJson, '@sveltejs/kit', 'Sveltekit');\n\n  const kitVersion = getPackageVersion('@sveltejs/kit', packageJson);\n  const kitVersionBucket = getKitVersionBucket(kitVersion);\n  Sentry.setTag('sveltekit-version', kitVersionBucket);\n\n  if (kitVersionBucket === '0.x') {\n    clack.log.warn(\n      \"It seems you're using a SvelteKit version <1.0.0 which is not supported by Sentry.\\nWe recommend upgrading to the latest 1.x version before you continue.\",\n    );\n    const shouldContinue = await abortIfCancelled(\n      clack.select({\n        message: 'Do you want to continue anyway?',\n        options: [\n          {\n            label: 'Yes, continue',\n            hint: 'The SDK might not work correctly',\n            value: true,\n          },\n          { label: \"No, I'll upgrade first\", value: false },\n        ],\n      }),\n    );\n    if (!shouldContinue) {\n      await abort('Exiting Wizard', 0);\n      return;\n    }\n  }\n\n  Sentry.setTag(\n    'svelte-version',\n    getSvelteVersionBucket(getPackageVersion('svelte', packageJson)),\n  );\n\n  const { selectedProject, selfHosted, sentryUrl, authToken } =\n    await getOrAskForProjectData(options, 'javascript-sveltekit');\n\n  const sdkAlreadyInstalled = hasPackageInstalled(\n    '@sentry/sveltekit',\n    packageJson,\n  );\n  Sentry.setTag('sdk-already-installed', sdkAlreadyInstalled);\n\n  await installPackage({\n    packageName: '@sentry/sveltekit@^9',\n    packageNameDisplayLabel: '@sentry/sveltekit',\n    alreadyInstalled: sdkAlreadyInstalled,\n    forceInstall,\n  });\n\n  await addDotEnvSentryBuildPluginFile(authToken);\n\n  const svelteConfig = await traceStep('load-svelte-config', loadSvelteConfig);\n\n  try {\n    await traceStep('configure-sdk', () =>\n      createOrMergeSvelteKitFiles(\n        {\n          dsn: selectedProject.keys[0].dsn.public,\n          org: selectedProject.organization.slug,\n          project: selectedProject.slug,\n          selfHosted,\n          url: sentryUrl,\n        },\n        svelteConfig,\n      ),\n    );\n  } catch (e: unknown) {\n    clack.log.error('Error while setting up the SvelteKit SDK:');\n    clack.log.info(\n      chalk.dim(\n        typeof e === 'object' && e != null && 'toString' in e\n          ? e.toString()\n          : typeof e === 'string'\n          ? e\n          : 'Unknown error',\n      ),\n    );\n    Sentry.captureException('Error while setting up the SvelteKit SDK');\n    await abort('Exiting Wizard');\n    return;\n  }\n\n  const shouldCreateExamplePage = await askShouldCreateExamplePage(\n    '/sentry-example-page',\n  );\n\n  if (shouldCreateExamplePage) {\n    try {\n      await traceStep('create-example-page', () =>\n        createExamplePage(svelteConfig, {\n          selfHosted,\n          url: sentryUrl,\n          orgSlug: selectedProject.organization.slug,\n          projectId: selectedProject.id,\n        }),\n      );\n    } catch (e: unknown) {\n      clack.log.error('Error while creating an example page to test Sentry:');\n      clack.log.info(\n        chalk.dim(\n          typeof e === 'object' && e != null && 'toString' in e\n            ? e.toString()\n            : typeof e === 'string'\n            ? e\n            : 'Unknown error',\n        ),\n      );\n      Sentry.captureException(\n        'Error while creating an example Svelte page to test Sentry',\n      );\n      await abort('Exiting Wizard');\n      return;\n    }\n  }\n\n  await runPrettierIfInstalled({\n    cwd: undefined,\n  });\n\n  clack.outro(await buildOutroMessage(shouldCreateExamplePage));\n}\n\nasync function buildOutroMessage(\n  shouldCreateExamplePage: boolean,\n): Promise<string> {\n  const packageManager = await getPackageManager(NPM);\n\n  let msg = chalk.green('\\nSuccessfully installed the Sentry SvelteKit SDK!');\n\n  if (shouldCreateExamplePage) {\n    msg += `\\n\\nYou can validate your setup by starting your dev environment (${chalk.cyan(\n      `\\`${packageManager.runScriptCommand} dev\\``,\n    )}) and visiting ${chalk.cyan('\"/sentry-example-page\"')}.`;\n  }\n\n  msg += `\\n\\nCheck out the SDK documentation for further configuration:\nhttps://docs.sentry.io/platforms/javascript/guides/sveltekit/`;\n\n  return msg;\n}\n"]}