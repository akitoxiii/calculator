"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vitest_1 = require("vitest");
const code_tools_1 = require("../../src/android/code-tools");
(0, vitest_1.describe)('code-tools', () => {
    (0, vitest_1.describe)('getLastImportLineLocation', () => {
        (0, vitest_1.it)('returns proper line index', () => {
            const code = `import a.b.c;\n` + `//<insert-location>\n` + `class X {}`;
            (0, vitest_1.expect)((0, code_tools_1.getLastImportLineLocation)(code)).toBe(code.indexOf('//<insert-location>'));
        });
        (0, vitest_1.it)('returns proper line index when static import is used', () => {
            const code = `import static a.b.c;\n` + `//<insert-location>\n` + `class X {}`;
            (0, vitest_1.expect)((0, code_tools_1.getLastImportLineLocation)(code)).toBe(code.indexOf('//<insert-location>'));
        });
        (0, vitest_1.it)('returns proper line index when wildcard import is used', () => {
            const code = `import a.b.*\n` + `//<insert-location>\n` + `class X {}`;
            (0, vitest_1.expect)((0, code_tools_1.getLastImportLineLocation)(code)).toBe(code.indexOf('//<insert-location>'));
        });
        (0, vitest_1.it)('returns proper line index when alias import is used', () => {
            const code = `import static a.b.c as d\n` + `//<insert-location>\n` + `class X {}`;
            (0, vitest_1.expect)((0, code_tools_1.getLastImportLineLocation)(code)).toBe(code.indexOf('//<insert-location>'));
        });
        (0, vitest_1.it)('returns proper line index when multiple imports are present', () => {
            const code = `import static a.b.c as d\n` +
                `import a.b.*\n` +
                `import static a.b.c;\n` +
                `import a.b.c;\n` +
                `//<insert-location>\n` +
                `class X {}`;
            (0, vitest_1.expect)((0, code_tools_1.getLastImportLineLocation)(code)).toBe(code.indexOf('//<insert-location>'));
        });
    });
});
//# sourceMappingURL=code-tools.test.js.map