{"version":3,"file":"detect-tool.js","sourceRoot":"","sources":["../../../../src/sourcemaps/utils/detect-tool.ts"],"names":[],"mappings":";;;AAAA,6CAAsD;AACtD,2DAAwE;AAexE,oDAAoD;AACpD,kFAAkF;AAClF,sEAAsE;AACtE,YAAY;AACC,QAAA,gBAAgB,GAAmC;IAC9D,eAAe,EAAE,SAAS;IAC1B,kBAAkB,EAAE,kBAAkB;IACtC,OAAO,EAAE,SAAS;IAClB,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,SAAS;IAClB,MAAM,EAAE,QAAQ;IAChB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEK,KAAK,UAAU,cAAc;IAClC,MAAM,WAAW,GAAG,MAAM,IAAA,yBAAiB,GAAE,CAAC;IAE9C,MAAM,gBAAgB,GAAG,IAAA,2CAA4B,EACnD,MAAM,CAAC,IAAI,CAAC,wBAAgB,CAAC,EAC7B,WAAW,CACZ,CAAC;IAEF,IAAI,gBAAgB,EAAE;QACpB,OAAO,wBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;KAChD;IAED,OAAO,YAAY,CAAC;AACtB,CAAC;AAbD,wCAaC","sourcesContent":["import { getPackageDotJson } from '../../utils/clack';\nimport { findInstalledPackageFromList } from '../../utils/package-json';\n\nexport type SupportedTools =\n  | 'webpack'\n  | 'vite'\n  | 'rollup'\n  | 'esbuild'\n  | 'tsc'\n  | 'sentry-cli'\n  | 'create-react-app'\n  | 'angular'\n  | 'nextjs'\n  | 'remix'\n  | 'no-tool';\n\n// A map of package names pointing to the tool slug.\n// The order is important, because we want to detect the most specific tool first.\n// For instance, webpack needs to come before tsc because typescript c\n// Similarly\nexport const TOOL_PACKAGE_MAP: Record<string, SupportedTools> = {\n  '@angular/core': 'angular',\n  'create-react-app': 'create-react-app',\n  webpack: 'webpack',\n  vite: 'vite',\n  esbuild: 'esbuild',\n  rollup: 'rollup',\n  typescript: 'tsc',\n};\n\nexport async function detectUsedTool(): Promise<SupportedTools> {\n  const packageJson = await getPackageDotJson();\n\n  const foundToolPackage = findInstalledPackageFromList(\n    Object.keys(TOOL_PACKAGE_MAP),\n    packageJson,\n  );\n\n  if (foundToolPackage) {\n    return TOOL_PACKAGE_MAP[foundToolPackage.name];\n  }\n\n  return 'sentry-cli';\n}\n"]}