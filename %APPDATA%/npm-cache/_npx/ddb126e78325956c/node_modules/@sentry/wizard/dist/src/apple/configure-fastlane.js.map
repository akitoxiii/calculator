{"version":3,"file":"configure-fastlane.js","sourceRoot":"","sources":["../../../src/apple/configure-fastlane.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+EAA+E;AAC/E,6DAAmC;AACnC,qDAAuC;AACvC,kDAA0B;AAC1B,4CAAyC;AACzC,0CAAuC;AACvC,qDAAuC;AAEhC,KAAK,UAAU,iBAAiB,CAAC,EACtC,UAAU,EACV,OAAO,EACP,WAAW,GAKZ;IACC,IAAA,aAAK,EAAC,6CAA6C,eAAK,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAC7E,MAAM,mBAAmB,GAAG,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAC1D,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,CAAC;IACtD,IAAI,CAAC,mBAAmB,EAAE;QACxB,IAAA,aAAK,EAAC,8CAA8C,CAAC,CAAC;QACtD,8EAA8E;QAC9E,OAAO;KACR;IAED,IAAA,aAAK,EAAC,gEAAgE,CAAC,CAAC;IACxE,MAAM,aAAa,GAAG,MAAM,iBAAK,CAAC,OAAO,CAAC;QACxC,OAAO,EACL,sGAAsG;KACzG,CAAC,CAAC;IACH,IAAA,aAAK,EAAC,2BAA2B,eAAK,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;IACzE,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,aAAa,CAAC,CAAC;IAEjD,IAAI,aAAa,EAAE;QACjB,IAAA,aAAK,EAAC,gCAAgC,CAAC,CAAC;QACxC,MAAM,KAAK,GAAG,MAAM,IAAA,qBAAS,EAAC,oBAAoB,EAAE,GAAG,EAAE,CACvD,QAAQ,CAAC,mBAAmB,CAAC,UAAU,EAAE,OAAO,EAAE,WAAW,CAAC,CAC/D,CAAC;QACF,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;QACvC,IAAA,aAAK,EAAC,mBAAmB,eAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;QAEzD,IAAI,KAAK,EAAE;YACT,iBAAK,CAAC,GAAG,CAAC,IAAI,CACZ,wJAAwJ,CACzJ,CAAC;SACH;aAAM;YACL,iBAAK,CAAC,GAAG,CAAC,IAAI,CACZ,yKAAyK,CAC1K,CAAC;SACH;KACF;AACH,CAAC;AA5CD,8CA4CC","sourcesContent":["// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport clack from '@clack/prompts';\nimport * as Sentry from '@sentry/node';\nimport chalk from 'chalk';\nimport { traceStep } from '../telemetry';\nimport { debug } from '../utils/debug';\nimport * as fastlane from './fastlane';\n\nexport async function configureFastlane({\n  projectDir,\n  orgSlug,\n  projectSlug,\n}: {\n  projectDir: string;\n  orgSlug: string;\n  projectSlug: string;\n}) {\n  debug(`Checking if Fastfile exists in directory: ${chalk.cyan(projectDir)}`);\n  const isFastlaneAvailable = fastlane.fastFile(projectDir);\n  Sentry.setTag('fastlane-exists', isFastlaneAvailable);\n  if (!isFastlaneAvailable) {\n    debug(`Fastfile not found, not configuring Fastlane`);\n    // If fastlane is not available, we don't need to configure it and exit early.\n    return;\n  }\n\n  debug(`Fastfile found, asking user if they want to configure Fastlane`);\n  const shouldAddLane = await clack.confirm({\n    message:\n      'Found a Fastfile in your project. Do you want to configure a lane to upload debug symbols to Sentry?',\n  });\n  debug(`User wants to add lane: ${chalk.cyan(shouldAddLane.toString())}`);\n  Sentry.setTag('fastlane-desired', shouldAddLane);\n\n  if (shouldAddLane) {\n    debug(`Adding Sentry lane to Fastlane`);\n    const added = await traceStep('Configure fastlane', () =>\n      fastlane.addSentryToFastlane(projectDir, orgSlug, projectSlug),\n    );\n    Sentry.setTag('fastlane-added', added);\n    debug(`Fastlane added: ${chalk.cyan(added.toString())}`);\n\n    if (added) {\n      clack.log.step(\n        'A new step was added to your fastlane file. Now and you build your project with fastlane, debug symbols and source context will be uploaded to Sentry.',\n      );\n    } else {\n      clack.log.warn(\n        'Could not edit your fastlane file to upload debug symbols to Sentry. Please follow the instructions at https://docs.sentry.io/platforms/apple/guides/ios/dsym/#fastlane',\n      );\n    }\n  }\n}\n"]}