{"version":3,"file":"templates.js","sourceRoot":"","sources":["../../../src/apple/templates.ts"],"names":[],"mappings":";;;AAAA,SAAgB,oBAAoB,CAClC,OAAe,EACf,WAAmB,EACnB,YAAqB,EACrB,mBAA4B;IAE5B,6CAA6C;IAC7C,MAAM,eAAe,GAAG,mBAAmB;QACzC,CAAC,CAAC,uFAAuF;QACzF,CAAC,CAAC,EAAE,CAAC;IACP,OAAO,0FAA0F,eAAe,+DAA+D,OAAO,4BAA4B,WAAW,4CAC3N,YAAY,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,EACxC,2OAA2O,CAAC;AAC9O,CAAC;AAbD,oDAaC;AAEY,QAAA,eAAe,GAC1B,6FAA6F,CAAC;AAEhG,SAAgB,eAAe,CAAC,GAAW;IACzC,OAAO;6BACoB,GAAG;;;;;;;;;;;;;;;;;iEAiBiC,CAAC;AAClE,CAAC;AApBD,0CAoBC;AAED,SAAgB,cAAc,CAAC,GAAW;IACxC,OAAO;0BACiB,GAAG;;;;;;;;;;;;;;;;;2DAiB8B,CAAC;AAC5D,CAAC;AApBD,wCAoBC;AAED,SAAgB,kBAAkB,CAAC,GAAW,EAAE,OAAe;IAC7D,OAAO;mBACU,GAAG;uBACC,OAAO;;MAExB,CAAC;AACP,CAAC;AAND,gDAMC","sourcesContent":["export function getRunScriptTemplate(\n  orgSlug: string,\n  projectSlug: string,\n  uploadSource: boolean,\n  includeHomebrewPath: boolean,\n): string {\n  // eslint-disable-next-line no-useless-escape\n  const includeHomebrew = includeHomebrewPath\n    ? '\\\\nif [[ \"$(uname -m)\" == arm64 ]]; then\\\\nexport PATH=\"/opt/homebrew/bin:$PATH\"\\\\nfi'\n    : '';\n  return `# This script is responsible for uploading debug symbols and source context for Sentry.${includeHomebrew}\\\\nif which sentry-cli >/dev/null; then\\\\nexport SENTRY_ORG=${orgSlug}\\\\nexport SENTRY_PROJECT=${projectSlug}\\\\nERROR=$(sentry-cli debug-files upload ${\n    uploadSource ? '--include-sources ' : ''\n  }\"$DWARF_DSYM_FOLDER_PATH\" 2>&1 >/dev/null)\\\\nif [ ! $? -eq 0 ]; then\\\\necho \"warning: sentry-cli - $ERROR\"\\\\nfi\\\\nelse\\\\necho \"warning: sentry-cli not installed, download from https://github.com/getsentry/sentry-cli/releases\"\\\\nfi\\\\n`;\n}\n\nexport const scriptInputPath =\n  '\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Resources/DWARF/${TARGET_NAME}\"';\n\nexport function getSwiftSnippet(dsn: string): string {\n  return `        SentrySDK.start { options in\n            options.dsn = \"${dsn}\"\n            options.debug = true // Enabled debug when first installing is always helpful\n            // Set tracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring.\n            // We recommend adjusting this value in production.\n            options.tracesSampleRate = 1.0\n\n            // Configure profiling. Visit https://docs.sentry.io/platforms/apple/profiling/ to learn more.\n            options.configureProfiling = {\n                $0.sessionSampleRate = 1.0 // We recommend adjusting this value in production.\n                $0.lifecycle = .trace\n            }\n\n            // Uncomment the following lines to add more data to your events\n            // options.attachScreenshot = true // This adds a screenshot to the error events\n            // options.attachViewHierarchy = true // This adds the view hierarchy to the error events\n        }\n        // Remove the next line after confirming that your Sentry integration is working.\n        SentrySDK.capture(message: \"This app uses Sentry! :)\")\\n`;\n}\n\nexport function getObjcSnippet(dsn: string): string {\n  return `    [SentrySDK startWithConfigureOptions:^(SentryOptions * options) {\n        options.dsn = @\"${dsn}\";\n        options.debug = YES; // Enabled debug when first installing is always helpful\n        // Set tracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring.\n        // We recommend adjusting this value in production.\n        options.tracesSampleRate = @1.0;\n\n        // Configure profiling. Visit https://docs.sentry.io/platforms/apple/profiling/ to learn more.\n        options.configureProfiling = ^(SentryProfileOptions *profiling) {\n            profiling.sessionSampleRate = 1.0; // We recommend adjusting this value in production.\n            profiling.lifecycle = SentryProfilingLifecycleTrace;\n        };\n\n        //Uncomment the following lines to add more data to your events\n        //options.attachScreenshot = YES; //This will add a screenshot to the error events\n        //options.attachViewHierarchy = YES; //This will add the view hierarchy to the error events\n    }];\n    //Remove the next line after confirming that your Sentry integration is working.\n    [SentrySDK captureMessage:@\"This app uses Sentry!\"];\\n`;\n}\n\nexport function getFastlaneSnippet(org: string, project: string): string {\n  return `    sentry_cli(\n      org_slug: '${org}',\n      project_slug: '${project}',\n      include_sources: true\n    )`;\n}\n"]}