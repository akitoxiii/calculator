{"version":3,"file":"javascript.js","sourceRoot":"","sources":["../../../src/react-native/javascript.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable max-lines */\n// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport clack from '@clack/prompts';\nimport chalk from 'chalk';\nimport * as path from 'path';\nimport * as process from 'process';\nimport * as fs from 'fs';\nimport * as Sentry from '@sentry/node';\n\nimport { traceStep } from '../telemetry';\nimport { makeCodeSnippet, showCopyPasteInstructions } from '../utils/clack';\nimport { getFirstMatchedPath } from './glob';\nimport { RN_SDK_PACKAGE } from './react-native-wizard';\n\n// @ts-expect-error - magicast is ESM and TS complains about that. It works though\nimport { generateCode, ProxifiedModule, parseModule } from 'magicast';\nimport * as t from '@babel/types';\n\nconst sessionReplaySampleRate = 0.1;\nconst sessionReplayOnErrorSampleRate = 1.0;\n\nexport async function addSentryInit({\n  dsn,\n  enableSessionReplay = false,\n}: {\n  dsn: string;\n  enableSessionReplay?: boolean;\n}) {\n  const jsPath = getMainAppFilePath();\n  Sentry.setTag('app-js-file-status', jsPath ? 'found' : 'not-found');\n  if (!jsPath) {\n    clack.log.warn(\n      `Could not find main App file. Place the following code snippet close to the Apps Root component.`,\n    );\n    await showCopyPasteInstructions({\n      filename: 'App.js or _layout.tsx',\n      codeSnippet: getSentryInitColoredCodeSnippet(dsn, enableSessionReplay),\n      hint: 'This ensures the Sentry SDK is ready to capture errors.',\n    });\n    return;\n  }\n  const jsRelativePath = path.relative(process.cwd(), jsPath);\n\n  const js = fs.readFileSync(jsPath, 'utf-8');\n  const includesSentry = doesJsCodeIncludeSdkSentryImport(js, {\n    sdkPackageName: RN_SDK_PACKAGE,\n  });\n  if (includesSentry) {\n    Sentry.setTag('app-js-file-status', 'already-includes-sentry');\n    clack.log.warn(\n      `${chalk.cyan(\n        jsRelativePath,\n      )} already includes Sentry. We wont't add it again.`,\n    );\n    return;\n  }\n\n  if (enableSessionReplay) {\n    clack.log.info(\n      `Session Replay will be enabled with default settings (replaysSessionSampleRate: ${sessionReplaySampleRate}, replaysOnErrorSampleRate: ${sessionReplayOnErrorSampleRate}).`,\n    );\n    clack.log.message(\n      'By default, all text content, images, and webviews will be masked for privacy. You can customize this in your code later.',\n    );\n  }\n\n  traceStep('add-sentry-init', () => {\n    const newContent = addSentryInitWithSdkImport(js, {\n      dsn,\n      enableSessionReplay,\n    });\n\n    clack.log.success(\n      `Added ${chalk.cyan('Sentry.init')} to ${chalk.cyan(jsRelativePath)}.`,\n    );\n\n    fs.writeFileSync(jsPath, newContent, 'utf-8');\n  });\n\n  Sentry.setTag('app-js-file-status', 'added-sentry-init');\n  clack.log.success(\n    chalk.green(`${chalk.cyan(jsRelativePath)} changes saved.`),\n  );\n}\n\nexport function addSentryInitWithSdkImport(\n  js: string,\n  {\n    dsn,\n    enableSessionReplay = false,\n  }: { dsn: string; enableSessionReplay?: boolean },\n): string {\n  return js.replace(\n    /^([^]*)(import\\s+[^;]*?;$)/m,\n    (match: string) => `${match}\n${getSentryInitPlainTextSnippet(dsn, enableSessionReplay)}`,\n  );\n}\n\nexport function doesJsCodeIncludeSdkSentryImport(\n  js: string,\n  { sdkPackageName }: { sdkPackageName: string },\n): boolean {\n  return !!js.match(sdkPackageName);\n}\n\nexport function getSentryInitColoredCodeSnippet(\n  dsn: string,\n  enableSessionReplay = false,\n) {\n  return makeCodeSnippet(true, (_unchanged, plus, _minus) => {\n    return plus(getSentryInitPlainTextSnippet(dsn, enableSessionReplay));\n  });\n}\n\nexport function getSentryInitPlainTextSnippet(\n  dsn: string,\n  enableSessionReplay = false,\n) {\n  return `import * as Sentry from '@sentry/react-native';\n\nSentry.init({\n  dsn: '${dsn}',\n${\n  enableSessionReplay\n    ? `\n  // Configure Session Replay\n  replaysSessionSampleRate: ${sessionReplaySampleRate},\n  replaysOnErrorSampleRate: ${sessionReplayOnErrorSampleRate},\n  integrations: [Sentry.mobileReplayIntegration()],\n`\n    : ''\n}\n  // uncomment the line below to enable Spotlight (https://spotlightjs.com)\n  // spotlight: __DEV__,\n});`;\n}\n\nfunction getMainAppFilePath(): string | undefined {\n  const prefixGlob = '{.,./src,./app}';\n  const suffixGlob = '@(j|t|cj|mj)s?(x)';\n  const universalGlob = `@(App|_layout).${suffixGlob}`;\n  const jsFileGlob = `${prefixGlob}/+(${universalGlob})`;\n  const jsPath = traceStep('find-app-js-file', () =>\n    getFirstMatchedPath(jsFileGlob),\n  );\n  return jsPath;\n}\n\n/**\n * This step should be executed after `addSentryInit`\n */\nexport async function wrapRootComponent() {\n  const showInstructions = () =>\n    showCopyPasteInstructions({\n      filename: 'App.js or _layout.tsx',\n      codeSnippet: getSentryWrapColoredCodeSnippet(),\n    });\n\n  const jsPath = getMainAppFilePath();\n  Sentry.setTag('app-js-file-status', jsPath ? 'found' : 'not-found');\n  if (!jsPath) {\n    clack.log.warn(\n      `Could not find main App file. Please wrap your App's Root component.`,\n    );\n    await showInstructions();\n    return;\n  }\n\n  const jsRelativePath = path.relative(process.cwd(), jsPath);\n\n  const js = fs.readFileSync(jsPath, 'utf-8');\n\n  const mod = parseModule(js);\n  const result = checkAndWrapRootComponent(mod);\n\n  if (result === SentryWrapResult.AlreadyWrapped) {\n    Sentry.setTag('app-js-file-status', 'already-includes-sentry-wrap');\n    clack.log.warn(\n      `${chalk.cyan(\n        jsRelativePath,\n      )} already includes Sentry.wrap. We wont't add it again.`,\n    );\n    return;\n  }\n\n  if (result === SentryWrapResult.NotFound) {\n    clack.log.warn(\n      `Could not find your App's Root component. Please wrap your App's Root component manually.`,\n    );\n    await showInstructions();\n    return;\n  }\n\n  traceStep('add-sentry-wrap', () => {\n    clack.log.success(\n      `Added ${chalk.cyan('Sentry.wrap')} to ${chalk.cyan(jsRelativePath)}.`,\n    );\n\n    fs.writeFileSync(jsPath, generateCode(mod.$ast).code, 'utf-8');\n  });\n\n  Sentry.setTag('app-js-file-status', 'added-sentry-wrap');\n  clack.log.success(\n    chalk.green(`${chalk.cyan(jsRelativePath)} changes saved.`),\n  );\n}\n\nexport enum SentryWrapResult {\n  NotFound = 'RootComponentNotFound',\n  AlreadyWrapped = 'AlreadyWrapped',\n  Success = 'Success',\n}\n\nexport function checkAndWrapRootComponent(\n  mod: ProxifiedModule,\n): SentryWrapResult {\n  if (doesContainSentryWrap(mod.$ast as t.Program)) {\n    return SentryWrapResult.AlreadyWrapped;\n  }\n\n  const defaultExport = getDefaultExport(mod.$ast as t.Program);\n  if (!defaultExport) {\n    return SentryWrapResult.NotFound;\n  }\n\n  const wrappedConfig = wrapWithSentry(defaultExport);\n\n  const replacedDefaultExport = replaceDefaultExport(\n    mod.$ast as t.Program,\n    wrappedConfig,\n  );\n\n  if (!replacedDefaultExport) {\n    return SentryWrapResult.NotFound;\n  }\n\n  return SentryWrapResult.Success;\n}\n\nexport function getDefaultExport(\n  program: t.Program,\n):\n  | t.Identifier\n  | t.CallExpression\n  | t.ObjectExpression\n  | t.FunctionDeclaration\n  | t.ArrowFunctionExpression\n  | t.ClassDeclaration\n  | undefined {\n  for (const node of program.body) {\n    if (\n      t.isExportDefaultDeclaration(node) &&\n      (t.isIdentifier(node.declaration) ||\n        t.isCallExpression(node.declaration) ||\n        t.isObjectExpression(node.declaration) ||\n        t.isFunctionDeclaration(node.declaration) ||\n        t.isArrowFunctionExpression(node.declaration) ||\n        t.isClassDeclaration(node.declaration))\n    ) {\n      Sentry.setTag('app-js-file-status', 'default-export');\n      return node.declaration;\n    }\n  }\n\n  Sentry.setTag('app-js-file-status', 'default-export-not-found');\n  return undefined;\n}\n\nexport function wrapWithSentry(\n  configObj:\n    | t.Identifier\n    | t.CallExpression\n    | t.ObjectExpression\n    | t.FunctionDeclaration\n    | t.ArrowFunctionExpression\n    | t.ClassDeclaration,\n): t.CallExpression {\n  if (t.isFunctionDeclaration(configObj)) {\n    return t.callExpression(\n      t.memberExpression(t.identifier('Sentry'), t.identifier('wrap')),\n      [\n        t.functionExpression(\n          configObj.id,\n          configObj.params,\n          configObj.body,\n          configObj.generator,\n          configObj.async,\n        ),\n      ],\n    );\n  }\n\n  if (t.isArrowFunctionExpression(configObj)) {\n    return t.callExpression(\n      t.memberExpression(t.identifier('Sentry'), t.identifier('wrap')),\n      [configObj],\n    );\n  }\n\n  if (t.isClassDeclaration(configObj)) {\n    return t.callExpression(\n      t.memberExpression(t.identifier('Sentry'), t.identifier('wrap')),\n      [\n        t.classExpression(\n          configObj.id,\n          configObj.superClass,\n          configObj.body,\n          configObj.decorators,\n        ),\n      ],\n    );\n  }\n\n  return t.callExpression(\n    t.memberExpression(t.identifier('Sentry'), t.identifier('wrap')),\n    [configObj],\n  );\n}\n\nexport function replaceDefaultExport(\n  program: t.Program,\n  wrappedDefaultExport: t.CallExpression,\n): boolean {\n  for (const node of program.body) {\n    if (t.isExportDefaultDeclaration(node)) {\n      node.declaration = wrappedDefaultExport;\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function doesContainSentryWrap(program: t.Program): boolean {\n  for (const node of program.body) {\n    if (t.isExportDefaultDeclaration(node)) {\n      const declaration = node.declaration;\n      if (t.isCallExpression(declaration)) {\n        const callExpr = declaration;\n        if (t.isMemberExpression(callExpr.callee)) {\n          const callee = callExpr.callee;\n          if (\n            t.isIdentifier(callee.object) &&\n            callee.object.name === 'Sentry' &&\n            t.isIdentifier(callee.property) &&\n            callee.property.name === 'wrap'\n          ) {\n            return true;\n          }\n        }\n      }\n    }\n  }\n  return false;\n}\n\nfunction getSentryWrapColoredCodeSnippet() {\n  return makeCodeSnippet(true, (_unchanged, plus, _minus) => {\n    return plus(`import * as Sentry from '@sentry/react-native';\n\nexport default Sentry.wrap(App);`);\n  });\n}\n"]}