{"version":3,"file":"templates.js","sourceRoot":"","sources":["../../../src/android/templates.ts"],"names":[],"mappings":";;;AAAO,MAAM,YAAY,GAAG,CAAC,OAAO,GAAG,QAAQ,EAAE,EAAE,CAAC;;6CAEP,OAAO;;;CAGnD,CAAC;AALW,QAAA,YAAY,gBAKvB;AAEK,MAAM,eAAe,GAAG,CAAC,OAAO,GAAG,QAAQ,EAAE,EAAE,CAAC;;8CAET,OAAO;;;CAGpD,CAAC;AALW,QAAA,eAAe,mBAK1B;AAEK,MAAM,MAAM,GAAG,CAAC,OAAO,GAAG,QAAQ,EAAE,EAAE,CAAC;6CACD,OAAO;CACnD,CAAC;AAFW,QAAA,MAAM,UAEjB;AAEK,MAAM,SAAS,GAAG,CAAC,OAAO,GAAG,QAAQ,EAAE,EAAE,CAAC;8CACH,OAAO;CACpD,CAAC;AAFW,QAAA,SAAS,aAEpB;AAEK,MAAM,QAAQ,GAAG,CAAC,GAAW,EAAE,EAAE,CAAC;;6DAEoB,GAAG;;;;;;;;;;;CAW/D,CAAC;AAbW,QAAA,QAAQ,YAanB;AAEW,QAAA,YAAY,GAAG,4BAA4B,CAAC;AAE5C,QAAA,cAAc,GAAG,2BAA2B,CAAC;AAE7C,QAAA,gBAAgB,GAAG;;;;;;;;;CAS/B,CAAC;AAEW,QAAA,kBAAkB,GAAG;;;;;;;;;CASjC,CAAC;AAEK,MAAM,aAAa,GAAG,CAAC,OAAe,EAAE,WAAmB,EAAE,EAAE,CAAC;;;aAG1D,OAAO;qBACC,WAAW;;;;;;CAM/B,CAAC;AAVW,QAAA,aAAa,iBAUxB;AAEK,MAAM,gBAAgB,GAAG,CAAC,OAAe,EAAE,WAAmB,EAAE,EAAE,CAAC;;;eAG3D,OAAO;uBACC,WAAW;;;;;;CAMjC,CAAC;AAVW,QAAA,gBAAgB,oBAU3B","sourcesContent":["export const pluginsBlock = (version = '3.12.0') => `\nplugins {\n    id 'io.sentry.android.gradle' version '${version}'\n}\n\n`;\n\nexport const pluginsBlockKts = (version = '3.12.0') => `\nplugins {\n    id(\"io.sentry.android.gradle\") version \"${version}\"\n}\n\n`;\n\nexport const plugin = (version = '3.12.0') => `\n    id 'io.sentry.android.gradle' version '${version}'\n`;\n\nexport const pluginKts = (version = '3.12.0') => `\n    id(\"io.sentry.android.gradle\") version \"${version}\"\n`;\n\nexport const manifest = (dsn: string) => `\n    <!-- Required: set your sentry.io project identifier (DSN) -->\n    <meta-data android:name=\"io.sentry.dsn\" android:value=\"${dsn}\" />\n\n    <!-- enable automatic breadcrumbs for user interactions (clicks, swipes, scrolls) -->\n    <meta-data android:name=\"io.sentry.traces.user-interaction.enable\" android:value=\"true\" />\n    <!-- enable screenshot for crashes (could contain sensitive/PII data) -->\n    <meta-data android:name=\"io.sentry.attach-screenshot\" android:value=\"true\" />\n    <!-- enable view hierarchy for crashes -->\n    <meta-data android:name=\"io.sentry.attach-view-hierarchy\" android:value=\"true\" />\n\n    <!-- enable the performance API by setting a sample-rate, adjust in production env -->\n    <meta-data android:name=\"io.sentry.traces.sample-rate\" android:value=\"1.0\" />\n`;\n\nexport const sentryImport = `import io.sentry.Sentry;\\n`;\n\nexport const sentryImportKt = `import io.sentry.Sentry\\n`;\n\nexport const testErrorSnippet = `\n    // waiting for view to draw to better represent a captured error with a screenshot\n    findViewById(android.R.id.content).getViewTreeObserver().addOnGlobalLayoutListener(() -> {\n      try {\n        throw new Exception(\"This app uses Sentry! :)\");\n      } catch (Exception e) {\n        Sentry.captureException(e);\n      }\n    });\n`;\n\nexport const testErrorSnippetKt = `\n    // waiting for view to draw to better represent a captured error with a screenshot\n    findViewById<android.view.View>(android.R.id.content).viewTreeObserver.addOnGlobalLayoutListener {\n      try {\n        throw Exception(\"This app uses Sentry! :)\")\n      } catch (e: Exception) {\n        Sentry.captureException(e)\n      }\n    }\n`;\n\nexport const sourceContext = (orgSlug: string, projectSlug: string) => `\n\nsentry {\n    org = \"${orgSlug}\"\n    projectName = \"${projectSlug}\"\n\n    // this will upload your source code to Sentry to show it as part of the stack traces\n    // disable if you don't want to expose your sources\n    includeSourceContext = true\n}\n`;\n\nexport const sourceContextKts = (orgSlug: string, projectSlug: string) => `\n\nsentry {\n    org.set(\"${orgSlug}\")\n    projectName.set(\"${projectSlug}\")\n\n    // this will upload your source code to Sentry to show it as part of the stack traces\n    // disable if you don't want to expose your sources\n    includeSourceContext.set(true)\n}\n`;\n"]}