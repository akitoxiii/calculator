{"version":3,"file":"package-manager.test.js","sourceRoot":"","sources":["../../../test/utils/package-manager.test.ts"],"names":[],"mappings":";;AAAA,mCAA8C;AAC9C,qEAKyC;AAEzC,IAAA,iBAAQ,EAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,IAAA,WAAE,EAAC,8DAA8D,EAAE,GAAG,EAAE;QACtE,MAAM,IAAI,GAAG,EAAE,GAAG,sBAAI,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;QAE7C,MAAM,cAAc,GAAG,IAAA,sCAAoB,EAAC;YAC1C,EAAE,GAAG,qBAAG,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE;YAC/B,EAAE,GAAG,yBAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE;YACnC,IAAI;SACL,CAAC,CAAC;QAEH,IAAA,eAAM,EAAC,cAAc,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,IAAA,WAAE,EAAC,6CAA6C,EAAE,GAAG,EAAE;QACrD,MAAM,cAAc,GAAG,IAAA,sCAAoB,EAAC;YAC1C,EAAE,GAAG,qBAAG,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE;YAC/B,EAAE,GAAG,yBAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE;SACpC,CAAC,CAAC;QACH,IAAA,eAAM,EAAC,cAAc,CAAC,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,IAAA,WAAE,EAAC,qDAAqD,EAAE,GAAG,EAAE;QAC7D,MAAM,cAAc,GAAG,IAAA,sCAAoB,EAAC;YAC1C,EAAE,GAAG,qBAAG,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE;YAC9B,EAAE,GAAG,yBAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE;SACnC,CAAC,CAAC;QACH,IAAA,eAAM,EAAC,cAAc,CAAC,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { describe, expect, it } from 'vitest';\nimport {\n  _detectPackageManger,\n  NPM,\n  PNPM,\n  YARN_V1,\n} from '../../src/utils/package-manager';\n\ndescribe('_detectPackageManager', () => {\n  it('returns the detected package manager if exactly one is found', () => {\n    const pnpm = { ...PNPM, detect: () => true };\n\n    const packageManager = _detectPackageManger([\n      { ...NPM, detect: () => false },\n      { ...YARN_V1, detect: () => false },\n      pnpm,\n    ]);\n\n    expect(packageManager).toBe(pnpm);\n  });\n\n  it('returns null if no package manager is found', () => {\n    const packageManager = _detectPackageManger([\n      { ...NPM, detect: () => false },\n      { ...YARN_V1, detect: () => false },\n    ]);\n    expect(packageManager).toBeNull();\n  });\n\n  it('returns null if multiple package managers are found', () => {\n    const packageManager = _detectPackageManger([\n      { ...NPM, detect: () => true },\n      { ...YARN_V1, detect: () => true },\n    ]);\n    expect(packageManager).toBeNull();\n  });\n});\n"]}