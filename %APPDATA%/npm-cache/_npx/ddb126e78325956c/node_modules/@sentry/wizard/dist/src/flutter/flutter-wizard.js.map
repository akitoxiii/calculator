{"version":3,"file":"flutter-wizard.js","sourceRoot":"","sources":["../../../src/flutter/flutter-wizard.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Sentry from '@sentry/node';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { fetchSdkVersion } from '../utils/release-registry';\nimport { WizardOptions } from '../utils/types';\nimport * as codetools from './code-tools';\nimport { initSnippetColored, pubspecSnippetColored } from './templates';\n// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport * as clack from '@clack/prompts';\nimport chalk from 'chalk';\n\nimport {\n  confirmContinueIfNoOrDirtyGitRepo,\n  getOrAskForProjectData,\n  printWelcome,\n  showCopyPasteInstructions,\n} from '../utils/clack';\n\nimport { traceStep, withTelemetry } from '../telemetry';\nimport { findFile } from './code-tools';\n\nexport async function runFlutterWizard(options: WizardOptions): Promise<void> {\n  return withTelemetry(\n    {\n      enabled: options.telemetryEnabled,\n      integration: 'flutter',\n      wizardOptions: options,\n    },\n    () => runFlutterWizardWithTelemetry(options),\n  );\n}\n\nasync function runFlutterWizardWithTelemetry(\n  options: WizardOptions,\n): Promise<void> {\n  printWelcome({\n    wizardName: 'Sentry Flutter Wizard',\n    promoCode: options.promoCode,\n  });\n\n  await confirmContinueIfNoOrDirtyGitRepo({\n    ignoreGitChanges: options.ignoreGitChanges,\n    cwd: undefined,\n  });\n\n  const { selectedProject, selfHosted, sentryUrl, authToken } =\n    await getOrAskForProjectData(options, 'flutter');\n\n  const projectDir = process.cwd();\n  const pubspecFile = path.join(projectDir, 'pubspec.yaml');\n  if (!fs.existsSync(pubspecFile)) {\n    clack.log.error(\n      `Could not find ${chalk.cyan(\n        'pubspec.yaml',\n      )}. Make sure you run the wizard in the projects root folder.`,\n    );\n    return;\n  }\n\n  // ======== STEP 1. Add sentry_flutter and sentry_dart_plugin to pubspec.yaml ============\n\n  clack.log.step(\n    `Adding ${chalk.bold('Sentry')} to your apps ${chalk.cyan(\n      'pubspec.yaml',\n    )} file.`,\n  );\n\n  const flutterVersion = await fetchSdkVersion('sentry.dart.flutter');\n  const flutterVersionOrAny = flutterVersion ? `^${flutterVersion}` : 'any';\n\n  const pluginVersion = await fetchSdkVersion('sentry.dart.plugin');\n  const pluginVersionOrAny = pluginVersion ? `^${pluginVersion}` : 'any';\n\n  const pubspecPatched = traceStep('Patch pubspec.yaml', () =>\n    codetools.patchPubspec(\n      pubspecFile,\n      flutterVersionOrAny,\n      pluginVersionOrAny,\n      selectedProject.slug,\n      selectedProject.organization.slug,\n    ),\n  );\n  if (!pubspecPatched) {\n    clack.log.warn(\n      `Could not patch ${chalk.cyan(\n        'pubspec.yaml',\n      )}. Add the dependencies to it.`,\n    );\n    await showCopyPasteInstructions({\n      filename: 'pubspec.yaml',\n      codeSnippet: pubspecSnippetColored(\n        flutterVersionOrAny,\n        pluginVersionOrAny,\n        selectedProject.slug,\n        selectedProject.organization.slug,\n      ),\n      hint: 'This ensures the Sentry SDK and plugin can be imported.',\n    });\n  }\n  Sentry.setTag('pubspec-patched', pubspecPatched);\n\n  // ======== STEP 2. Add sentry.properties with auth token ============\n\n  const propertiesAdded = traceStep('Add sentry.properties', () =>\n    codetools.addProperties(pubspecFile, authToken),\n  );\n  if (!propertiesAdded) {\n    clack.log.warn(\n      `We could not add ${chalk.cyan(\n        'sentry.properties',\n      )} file in your project directory in order to provide an auth token for Sentry CLI. You'll have to add it manually, or you can set the SENTRY_AUTH_TOKEN environment variable instead. See https://docs.sentry.io/cli/configuration/#auth-token for more information.`,\n    );\n  } else {\n    clack.log.info(\n      `Created a ${chalk.cyan(\n        'sentry.properties',\n      )} file in your project directory to provide an auth token for Sentry CLI.\nIt was also added to your ${chalk.cyan('.gitignore')} file.\nSet the ${chalk.cyan(\n        'SENTRY_AUTH_TOKEN',\n      )} environment variable in your CI environment. See https://docs.sentry.io/cli/configuration/#auth-token for more information.`,\n    );\n  }\n  Sentry.setTag('sentry-properties-added', pubspecPatched);\n\n  // ======== STEP 3. Patch main.dart with setup and a test error snippet ============\n\n  clack.log.step(\n    `Next, the wizard will patch your ${chalk.cyan(\n      'main.dart',\n    )} file with the SDK init and a test error snippet.`,\n  );\n\n  const mainFile = findFile(`${projectDir}/lib`, 'main.dart');\n  const dsn = selectedProject.keys[0].dsn.public;\n  const canEnableProfiling =\n    fs.existsSync(`${projectDir}/ios`) || fs.existsSync(`${projectDir}/macos`);\n\n  const mainPatched = await traceStep('Patch main.dart', () =>\n    codetools.patchMain(mainFile, dsn, canEnableProfiling),\n  );\n  if (!mainPatched) {\n    clack.log.warn(\n      `Could not patch ${chalk.cyan(\n        'main.dart',\n      )} file. Place the following code snippet within the apps main function.`,\n    );\n    await showCopyPasteInstructions({\n      filename: 'main.dart',\n      codeSnippet: initSnippetColored(dsn),\n      hint: 'This ensures the Sentry SDK is ready to capture errors.',\n    });\n  }\n  Sentry.setTag('main-patched', mainPatched);\n\n  // ======== OUTRO ========\n\n  const issuesPageLink = selfHosted\n    ? `${sentryUrl}organizations/${selectedProject.organization.slug}/issues/?project=${selectedProject.id}`\n    : `https://${selectedProject.organization.slug}.sentry.io/issues/?project=${selectedProject.id}`;\n\n  clack.outro(`\n    ${chalk.greenBright('Successfully installed the Sentry Flutter SDK!')}\n    \n    ${chalk.cyan('Next steps:')}\n    1. Run ${chalk.bold(\n      'flutter run',\n    )} to test the setup - we've added a test error that will trigger on app start\n    2. For production builds, run ${chalk.bold(\n      'flutter build apk --obfuscate --split-debug-info=build/debug-info',\n    )} (or ios/macos) then ${chalk.bold(\n    'flutter pub run sentry_dart_plugin',\n  )} to upload debug symbols\n    3. View your test error and transaction data at ${issuesPageLink}\n    \n    ${chalk.cyan('Learn more:')}\n    - Debug Symbols: https://docs.sentry.io/platforms/dart/guides/flutter/debug-symbols/\n    - Performance Monitoring: https://docs.sentry.io/platforms/dart/guides/flutter/performance/\n    - Integrations: https://docs.sentry.io/platforms/dart/guides/flutter/integrations/\n  `);\n}\n"]}