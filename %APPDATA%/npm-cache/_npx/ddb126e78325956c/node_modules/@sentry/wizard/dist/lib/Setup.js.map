{"version":3,"file":"Setup.js","sourceRoot":"","sources":["../../lib/Setup.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,8CAAqD;AAGrD,sCAA+C;AAC/C,4CAA8C;AAC9C,8CAAgC;AAChC,gDAAiD;AAEjD,uCAAqC;AAErC;;;;;GAKG;AACI,KAAK,UAAU,GAAG,CACvB,IAAU,EACV,aAA4B;IAE5B,MAAM,IAAI,GAAG,EAAE,GAAG,IAAI,EAAE,GAAG,IAAA,qBAAe,GAAE,EAAE,CAAC;IAE/C,IAAI,IAAI,CAAC,KAAK,EAAE;QACd,IAAA,uBAAe,GAAE,CAAC;KACnB;IAED,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;QAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACxB;IACD,MAAM,KAAK,GAAG;QACZ,IAAI,CAAC,OAAO;QACZ,IAAI,CAAC,OAAO;QACZ,IAAI,CAAC,iBAAiB;QACtB,IAAI,CAAC,eAAe;KACrB,CAAC;IACF,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE;QAC5B,KAAK,CAAC,IAAI,CACR,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,qBAAqB,EAC1B,IAAI,CAAC,mBAAmB,CACzB,CAAC;KACH;IACD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAE/C,OAAO,IAAA,yBAAa,EAClB;QACE,OAAO,EAAE,aAAa,CAAC,gBAAgB;QACvC,WAAW,EAAE,IAAI,CAAC,WAAW;QAC7B,aAAa;KACd,EACD,KAAK,IAAI,EAAE;QACT,MAAM,GAAG,GAAG,MAAM,IAAA,oBAAW,EAAC,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC;QAC9C,MAAM,IAAA,YAAK,EAAC,IAAI,CAAC,CAAC;QAClB,OAAO,GAAG,CAAC;IACb,CAAC,CACF,CAAC;AACJ,CAAC;AAzCD,kBAyCC","sourcesContent":["import { Answers } from 'inquirer';\nimport { enableDebugLogs } from '../src/utils/debug';\nimport { Args } from './Constants';\n\nimport { readEnvironment } from './Helper/Env';\nimport { startWizard } from './Helper/Wizard';\nimport * as Step from './Steps';\nimport { withTelemetry } from '../src/telemetry';\nimport { WizardOptions } from '../src/utils/types';\nimport { flush } from '@sentry/node';\n\n/**\n * @deprecated this function is the entry point to the old, step-based wizards located in `lib`.\n * When creating new wizards, we now add them to clack-based wizards under `src`.\n * Therefor, do not call this function anymore.\n * Use `run` from {@link ../src/run.ts} instead.\n */\nexport async function run(\n  argv: Args,\n  wizardOptions: WizardOptions,\n): Promise<Answers> {\n  const args = { ...argv, ...readEnvironment() };\n\n  if (argv.debug) {\n    enableDebugLogs();\n  }\n\n  if (args.uninstall === undefined) {\n    args.uninstall = false;\n  }\n  const steps = [\n    Step.Initial,\n    Step.Welcome,\n    Step.ChooseIntegration,\n    Step.ShouldConfigure,\n  ];\n  if (args.uninstall === false) {\n    steps.push(\n      Step.OpenSentry,\n      Step.WaitForSentry,\n      Step.SentryProjectSelector,\n      Step.PromptForParameters,\n    );\n  }\n  steps.push(Step.ConfigureProject, Step.Result);\n\n  return withTelemetry(\n    {\n      enabled: wizardOptions.telemetryEnabled,\n      integration: args.integration,\n      wizardOptions,\n    },\n    async () => {\n      const res = await startWizard(args, ...steps);\n      await flush(3000);\n      return res;\n    },\n  );\n}\n"]}