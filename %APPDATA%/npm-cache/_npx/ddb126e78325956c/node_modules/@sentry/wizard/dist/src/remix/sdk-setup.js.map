{"version":3,"file":"sdk-setup.js","sourceRoot":"","sources":["../../../src/remix/sdk-setup.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nimport type { Program } from '@babel/types';\n\n// @ts-expect-error - magicast is ESM and TS complains about that. It works though\nimport type { Proxified, ProxifiedModule } from 'magicast';\n\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as url from 'url';\nimport * as childProcess from 'child_process';\n\n// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport clack from '@clack/prompts';\nimport chalk from 'chalk';\nimport { gte, minVersion } from 'semver';\n\nimport {\n  builders,\n  generateCode,\n  loadFile,\n  parseModule,\n  writeFile,\n  // @ts-expect-error - magicast is ESM and TS complains about that. It works though\n} from 'magicast';\nimport type { PackageDotJson } from '../utils/package-json';\nimport { getPackageVersion } from '../utils/package-json';\nimport {\n  getAfterImportsInsertionIndex,\n  hasSentryContent,\n  serverHasInstrumentationImport,\n} from './utils';\nimport { instrumentRootRouteV1 } from './codemods/root-v1';\nimport { instrumentRootRouteV2 } from './codemods/root-v2';\nimport { instrumentHandleError } from './codemods/handle-error';\nimport { getPackageDotJson } from '../utils/clack';\nimport { findCustomExpressServerImplementation } from './codemods/express-server';\n\nexport type PartialRemixConfig = {\n  unstable_dev?: boolean;\n  future?: {\n    v2_dev?: boolean;\n    v2_errorBoundary?: boolean;\n    v2_headers?: boolean;\n    v2_meta?: boolean;\n    v2_normalizeFormMethod?: boolean;\n    v2_routeConvention?: boolean;\n  };\n};\n\nconst REMIX_CONFIG_FILE = 'remix.config.js';\nconst REMIX_REVEAL_COMMAND = 'npx remix reveal';\n\nexport function runRemixReveal(isTS: boolean): void {\n  // Check if entry files already exist\n  const clientEntryFilename = `entry.client.${isTS ? 'tsx' : 'jsx'}`;\n  const serverEntryFilename = `entry.server.${isTS ? 'tsx' : 'jsx'}`;\n\n  const clientEntryPath = path.join(process.cwd(), 'app', clientEntryFilename);\n  const serverEntryPath = path.join(process.cwd(), 'app', serverEntryFilename);\n\n  if (fs.existsSync(clientEntryPath) && fs.existsSync(serverEntryPath)) {\n    clack.log.info(\n      `Found entry files ${chalk.cyan(clientEntryFilename)} and ${chalk.cyan(\n        serverEntryFilename,\n      )}.`,\n    );\n  } else {\n    clack.log.info(\n      `Couldn't find entry files in your project. Trying to run ${chalk.cyan(\n        REMIX_REVEAL_COMMAND,\n      )}...`,\n    );\n\n    clack.log.info(childProcess.execSync(REMIX_REVEAL_COMMAND).toString());\n  }\n}\n\ninterface SdkAstOptions {\n  dsn: string;\n  tracesSampleRate?: number;\n  replaysSessionSampleRate?: number;\n  replaysOnErrorSampleRate?: number;\n  integrations?: Array<Proxified>;\n}\n\nfunction getInitCallArgs(\n  dsn: string,\n  type: 'client' | 'server',\n  selectedFeatures: {\n    performance: boolean;\n    replay: boolean;\n  },\n) {\n  const initCallArgs: SdkAstOptions = {\n    dsn,\n  };\n\n  // Adding tracing sample rate for both client and server\n  if (selectedFeatures.performance) {\n    initCallArgs.tracesSampleRate = 1.0;\n  }\n\n  // Adding integrations and replay options only for client\n  if (\n    type === 'client' &&\n    (selectedFeatures.performance || selectedFeatures.replay)\n  ) {\n    initCallArgs.integrations = [] as Array<Proxified>;\n\n    if (selectedFeatures.performance) {\n      initCallArgs.integrations.push(\n        builders.functionCall(\n          'browserTracingIntegration',\n          builders.raw('{ useEffect, useLocation, useMatches }'),\n        ),\n      );\n    }\n\n    if (selectedFeatures.replay) {\n      initCallArgs.integrations.push(\n        builders.functionCall('replayIntegration', {\n          maskAllText: true,\n          blockAllMedia: true,\n        }),\n      );\n\n      initCallArgs.replaysSessionSampleRate = 0.1;\n      initCallArgs.replaysOnErrorSampleRate = 1.0;\n    }\n  }\n\n  return initCallArgs;\n}\n\nfunction insertClientInitCall(\n  dsn: string,\n  // MagicAst returns `ProxifiedModule<any>` so therefore we have to use `any` here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  originalHooksMod: ProxifiedModule<any>,\n  selectedFeatures: {\n    performance: boolean;\n    replay: boolean;\n  },\n): void {\n  const initCallArgs = getInitCallArgs(dsn, 'client', selectedFeatures);\n  const initCall = builders.functionCall('init', initCallArgs);\n\n  const originalHooksModAST = originalHooksMod.$ast as Program;\n  const initCallInsertionIndex =\n    getAfterImportsInsertionIndex(originalHooksModAST);\n\n  originalHooksModAST.body.splice(\n    initCallInsertionIndex,\n    0,\n    // @ts-expect-error - string works here because the AST is proxified by magicast\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    generateCode(initCall).code,\n  );\n}\n\nexport function generateServerInstrumentationFile(\n  dsn: string,\n  selectedFeatures: {\n    performance: boolean;\n    replay: boolean;\n  },\n) {\n  // create an empty file named `instrument.server.mjs`\n  const instrumentationFile = 'instrumentation.server.mjs';\n  const instrumentationFileMod = parseModule('');\n\n  instrumentationFileMod.imports.$add({\n    from: '@sentry/remix',\n    imported: '*',\n    local: 'Sentry',\n  });\n\n  const initCallArgs = getInitCallArgs(dsn, 'server', selectedFeatures);\n  const initCall = builders.functionCall('Sentry.init', initCallArgs);\n\n  const instrumentationFileModAST = instrumentationFileMod.$ast as Program;\n\n  const initCallInsertionIndex = getAfterImportsInsertionIndex(\n    instrumentationFileModAST,\n  );\n\n  instrumentationFileModAST.body.splice(\n    initCallInsertionIndex,\n    0,\n    // @ts-expect-error - string works here because the AST is proxified by magicast\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    generateCode(initCall).code,\n  );\n\n  return { instrumentationFile, instrumentationFileMod };\n}\n\nexport async function createServerInstrumentationFile(\n  dsn: string,\n  selectedFeatures: {\n    performance: boolean;\n    replay: boolean;\n  },\n) {\n  const { instrumentationFile, instrumentationFileMod } =\n    generateServerInstrumentationFile(dsn, selectedFeatures);\n\n  await writeFile(instrumentationFileMod.$ast, instrumentationFile);\n\n  return instrumentationFile;\n}\n\nexport async function insertServerInstrumentationFile(\n  dsn: string,\n  selectedFeatures: {\n    performance: boolean;\n    replay: boolean;\n  },\n) {\n  const instrumentationFile = await createServerInstrumentationFile(\n    dsn,\n    selectedFeatures,\n  );\n\n  const expressServerPath = await findCustomExpressServerImplementation();\n\n  if (!expressServerPath) {\n    return false;\n  }\n\n  const originalExpressServerMod = await loadFile(expressServerPath);\n\n  if (\n    serverHasInstrumentationImport(\n      expressServerPath,\n      originalExpressServerMod.$code,\n    )\n  ) {\n    clack.log.warn(\n      `File ${chalk.cyan(\n        path.basename(expressServerPath),\n      )} already contains instrumentation import.\nSkipping adding instrumentation functionality to ${chalk.cyan(\n        path.basename(expressServerPath),\n      )}.`,\n    );\n\n    return true;\n  }\n\n  originalExpressServerMod.$code = `import './${instrumentationFile}';\\n${originalExpressServerMod.$code}`;\n\n  fs.writeFileSync(expressServerPath, originalExpressServerMod.$code);\n\n  return true;\n}\n\nexport function isRemixV2(\n  remixConfig: PartialRemixConfig,\n  packageJson: PackageDotJson,\n): boolean {\n  const remixVersion = getPackageVersion('@remix-run/react', packageJson);\n  if (!remixVersion) {\n    return false;\n  }\n\n  const minVer = minVersion(remixVersion);\n\n  if (!minVer) {\n    return false;\n  }\n\n  const isV2Remix = gte(minVer, '2.0.0');\n\n  return isV2Remix || remixConfig?.future?.v2_errorBoundary || false;\n}\n\nexport async function loadRemixConfig(): Promise<PartialRemixConfig> {\n  const configFilePath = path.join(process.cwd(), REMIX_CONFIG_FILE);\n\n  try {\n    if (!fs.existsSync(configFilePath)) {\n      return {};\n    }\n\n    const configUrl = url.pathToFileURL(configFilePath).href;\n    const remixConfigModule = (await import(configUrl)) as {\n      default: PartialRemixConfig;\n    };\n\n    return remixConfigModule?.default || {};\n  } catch (e: unknown) {\n    clack.log.error(`Couldn't load ${REMIX_CONFIG_FILE}.`);\n    clack.log.info(\n      chalk.dim(\n        typeof e === 'object' && e != null && 'toString' in e\n          ? e.toString()\n          : typeof e === 'string'\n          ? e\n          : 'Unknown error',\n      ),\n    );\n\n    return {};\n  }\n}\n\nexport async function instrumentRootRoute(\n  isV2?: boolean,\n  isTS?: boolean,\n): Promise<void> {\n  const rootFilename = `root.${isTS ? 'tsx' : 'jsx'}`;\n\n  if (isV2) {\n    await instrumentRootRouteV2(rootFilename);\n  } else {\n    await instrumentRootRouteV1(rootFilename);\n  }\n\n  clack.log.success(\n    `Successfully instrumented root route ${chalk.cyan(rootFilename)}.`,\n  );\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n}\n\nexport async function updateBuildScript(args: {\n  org: string;\n  project: string;\n  url?: string;\n  isHydrogen: boolean;\n}): Promise<void> {\n  const packageJson = await getPackageDotJson();\n\n  if (!packageJson.scripts) {\n    packageJson.scripts = {};\n  }\n\n  const buildCommand = args.isHydrogen\n    ? 'shopify hydrogen build'\n    : 'remix build';\n\n  const instrumentedBuildCommand =\n    `${buildCommand} --sourcemap && sentry-upload-sourcemaps --org ${args.org} --project ${args.project}` +\n    (args.url ? ` --url ${args.url}` : '') +\n    (args.isHydrogen ? ' --buildPath ./dist' : '');\n\n  if (!packageJson.scripts.build) {\n    packageJson.scripts.build = instrumentedBuildCommand;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n  } else if (packageJson.scripts.build.includes(buildCommand)) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    packageJson.scripts.build = packageJson.scripts.build.replace(\n      buildCommand,\n      instrumentedBuildCommand,\n    );\n  } else {\n    throw new Error(\n      \"`build` script doesn't contain a known build command. Please update it manually.\",\n    );\n  }\n\n  await fs.promises.writeFile(\n    path.join(process.cwd(), 'package.json'),\n    JSON.stringify(packageJson, null, 2),\n  );\n\n  clack.log.success(\n    `Successfully updated ${chalk.cyan('build')} script in ${chalk.cyan(\n      'package.json',\n    )} to generate and upload sourcemaps.`,\n  );\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n}\n\nexport function updateEntryClientMod(\n  // MagicAst returns `ProxifiedModule<any>` so therefore we have to use `any` here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  originalEntryClientMod: ProxifiedModule<any>,\n  dsn: string,\n  selectedFeatures: {\n    performance: boolean;\n    replay: boolean;\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): ProxifiedModule<any> {\n  const imports = ['init'];\n  if (selectedFeatures.replay) {\n    imports.push('replayIntegration');\n  }\n  if (selectedFeatures.performance) {\n    imports.push('browserTracingIntegration');\n  }\n  originalEntryClientMod.imports.$add({\n    from: '@sentry/remix',\n    imported: `${imports.join(', ')}`,\n  });\n\n  if (selectedFeatures.performance) {\n    originalEntryClientMod.imports.$add({\n      from: '@remix-run/react',\n      imported: 'useLocation',\n      local: 'useLocation',\n    });\n\n    originalEntryClientMod.imports.$add({\n      from: '@remix-run/react',\n      imported: 'useMatches',\n      local: 'useMatches',\n    });\n\n    originalEntryClientMod.imports.$add({\n      from: 'react',\n      imported: 'useEffect',\n      local: 'useEffect',\n    });\n  }\n\n  insertClientInitCall(dsn, originalEntryClientMod, selectedFeatures);\n\n  return originalEntryClientMod;\n}\n\nexport async function initializeSentryOnEntryClient(\n  dsn: string,\n  isTS: boolean,\n  selectedFeatures: {\n    performance: boolean;\n    replay: boolean;\n  },\n): Promise<void> {\n  const clientEntryFilename = `entry.client.${isTS ? 'tsx' : 'jsx'}`;\n\n  const originalEntryClient = path.join(\n    process.cwd(),\n    'app',\n    clientEntryFilename,\n  );\n\n  const originalEntryClientMod = await loadFile(originalEntryClient);\n\n  if (hasSentryContent(originalEntryClient, originalEntryClientMod.$code)) {\n    return;\n  }\n\n  const updatedEntryClientMod = updateEntryClientMod(\n    originalEntryClientMod,\n    dsn,\n    selectedFeatures,\n  );\n\n  await writeFile(\n    updatedEntryClientMod.$ast,\n    path.join(process.cwd(), 'app', clientEntryFilename),\n  );\n\n  clack.log.success(\n    `Successfully initialized Sentry on client entry point ${chalk.cyan(\n      clientEntryFilename,\n    )}`,\n  );\n}\n\nexport async function updateStartScript(instrumentationFile: string) {\n  const packageJson = await getPackageDotJson();\n\n  if (!packageJson.scripts || !packageJson.scripts.start) {\n    throw new Error(\n      \"Couldn't find a `start` script in your package.json. Please add one manually.\",\n    );\n  }\n\n  if (packageJson.scripts.start.includes('NODE_OPTIONS')) {\n    clack.log.warn(\n      `Found existing NODE_OPTIONS in ${chalk.cyan(\n        'start',\n      )} script. Skipping adding Sentry initialization.`,\n    );\n\n    return;\n  }\n\n  if (\n    !packageJson.scripts.start.includes('remix-serve') &&\n    // Adding a following empty space not to match a path that includes `node`\n    !packageJson.scripts.start.includes('node ')\n  ) {\n    clack.log.warn(\n      `Found a ${chalk.cyan('start')} script that doesn't use ${chalk.cyan(\n        'remix-serve',\n      )} or ${chalk.cyan('node')}. Skipping adding Sentry initialization.`,\n    );\n\n    return;\n  }\n\n  const startCommand = packageJson.scripts.start;\n\n  packageJson.scripts.start = `NODE_OPTIONS='--import ./${instrumentationFile}' ${startCommand}`;\n\n  await fs.promises.writeFile(\n    path.join(process.cwd(), 'package.json'),\n    JSON.stringify(packageJson, null, 2),\n  );\n\n  clack.log.success(\n    `Successfully updated ${chalk.cyan('start')} script in ${chalk.cyan(\n      'package.json',\n    )} to include Sentry initialization on start.`,\n  );\n}\n\nexport async function instrumentSentryOnEntryServer(\n  isV2: boolean,\n  isTS: boolean,\n): Promise<void> {\n  const serverEntryFilename = `entry.server.${isTS ? 'tsx' : 'jsx'}`;\n\n  const originalEntryServer = path.join(\n    process.cwd(),\n    'app',\n    serverEntryFilename,\n  );\n\n  const originalEntryServerMod = await loadFile(originalEntryServer);\n\n  if (hasSentryContent(originalEntryServer, originalEntryServerMod.$code)) {\n    return;\n  }\n\n  originalEntryServerMod.imports.$add({\n    from: '@sentry/remix',\n    imported: '*',\n    local: 'Sentry',\n  });\n\n  if (isV2) {\n    const handleErrorInstrumented = instrumentHandleError(\n      originalEntryServerMod,\n      serverEntryFilename,\n    );\n\n    if (handleErrorInstrumented) {\n      clack.log.success(\n        `Instrumented ${chalk.cyan('handleError')} in ${chalk.cyan(\n          `${serverEntryFilename}`,\n        )}`,\n      );\n    }\n  }\n\n  await writeFile(\n    originalEntryServerMod.$ast,\n    path.join(process.cwd(), 'app', serverEntryFilename),\n  );\n\n  clack.log.success(\n    `Successfully initialized Sentry on server entry point ${chalk.cyan(\n      serverEntryFilename,\n    )}.`,\n  );\n}\n"]}