{"version":3,"file":"react-native-wizard.js","sourceRoot":"","sources":["../../../src/react-native/react-native-wizard.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable max-lines */\n// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport clack from '@clack/prompts';\nimport chalk from 'chalk';\nimport * as fs from 'fs';\n\nimport * as Sentry from '@sentry/node';\nimport { platform } from 'os';\nimport { podInstall } from '../apple/cocoapod';\nimport { traceStep, withTelemetry } from '../telemetry';\nimport {\n  CliSetupConfigContent,\n  abort,\n  abortIfCancelled,\n  addSentryCliConfig,\n  confirmContinueIfNoOrDirtyGitRepo,\n  confirmContinueIfPackageVersionNotSupported,\n  ensurePackageIsInstalled,\n  getOrAskForProjectData,\n  getPackageDotJson,\n  installPackage,\n  printWelcome,\n  propertiesCliSetupConfig,\n  runPrettierIfInstalled,\n} from '../utils/clack';\nimport { getPackageVersion, hasPackageInstalled } from '../utils/package-json';\nimport { fulfillsVersionRange } from '../utils/semver';\nimport { getIssueStreamUrl } from '../utils/url';\nimport { patchExpoAppConfig, printSentryExpoMigrationOutro } from './expo';\nimport { addExpoEnvLocal } from './expo-env-file';\nimport { addSentryToExpoMetroConfig } from './expo-metro';\nimport { APP_BUILD_GRADLE, XCODE_PROJECT, getFirstMatchedPath } from './glob';\nimport {\n  addRNSentryGradlePlugin,\n  doesAppBuildGradleIncludeRNSentryGradlePlugin,\n  writeAppBuildGradle,\n} from './gradle';\nimport { addSentryInit, wrapRootComponent } from './javascript';\nimport {\n  patchMetroConfigWithSentrySerializer,\n  patchMetroWithSentryConfig,\n} from './metro';\nimport { ReactNativeWizardOptions } from './options';\nimport { runReactNativeUninstall } from './uninstall';\nimport {\n  addDebugFilesUploadPhaseWithBundledScripts,\n  addDebugFilesUploadPhaseWithCli,\n  addSentryWithBundledScriptsToBundleShellScript,\n  addSentryWithCliToBundleShellScript,\n  findBundlePhase,\n  findDebugFilesUploadPhase,\n  getValidExistingBuildPhases,\n  patchBundlePhase,\n  writeXcodeProject,\n} from './xcode';\n\nimport xcode from 'xcode';\n\nexport const RN_SDK_PACKAGE = '@sentry/react-native';\nexport const RN_SDK_SUPPORTED_RANGE = '>=5.0.0';\n\nexport const RN_PACKAGE = 'react-native';\nexport const RN_HUMAN_NAME = 'React Native';\n\nexport const SUPPORTED_RN_RANGE = '>=0.69.0';\nexport const SUPPORTED_EXPO_RANGE = '>=50.0.0';\n\n/**\n * The following SDK version ship with bundled Xcode scripts\n * which simplifies the Xcode Build Phases setup.\n */\nexport const XCODE_SCRIPTS_SUPPORTED_SDK_RANGE = '>=5.11.0';\n\n/**\n * The following SDK version ship with Sentry Metro plugin\n */\nexport const SENTRY_METRO_PLUGIN_SUPPORTED_SDK_RANGE = '>=5.11.0';\n\n/**\n * The following SDK version supports mobile Session Replay\n */\nexport const SESSION_REPLAY_SUPPORTED_SDK_RANGE = '>=6.5.0';\n\n/**\n * The following SDK version ship with bundled Expo plugin\n */\nexport const EXPO_SUPPORTED_SDK_RANGE = `>=5.16.0`;\n\n// The following SDK version shipped `withSentryConfig`\nexport const METRO_WITH_SENTRY_CONFIG_SUPPORTED_SDK_RANGE = '>=5.17.0';\n\nexport type RNCliSetupConfigContent = Pick<\n  Required<CliSetupConfigContent>,\n  'authToken' | 'org' | 'project' | 'url'\n>;\n\nexport async function runReactNativeWizard(\n  params: ReactNativeWizardOptions,\n): Promise<void> {\n  return withTelemetry(\n    {\n      enabled: params.telemetryEnabled,\n      integration: 'react-native',\n      wizardOptions: params,\n    },\n    () => runReactNativeWizardWithTelemetry(params),\n  );\n}\n\nexport async function runReactNativeWizardWithTelemetry(\n  options: ReactNativeWizardOptions,\n): Promise<void> {\n  if (options.uninstall) {\n    Sentry.setTag('uninstall', true);\n    return runReactNativeUninstall(options);\n  }\n\n  const { promoCode, telemetryEnabled, forceInstall } = options;\n\n  printWelcome({\n    wizardName: 'Sentry React Native Wizard',\n    promoCode,\n    telemetryEnabled,\n  });\n\n  await confirmContinueIfNoOrDirtyGitRepo({\n    ignoreGitChanges: options.ignoreGitChanges,\n    cwd: undefined,\n  });\n\n  const packageJson = await getPackageDotJson();\n  const hasInstalled = (dep: string) => hasPackageInstalled(dep, packageJson);\n\n  if (hasInstalled('sentry-expo')) {\n    Sentry.setTag('has-sentry-expo-installed', true);\n    printSentryExpoMigrationOutro();\n    return;\n  }\n\n  await ensurePackageIsInstalled(packageJson, RN_PACKAGE, RN_HUMAN_NAME);\n\n  const rnVersion = getPackageVersion(RN_PACKAGE, packageJson);\n  if (rnVersion) {\n    await confirmContinueIfPackageVersionNotSupported({\n      packageName: RN_HUMAN_NAME,\n      packageVersion: rnVersion,\n      packageId: RN_PACKAGE,\n      acceptableVersions: SUPPORTED_RN_RANGE,\n      note: `Please upgrade to ${SUPPORTED_RN_RANGE} if you wish to use the Sentry Wizard.\nOr setup using ${chalk.cyan(\n        'https://docs.sentry.io/platforms/react-native/manual-setup/manual-setup/',\n      )}`,\n    });\n  }\n\n  await installPackage({\n    packageName: RN_SDK_PACKAGE,\n    alreadyInstalled: hasPackageInstalled(RN_SDK_PACKAGE, packageJson),\n    forceInstall,\n  });\n  const sdkVersion = getPackageVersion(\n    RN_SDK_PACKAGE,\n    await getPackageDotJson(),\n  );\n  if (sdkVersion) {\n    await confirmContinueIfPackageVersionNotSupported({\n      packageName: 'Sentry React Native SDK',\n      packageVersion: sdkVersion,\n      packageId: RN_SDK_PACKAGE,\n      acceptableVersions: RN_SDK_SUPPORTED_RANGE,\n      note: `Please upgrade to ${RN_SDK_SUPPORTED_RANGE} to continue with the wizard in this project.`,\n    });\n  } else {\n    const continueWithoutSdk = await abortIfCancelled(\n      clack.confirm({\n        message:\n          'Could not detect Sentry React Native SDK version. Do you want to continue anyway?',\n      }),\n    );\n    if (!continueWithoutSdk) {\n      await abort(undefined, 0);\n    }\n  }\n  Sentry.setTag(`detected-sentry-react-native-sdk-version`, sdkVersion);\n\n  const expoVersion = getPackageVersion('expo', packageJson);\n  const isExpo = !!expoVersion;\n  if (expoVersion && sdkVersion) {\n    await confirmContinueIfPackageVersionNotSupported({\n      packageName: 'Sentry React Native SDK',\n      packageVersion: sdkVersion,\n      packageId: RN_SDK_PACKAGE,\n      acceptableVersions: EXPO_SUPPORTED_SDK_RANGE,\n      note: `Please upgrade to ${EXPO_SUPPORTED_SDK_RANGE} to continue with the wizard in this Expo project.`,\n    });\n    await confirmContinueIfPackageVersionNotSupported({\n      packageName: 'Expo SDK',\n      packageVersion: expoVersion,\n      packageId: 'expo',\n      acceptableVersions: SUPPORTED_EXPO_RANGE,\n      note: `Please upgrade to ${SUPPORTED_EXPO_RANGE} to continue with the wizard in this Expo project.`,\n    });\n  }\n\n  const { selectedProject, authToken, sentryUrl } =\n    await getOrAskForProjectData(options, 'react-native');\n  const orgSlug = selectedProject.organization.slug;\n  const projectSlug = selectedProject.slug;\n  const projectId = selectedProject.id;\n  const cliConfig: RNCliSetupConfigContent = {\n    authToken,\n    org: orgSlug,\n    project: projectSlug,\n    url: sentryUrl,\n  };\n\n  // Check if SDK version supports Session Replay\n  let enableSessionReplay = false;\n  if (\n    sdkVersion &&\n    fulfillsVersionRange({\n      version: sdkVersion,\n      acceptableVersions: SESSION_REPLAY_SUPPORTED_SDK_RANGE,\n      canBeLatest: true,\n    })\n  ) {\n    // Ask if user wants to enable Session Replay\n    enableSessionReplay = await abortIfCancelled(\n      clack.confirm({\n        message:\n          'Do you want to enable Session Replay to help debug issues? (See https://docs.sentry.io/platforms/react-native/session-replay/)',\n      }),\n    );\n\n    Sentry.setTag('enable-session-replay', enableSessionReplay);\n  } else if (sdkVersion) {\n    clack.log.info(\n      `Session Replay is supported from Sentry React Native SDK version ${SESSION_REPLAY_SUPPORTED_SDK_RANGE}. Your version (${sdkVersion}) doesn't support it yet.`,\n    );\n    clack.log.message(\n      `To use Session Replay, please upgrade your Sentry SDK: npm install ${RN_SDK_PACKAGE}@latest --save`,\n    );\n  }\n\n  await traceStep('patch-app-js', () =>\n    addSentryInit({\n      dsn: selectedProject.keys[0].dsn.public,\n      enableSessionReplay,\n    }),\n  );\n\n  await traceStep('patch-app-js-wrap', () => wrapRootComponent());\n\n  if (isExpo) {\n    await traceStep('patch-expo-app-config', () =>\n      patchExpoAppConfig(cliConfig),\n    );\n    await traceStep('add-expo-env-local', () => addExpoEnvLocal(cliConfig));\n  }\n\n  if (isExpo) {\n    await traceStep('patch-metro-config', addSentryToExpoMetroConfig);\n  } else {\n    await traceStep('patch-metro-config', () =>\n      addSentryToMetroConfig({ sdkVersion }),\n    );\n  }\n\n  if (fs.existsSync('ios')) {\n    Sentry.setTag('patch-ios', true);\n    await traceStep('patch-xcode-files', () =>\n      patchXcodeFiles(cliConfig, { sdkVersion }),\n    );\n  }\n\n  if (fs.existsSync('android')) {\n    Sentry.setTag('patch-android', true);\n    await traceStep('patch-android-files', () => patchAndroidFiles(cliConfig));\n  }\n\n  await runPrettierIfInstalled({\n    cwd: undefined,\n  });\n\n  const confirmedFirstException = await confirmFirstSentryException(\n    sentryUrl,\n    orgSlug,\n    projectId,\n  );\n\n  Sentry.setTag('user-confirmed-first-error', confirmedFirstException);\n\n  if (confirmedFirstException) {\n    clack.outro(\n      `${chalk.green('Everything is set up!')}\n\n   ${chalk.dim(\n     'If you encounter any issues, let us know here: https://github.com/getsentry/sentry-react-native/issues',\n   )}`,\n    );\n  } else {\n    clack.outro(\n      `${chalk.dim(\n        'Let us know here: https://github.com/getsentry/sentry-react-native/issues',\n      )}`,\n    );\n  }\n}\n\nfunction addSentryToMetroConfig({\n  sdkVersion,\n}: {\n  sdkVersion: string | undefined;\n}) {\n  if (\n    sdkVersion &&\n    fulfillsVersionRange({\n      version: sdkVersion,\n      acceptableVersions: METRO_WITH_SENTRY_CONFIG_SUPPORTED_SDK_RANGE,\n      canBeLatest: true,\n    })\n  ) {\n    return patchMetroWithSentryConfig();\n  }\n\n  if (\n    sdkVersion &&\n    fulfillsVersionRange({\n      version: sdkVersion,\n      acceptableVersions: SENTRY_METRO_PLUGIN_SUPPORTED_SDK_RANGE,\n      canBeLatest: true,\n    })\n  ) {\n    return patchMetroConfigWithSentrySerializer();\n  }\n}\n\nasync function confirmFirstSentryException(\n  url: string,\n  orgSlug: string,\n  projectId: string,\n) {\n  const issuesStreamUrl = getIssueStreamUrl({ url, orgSlug, projectId });\n\n  clack.log\n    .step(`To make sure everything is set up correctly, put the following code snippet into your application.\nThe snippet will create a button that, when tapped, sends a test event to Sentry.\n\nAfter that check your project issues:\n\n${chalk.cyan(issuesStreamUrl)}`);\n\n  // We want the code snippet to be easily copy-pasteable, without any clack artifacts\n  // eslint-disable-next-line no-console\n  console.log(\n    chalk.greenBright(`\n<Button title='Try!' onPress={ () => { Sentry.captureException(new Error('First error')) }}/>\n`),\n  );\n\n  const firstErrorConfirmed = clack.confirm({\n    message: `Have you successfully sent a test event?`,\n  });\n\n  return firstErrorConfirmed;\n}\n\nasync function patchXcodeFiles(\n  config: RNCliSetupConfigContent,\n  context: {\n    sdkVersion: string | undefined;\n  },\n) {\n  await addSentryCliConfig(config, {\n    ...propertiesCliSetupConfig,\n    name: 'source maps and iOS debug files',\n    filename: 'ios/sentry.properties',\n    gitignore: false,\n  });\n\n  if (platform() === 'darwin' && (await confirmPodInstall())) {\n    await traceStep('pod-install', () => podInstall('ios'));\n  }\n\n  const xcodeProjectPath = traceStep('find-xcode-project', () =>\n    getFirstMatchedPath(XCODE_PROJECT),\n  );\n  Sentry.setTag(\n    'xcode-project-status',\n    xcodeProjectPath ? 'found' : 'not-found',\n  );\n  if (!xcodeProjectPath) {\n    clack.log.warn(\n      `Could not find Xcode project file using ${chalk.cyan(XCODE_PROJECT)}.`,\n    );\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const [xcodeProject, buildPhasesMap] = traceStep(\n    'parse-xcode-project',\n    () => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      const project = xcode.project(xcodeProjectPath);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      project.parseSync();\n\n      const map = getValidExistingBuildPhases(project);\n      return [project, map];\n    },\n  );\n  Sentry.setTag('xcode-project-status', 'parsed');\n\n  await traceStep('patch-bundle-phase', async () => {\n    const bundlePhase = findBundlePhase(buildPhasesMap);\n    Sentry.setTag(\n      'xcode-bundle-phase-status',\n      bundlePhase ? 'found' : 'not-found',\n    );\n    if (\n      context.sdkVersion &&\n      fulfillsVersionRange({\n        version: context.sdkVersion,\n        acceptableVersions: XCODE_SCRIPTS_SUPPORTED_SDK_RANGE,\n        canBeLatest: true,\n      })\n    ) {\n      await patchBundlePhase(\n        bundlePhase,\n        addSentryWithBundledScriptsToBundleShellScript,\n      );\n    } else {\n      await patchBundlePhase(bundlePhase, addSentryWithCliToBundleShellScript);\n    }\n    Sentry.setTag('xcode-bundle-phase-status', 'patched');\n  });\n\n  traceStep('add-debug-files-upload-phase', () => {\n    const debugFilesUploadPhaseExists =\n      !!findDebugFilesUploadPhase(buildPhasesMap);\n    Sentry.setTag(\n      'xcode-debug-files-upload-phase-status',\n      debugFilesUploadPhaseExists ? 'already-exists' : undefined,\n    );\n    if (\n      context.sdkVersion &&\n      fulfillsVersionRange({\n        version: context.sdkVersion,\n        acceptableVersions: XCODE_SCRIPTS_SUPPORTED_SDK_RANGE,\n        canBeLatest: true,\n      })\n    ) {\n      addDebugFilesUploadPhaseWithBundledScripts(xcodeProject, {\n        debugFilesUploadPhaseExists,\n      });\n    } else {\n      addDebugFilesUploadPhaseWithCli(xcodeProject, {\n        debugFilesUploadPhaseExists,\n      });\n    }\n    Sentry.setTag('xcode-debug-files-upload-phase-status', 'added');\n  });\n\n  traceStep('write-xcode-project', () => {\n    writeXcodeProject(xcodeProjectPath, xcodeProject);\n  });\n  Sentry.setTag('xcode-project-status', 'patched');\n}\n\nasync function patchAndroidFiles(config: RNCliSetupConfigContent) {\n  await addSentryCliConfig(config, {\n    ...propertiesCliSetupConfig,\n    name: 'source maps and iOS debug files',\n    filename: 'android/sentry.properties',\n    gitignore: false,\n  });\n\n  const appBuildGradlePath = traceStep('find-app-build-gradle', () =>\n    getFirstMatchedPath(APP_BUILD_GRADLE),\n  );\n  Sentry.setTag(\n    'app-build-gradle-status',\n    appBuildGradlePath ? 'found' : 'not-found',\n  );\n  if (!appBuildGradlePath) {\n    clack.log.warn(\n      `Could not find Android ${chalk.cyan(\n        'app/build.gradle',\n      )} file using ${chalk.cyan(APP_BUILD_GRADLE)}.`,\n    );\n    return;\n  }\n\n  const appBuildGradle = traceStep('read-app-build-gradle', () =>\n    fs.readFileSync(appBuildGradlePath, 'utf-8'),\n  );\n  const includesSentry =\n    doesAppBuildGradleIncludeRNSentryGradlePlugin(appBuildGradle);\n  if (includesSentry) {\n    Sentry.setTag('app-build-gradle-status', 'already-includes-sentry');\n    clack.log.warn(\n      `Android ${chalk.cyan('app/build.gradle')} file already includes Sentry.`,\n    );\n    return;\n  }\n\n  const patchedAppBuildGradle = traceStep('add-rn-sentry-gradle-plugin', () =>\n    addRNSentryGradlePlugin(appBuildGradle),\n  );\n  if (!doesAppBuildGradleIncludeRNSentryGradlePlugin(patchedAppBuildGradle)) {\n    Sentry.setTag(\n      'app-build-gradle-status',\n      'failed-to-add-rn-sentry-gradle-plugin',\n    );\n    clack.log.warn(\n      `Could not add Sentry RN Gradle Plugin to ${chalk.cyan(\n        'app/build.gradle',\n      )}.`,\n    );\n    return;\n  }\n\n  Sentry.setTag('app-build-gradle-status', 'added-rn-sentry-gradle-plugin');\n  clack.log.success(\n    `Added Sentry RN Gradle Plugin to ${chalk.bold('app/build.gradle')}.`,\n  );\n\n  traceStep('write-app-build-gradle', () =>\n    writeAppBuildGradle(appBuildGradlePath, patchedAppBuildGradle),\n  );\n  clack.log.success(\n    chalk.green(`Android ${chalk.cyan('app/build.gradle')} saved.`),\n  );\n}\n\nasync function confirmPodInstall(): Promise<boolean> {\n  return traceStep('confirm-pod-install', async () => {\n    const continueWithPodInstall = await abortIfCancelled(\n      clack.select({\n        message: 'Do you want to run `pod install` now?',\n        options: [\n          {\n            value: true,\n            label: 'Yes',\n            hint: 'Recommended for smaller projects, this might take several minutes',\n          },\n          { value: false, label: `No, I'll do it later` },\n        ],\n        initialValue: true,\n      }),\n    );\n    Sentry.setTag('continue-with-pod-install', continueWithPodInstall);\n    return continueWithPodInstall;\n  });\n}\n"]}