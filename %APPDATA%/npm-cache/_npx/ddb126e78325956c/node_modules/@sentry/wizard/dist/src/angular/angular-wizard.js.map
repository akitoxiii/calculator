{"version":3,"file":"angular-wizard.js","sourceRoot":"","sources":["../../../src/angular/angular-wizard.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport clack from '@clack/prompts';\n\nimport chalk from 'chalk';\nimport type { WizardOptions } from '../utils/types';\nimport { traceStep, withTelemetry } from '../telemetry';\nimport {\n  abortIfCancelled,\n  askShouldCreateExampleComponent,\n  confirmContinueIfNoOrDirtyGitRepo,\n  ensurePackageIsInstalled,\n  featureSelectionPrompt,\n  getOrAskForProjectData,\n  getPackageDotJson,\n  installPackage,\n  printWelcome,\n  runPrettierIfInstalled,\n  abort,\n} from '../utils/clack';\nimport { getPackageVersion, hasPackageInstalled } from '../utils/package-json';\nimport { gte, minVersion, SemVer } from 'semver';\n\nimport * as Sentry from '@sentry/node';\nimport { initalizeSentryOnApplicationEntry } from './sdk-setup';\nimport { updateAppConfig } from './sdk-setup';\nimport { runSourcemapsWizard } from '../sourcemaps/sourcemaps-wizard';\nimport { addSourcemapEntryToAngularJSON } from './codemods/sourcemaps';\nimport { createExampleComponent } from './example-component';\n\nconst MIN_SUPPORTED_ANGULAR_VERSION = '14.0.0';\nconst MIN_SUPPORTED_WIZARD_ANGULAR_VERSION = '17.0.0';\n\nexport async function runAngularWizard(options: WizardOptions): Promise<void> {\n  return withTelemetry(\n    {\n      enabled: options.telemetryEnabled,\n      integration: 'angular',\n      wizardOptions: options,\n    },\n    () => runAngularWizardWithTelemetry(options),\n  );\n}\n\nasync function runAngularWizardWithTelemetry(\n  options: WizardOptions,\n): Promise<void> {\n  printWelcome({\n    wizardName: 'Sentry Angular Wizard',\n    promoCode: options.promoCode,\n    telemetryEnabled: options.telemetryEnabled,\n  });\n\n  await confirmContinueIfNoOrDirtyGitRepo({\n    ignoreGitChanges: options.ignoreGitChanges,\n    cwd: undefined,\n  });\n\n  const packageJson = await getPackageDotJson();\n\n  await ensurePackageIsInstalled(packageJson, '@angular/core', 'Angular');\n\n  let installedAngularVersion = getPackageVersion('@angular/core', packageJson);\n\n  if (!installedAngularVersion) {\n    clack.log.warn('Could not determine installed Angular version.');\n\n    installedAngularVersion = await abortIfCancelled(\n      clack.text({\n        message: `Please enter your installed Angular major version (e.g. ${chalk.cyan(\n          '18',\n        )} for Angular 18)`,\n        validate(value) {\n          if (!value) {\n            return 'Angular version is required';\n          }\n\n          try {\n            if (!minVersion(value)) {\n              return `Invalid Angular version provided: ${value}`;\n            }\n          } catch (error) {\n            return `Invalid Angular version provided: ${value}`;\n          }\n        },\n      }),\n    );\n  }\n\n  Sentry.setTag('angular-version', installedAngularVersion);\n\n  const installedMinVersion = minVersion(installedAngularVersion) as SemVer;\n\n  const sdkSupportsAngularVersion = gte(\n    installedMinVersion,\n    MIN_SUPPORTED_ANGULAR_VERSION,\n  );\n\n  const wizardSupportsAngularVersion = gte(\n    installedMinVersion,\n    MIN_SUPPORTED_WIZARD_ANGULAR_VERSION,\n  );\n\n  if (!sdkSupportsAngularVersion) {\n    Sentry.setTag('angular-version-compatible', false);\n\n    clack.log.warn(\n      `Angular version ${chalk.cyan(\n        MIN_SUPPORTED_ANGULAR_VERSION,\n      )} or higher is required for the Sentry SDK.`,\n    );\n    clack.log.warn(\n      `Please refer to Sentry's version compatibility table for more information:\n\n${chalk.underline(\n  'https://docs.sentry.io/platforms/javascript/guides/angular/#angular-version-compatibility',\n)}\n`,\n    );\n\n    return abort('Exiting the wizard.', 0);\n  }\n\n  if (!wizardSupportsAngularVersion) {\n    Sentry.setTag('angular-wizard-version-compatible', false);\n\n    clack.log.warn(\n      `The Sentry Angular Wizard requires Angular version ${chalk.cyan(\n        MIN_SUPPORTED_WIZARD_ANGULAR_VERSION,\n      )} or higher.`,\n    );\n    clack.log.warn(\n      `Your Angular version (${installedAngularVersion}) is compatible with the Sentry SDK but you need to set it up manually by following our documentation:\n\n${chalk.underline('https://docs.sentry.io/platforms/javascript/guides/angular')}\n\nApologies for the inconvenience!`,\n    );\n\n    return abort('Exiting the wizard.', 0);\n  }\n\n  const { selectedProject, authToken, sentryUrl, selfHosted } =\n    await getOrAskForProjectData(options, 'javascript-angular');\n\n  const dsn = selectedProject.keys[0].dsn.public;\n\n  const sdkAlreadyInstalled = hasPackageInstalled(\n    '@sentry/angular',\n    packageJson,\n  );\n\n  Sentry.setTag('sdk-already-installed', sdkAlreadyInstalled);\n\n  await installPackage({\n    packageName: '@sentry/angular',\n    packageNameDisplayLabel: '@sentry/angular',\n    alreadyInstalled: sdkAlreadyInstalled,\n  });\n\n  const selectedFeatures = await featureSelectionPrompt([\n    {\n      id: 'performance',\n      prompt: `Do you want to enable ${chalk.bold(\n        'Tracing',\n      )} to track the performance of your application?`,\n      enabledHint: 'recommended',\n    },\n    {\n      id: 'replay',\n      prompt: `Do you want to enable ${chalk.bold(\n        'Sentry Session Replay',\n      )} to get a video-like reproduction of errors during a user session?`,\n      enabledHint: 'recommended, but increases bundle size',\n    },\n  ] as const);\n\n  await traceStep(\n    'Initialize Sentry on Angular application entry point',\n    async () => {\n      await initalizeSentryOnApplicationEntry(dsn, selectedFeatures);\n    },\n  );\n\n  await traceStep('Update Angular project configuration', async () => {\n    await updateAppConfig(installedMinVersion, selectedFeatures.performance);\n  });\n\n  await traceStep('Setup for sourcemap uploads', async () => {\n    await addSourcemapEntryToAngularJSON();\n\n    if (!options.preSelectedProject) {\n      options.preSelectedProject = {\n        authToken,\n        selfHosted,\n        project: {\n          organization: {\n            id: selectedProject.organization.id,\n            name: selectedProject.organization.name,\n            slug: selectedProject.organization.slug,\n          },\n          id: selectedProject.id,\n          slug: selectedProject.slug,\n          keys: [\n            {\n              dsn: {\n                public: dsn,\n              },\n            },\n          ],\n        },\n      };\n\n      options.url = sentryUrl;\n    }\n\n    await runSourcemapsWizard(options, 'angular');\n  });\n\n  const shouldCreateExampleComponent = await askShouldCreateExampleComponent();\n\n  Sentry.setTag('create-example-component', shouldCreateExampleComponent);\n\n  if (shouldCreateExampleComponent) {\n    await traceStep(\n      'create-example-component',\n      async () =>\n        await createExampleComponent({\n          url: sentryUrl,\n          orgSlug: selectedProject.organization.slug,\n          projectId: selectedProject.id,\n        }),\n    );\n  }\n\n  await traceStep('Run Prettier', async () => {\n    await runPrettierIfInstalled({ cwd: undefined });\n  });\n\n  clack.outro(buildOutroMessage(shouldCreateExampleComponent));\n}\n\nexport function buildOutroMessage(createdExampleComponent: boolean): string {\n  let msg = chalk.green('\\nSuccessfully installed the Sentry Angular SDK!');\n\n  if (createdExampleComponent) {\n    msg += `\\n\\nYou can validate your setup by starting your dev environment (${chalk.cyan(\n      'ng serve',\n    )}) and throwing an error in the example component.`;\n  }\n\n  msg += `\\n\\nCheck out the SDK documentation for further configuration:\nhttps://docs.sentry.io/platforms/javascript/guides/angular/`;\n\n  return msg;\n}\n"]}