{"version":3,"file":"Git.js","sourceRoot":"","sources":["../../../lib/Helper/Git.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAyB;AAEzB,uCAAuC;AAEvC,MAAM,kBAAkB,GAAG,YAAY,CAAC;AAExC;;;;;GAKG;AACI,KAAK,UAAU,cAAc,CAClC,QAAgB,EAChB,QAAgB;IAEhB;;;;;;;;;;;;OAYG;IACH,IAAI;QACF,MAAM,EAAE,CAAC,QAAQ,CAAC,UAAU,CAC1B,kBAAkB,EAClB,eAAe,QAAQ,IAAI,CAC5B,CAAC;QACF,IAAA,eAAK,EAAC,KAAK,QAAQ,aAAa,kBAAkB,EAAE,CAAC,CAAC;KACvD;IAAC,MAAM;QACN,IAAA,aAAG,EAAC,QAAQ,CAAC,CAAC;KACf;AACH,CAAC;AA1BD,wCA0BC","sourcesContent":["import * as fs from 'fs';\n\nimport { green, red } from './Logging';\n\nconst GITIGNORE_FILENAME = '.gitignore';\n\n/**\n * Adds the given file to the .gitignore file.\n *\n * @param filepath the file(path) to add to the .gitignore file\n * @param errorMsg the error message to display if the file couldn't be added\n */\nexport async function addToGitignore(\n  filepath: string,\n  errorMsg: string,\n): Promise<void> {\n  /**\n   * Don't check whether the given file is ignored because:\n   * 1. It's tricky to check it without git.\n   * 2. Git might not be installed or accessible.\n   * 3. It's convenient to use a module to interact with git, but it would\n   *    increase the size x2 approximately. Docs say to run the Wizard without\n   *    installing it, and duplicating the size would slow the set-up down.\n   * 4. The Wizard is meant to be run once.\n   * 5. A message is logged informing users it's been added to the gitignore.\n   * 6. It will be added to the gitignore as many times as it runs - not a big\n   *    deal.\n   * 7. It's straightforward to remove it from the gitignore.\n   */\n  try {\n    await fs.promises.appendFile(\n      GITIGNORE_FILENAME,\n      `\\n# Sentry\\n${filepath}\\n`,\n    );\n    green(`âœ“ ${filepath} added to ${GITIGNORE_FILENAME}`);\n  } catch {\n    red(errorMsg);\n  }\n}\n"]}