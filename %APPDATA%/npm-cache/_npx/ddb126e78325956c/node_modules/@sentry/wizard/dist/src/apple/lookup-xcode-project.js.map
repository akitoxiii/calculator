{"version":3,"file":"lookup-xcode-project.js","sourceRoot":"","sources":["../../../src/apple/lookup-xcode-project.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport clack from '@clack/prompts';\nimport * as Sentry from '@sentry/node';\nimport chalk from 'chalk';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nimport { traceStep } from '../telemetry';\nimport { abort, askForItemSelection } from '../utils/clack';\nimport { debug } from '../utils/debug';\nimport { searchXcodeProjectAtPath } from './search-xcode-project-at-path';\nimport { XcodeProject } from './xcode-manager';\n\nexport async function lookupXcodeProject({\n  projectDir,\n}: {\n  projectDir: string;\n}): Promise<{\n  xcProject: XcodeProject;\n  target: string;\n}> {\n  debug(`Looking for Xcode project in directory: ${chalk.cyan(projectDir)}`);\n  const xcodeProjFiles = searchXcodeProjectAtPath(projectDir);\n  if (xcodeProjFiles.length === 0) {\n    clack.log.error(\n      'No Xcode project found. Please run this command from the root of your project.',\n    );\n    Sentry.setTag('no-xcode-project', true);\n    return await abort();\n  }\n  debug(\n    `Found ${chalk.cyan(\n      xcodeProjFiles.length.toString(),\n    )} candidates for Xcode project`,\n  );\n\n  // In case there is only one Xcode project, we can use that one.\n  // Otherwise, we need to ask the user which one they want to use.\n  let xcodeProjFile: string;\n  if (xcodeProjFiles.length === 1) {\n    debug(`Found exactly one Xcode project, using it`);\n    Sentry.setTag('multiple-projects', false);\n    xcodeProjFile = xcodeProjFiles[0];\n  } else {\n    debug(`Found multiple Xcode projects, asking user to choose one`);\n    Sentry.setTag('multiple-projects', true);\n    xcodeProjFile = (\n      await traceStep('Choose Xcode project', () =>\n        askForItemSelection(\n          xcodeProjFiles,\n          'Which project do you want to add Sentry to?',\n        ),\n      )\n    ).value;\n  }\n\n  // Load the pbxproj file\n  const pathToPbxproj = path.join(projectDir, xcodeProjFile, 'project.pbxproj');\n  debug(`Loading Xcode project pbxproj at path: ${chalk.cyan(pathToPbxproj)}`);\n  if (!fs.existsSync(pathToPbxproj)) {\n    clack.log.error(`No pbxproj found at ${xcodeProjFile}`);\n    Sentry.setTag('pbxproj-not-found', true);\n    return await abort();\n  }\n\n  const xcProject = new XcodeProject(pathToPbxproj);\n  const availableTargets = xcProject.getAllTargets();\n  if (availableTargets.length == 0) {\n    clack.log.error(`No suitable Xcode target found in ${xcodeProjFile}`);\n    Sentry.setTag('No-Target', true);\n    return await abort();\n  }\n  debug(\n    `Found ${chalk.cyan(\n      availableTargets.length.toString(),\n    )} targets in Xcode project`,\n  );\n\n  // Step - Lookup Xcode Target\n  let target: string;\n  if (availableTargets.length == 1) {\n    debug(`Found exactly one target, using it`);\n    Sentry.setTag('multiple-targets', false);\n    target = availableTargets[0];\n  } else {\n    debug(`Found multiple targets, asking user to choose one`);\n    Sentry.setTag('multiple-targets', true);\n    target = (\n      await traceStep('Choose target', () =>\n        askForItemSelection(\n          availableTargets,\n          'Which target do you want to add Sentry to?',\n        ),\n      )\n    ).value;\n  }\n  debug(`Selected target: ${chalk.cyan(target)}`);\n\n  return {\n    xcProject,\n    target,\n  };\n}\n"]}