{"version":3,"file":"MergeConfig.js","sourceRoot":"","sources":["../../../../lib/Helper/__tests__/MergeConfig.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\n\nimport { mergeConfigFile } from '../MergeConfig';\nimport { afterEach, describe, expect, test } from 'vitest';\n\nconst configPath = path.join(__dirname, '..', 'test-fixtures/next.config.js');\nconst templatePath = path.join(\n  __dirname,\n  '..',\n  '..',\n  '..',\n  'scripts/NextJs/configs/next.config.template.js',\n);\n\nfunction configFileNames(num: number): {\n  sourcePath: string;\n  mergedPath: string;\n} {\n  const sourcePath = path.join(\n    __dirname,\n    '..',\n    `test-fixtures/next.config.${num}.js`,\n  );\n  const mergedPath = path.join(\n    __dirname,\n    '..',\n    `test-fixtures/next.config.${num}-merged.js`,\n  );\n  return { sourcePath, mergedPath };\n}\n\ndescribe('Merging next.config.js', () => {\n  afterEach(() => {\n    fs.unlinkSync(configPath);\n  });\n\n  test('merge basic next.config.js return true', () => {\n    const { sourcePath } = configFileNames(1);\n    fs.copyFileSync(sourcePath, configPath);\n\n    expect(mergeConfigFile(configPath, templatePath)).toBe(true);\n  });\n\n  test('merge basic next.config.js', () => {\n    const { sourcePath, mergedPath } = configFileNames(1);\n    fs.copyFileSync(sourcePath, configPath);\n\n    mergeConfigFile(configPath, templatePath);\n\n    expect(fs.readFileSync(configPath, 'utf8')).toEqual(\n      fs.readFileSync(mergedPath, 'utf8'),\n    );\n  });\n\n  test('merge invalid javascript config return false', () => {\n    const { sourcePath } = configFileNames(2);\n    fs.copyFileSync(sourcePath, configPath);\n\n    expect(mergeConfigFile(configPath, templatePath)).toBe(false);\n  });\n\n  test('merge more complicated next.config.js return true', () => {\n    const { sourcePath } = configFileNames(3);\n    fs.copyFileSync(sourcePath, configPath);\n\n    expect(mergeConfigFile(configPath, templatePath)).toBe(true);\n  });\n\n  test('merge more complicated next.config.js', () => {\n    const { sourcePath, mergedPath } = configFileNames(3);\n    fs.copyFileSync(sourcePath, configPath);\n\n    mergeConfigFile(configPath, templatePath);\n\n    expect(fs.readFileSync(configPath, 'utf8')).toEqual(\n      fs.readFileSync(mergedPath, 'utf8'),\n    );\n  });\n\n  test('merge next.config.js with function return true', () => {\n    const { sourcePath } = configFileNames(4);\n    fs.copyFileSync(sourcePath, configPath);\n\n    expect(mergeConfigFile(configPath, templatePath)).toBe(true);\n  });\n\n  test('merge next.config.js with function', () => {\n    const { sourcePath, mergedPath } = configFileNames(4);\n    fs.copyFileSync(sourcePath, configPath);\n\n    mergeConfigFile(configPath, templatePath);\n\n    expect(fs.readFileSync(configPath, 'utf8')).toEqual(\n      fs.readFileSync(mergedPath, 'utf8'),\n    );\n  });\n});\n"]}