{"version":3,"file":"Electron.js","sourceRoot":"","sources":["../../../../lib/Steps/Integrations/Electron.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'node:fs';\nimport type { Answers } from 'inquirer';\nimport { prompt } from 'inquirer';\nimport * as path from 'node:path';\n\nimport type { Args } from '../../Constants';\nimport { dim, green, l, nl, red } from '../../Helper/Logging';\nimport { SentryCli } from '../../Helper/SentryCli';\nimport { BaseIntegration } from './BaseIntegration';\nimport { Config } from '../../Types';\n\nconst MIN_ELECTRON_VERSION_STRING = '23.0.0';\nconst MIN_ELECTRON_VERSION = parseInt(\n  MIN_ELECTRON_VERSION_STRING.replace(/\\D+/g, ''),\n  10,\n);\n\nconst CODE_EXAMPLE_MAIN = `// ESM\nimport * as Sentry from '@sentry/electron/main';\n// CommonJs\nconst Sentry = require('@sentry/electron/main');\n\nSentry.init({\n  dsn: '___DSN___',\n});`;\n\nconst CODE_EXAMPLE_RENDERER = `// ESM\nimport * as Sentry from '@sentry/electron/renderer';\n// CommonJs\nconst Sentry = require('@sentry/electron/renderer');\n\nSentry.init({});`;\n\ntype PackageJSON = {\n  dependencies?: Record<string, string>;\n  devDependencies?: Record<string, string>;\n};\nlet appPackage: PackageJSON = {};\n\nfunction printExample(example: string, title = ''): void {\n  if (title) {\n    l(title);\n  }\n\n  nl();\n  dim(example.replace(/^/gm, '    '));\n  nl();\n}\n\ntry {\n  appPackage = JSON.parse(\n    fs.readFileSync(path.join(process.cwd(), 'package.json'), 'utf-8'),\n  ) as PackageJSON;\n} catch {\n  // We don't need to have this\n}\n\nexport class Electron extends BaseIntegration {\n  protected _sentryCli: SentryCli;\n\n  public constructor(protected _argv: Args) {\n    super(_argv);\n    this._sentryCli = new SentryCli(this._argv);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/require-await\n  public async emit(answers: Answers & { config?: Config }): Promise<Answers> {\n    const dsn = answers.config?.dsn?.public ?? 'DSN NOT FOUND';\n    nl();\n\n    const sentryCliProps = this._sentryCli.convertAnswersToProperties(answers);\n    fs.writeFileSync(\n      './sentry.properties',\n      this._sentryCli.dumpProperties(sentryCliProps),\n    );\n    green('Successfully created sentry.properties');\n    nl();\n\n    printExample(\n      CODE_EXAMPLE_MAIN.replace('___DSN___', dsn),\n      'Add these lines in to your main process code to setup Sentry:',\n    );\n\n    printExample(\n      CODE_EXAMPLE_RENDERER,\n      'Add these lines in to your renderer processes code to setup Sentry:',\n    );\n\n    l('For more information, see https://docs.sentry.io/clients/electron/');\n    nl();\n\n    return {};\n  }\n\n  public async shouldConfigure(_answers: Answers): Promise<Answers> {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    if (this._shouldConfigure) {\n      return this._shouldConfigure;\n    }\n\n    let success = true;\n    nl();\n\n    success =\n      this._checkDep('electron', MIN_ELECTRON_VERSION_STRING) && success;\n    success = this._checkDep('@sentry/electron') && success;\n\n    let continued: Answers = { continue: true };\n    if (!success && !this._argv.quiet) {\n      continued = await prompt({\n        message:\n          'There were errors during your project checkup, do you still want to continue?',\n        name: 'continue',\n        default: false,\n        type: 'confirm',\n      });\n    }\n\n    nl();\n\n    if (!continued?.continue) {\n      throw new Error('Please install the required dependencies to continue.');\n    }\n\n    this._shouldConfigure = Promise.resolve({ electron: true });\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    return this.shouldConfigure;\n  }\n\n  private _checkDep(packageName: string, minVersion?: string): boolean {\n    const depVersion = parseInt(\n      (appPackage.dependencies?.[packageName] || '0').replace(/\\D+/g, ''),\n      10,\n    );\n    const devDepVersion = parseInt(\n      (appPackage.devDependencies?.[packageName] || '0').replace(/\\D+/g, ''),\n      10,\n    );\n\n    if (\n      !appPackage.dependencies?.[packageName] &&\n      !appPackage.devDependencies?.[packageName]\n    ) {\n      red(`✗ ${packageName} isn't in your dependencies`);\n      red('  please install it with yarn/npm');\n      return false;\n    }\n    if (\n      minVersion &&\n      depVersion < MIN_ELECTRON_VERSION &&\n      devDepVersion < MIN_ELECTRON_VERSION\n    ) {\n      red(\n        `✗ Your installed version of ${packageName} is to old, >${MIN_ELECTRON_VERSION_STRING} needed`,\n      );\n      return false;\n    }\n    if (minVersion) {\n      green(`✓ ${packageName} > ${minVersion} is installed`);\n    } else {\n      green(`✓ ${packageName} is installed`);\n    }\n    return true;\n  }\n}\n"]}