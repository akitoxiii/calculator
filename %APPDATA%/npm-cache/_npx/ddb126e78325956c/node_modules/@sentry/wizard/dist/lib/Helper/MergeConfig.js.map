{"version":3,"file":"MergeConfig.js","sourceRoot":"","sources":["../../../lib/Helper/MergeConfig.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAyB;AAEzB,0BAA0B;AAC1B,SAAgB,eAAe,CAC7B,UAAkB,EAClB,YAAoB;IAEpB,IAAI;QACF,MAAM,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QAC3D,MAAM,UAAU,GAAG,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACvD,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,oBAAoB,EAAE,UAAU,CAAC,CAAC;QACvE,8DAA8D;QAC9D,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,wCAAwC;QAC3D,EAAE,CAAC,aAAa,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,KAAK,CAAC;KACd;AACH,CAAC;AAfD,0CAeC","sourcesContent":["import * as fs from 'fs';\n\n// merges the config files\nexport function mergeConfigFile(\n  sourcePath: string,\n  templatePath: string,\n): boolean {\n  try {\n    const templateFile = fs.readFileSync(templatePath, 'utf8');\n    const sourceFile = fs.readFileSync(sourcePath, 'utf8');\n    const newText = templateFile.replace('// ORIGINAL CONFIG', sourceFile);\n    // eslint-disable-next-line @typescript-eslint/no-implied-eval\n    Function(newText); // check if the file is valid javascript\n    fs.writeFileSync(sourcePath, newText);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n"]}