{"version":3,"file":"example-component.js","sourceRoot":"","sources":["../../../src/angular/example-component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAyB;AACzB,0CAIwB;AAExB,+EAA+E;AAC/E,sDAAwC;AACxC,sCAAiD;AACjD,kDAA0B;AAQnB,KAAK,UAAU,sBAAsB,CAAC,OAAgC;IAC3E,MAAM,aAAa,GAAG,gBAAgB,CAAC;IACvC,MAAM,WAAW,GAAG,WAAW,CAAC;IAEhC,IAAI,gBAAgB,GAAG,WAAW,CAAC;IACnC,MAAM,UAAU,GAAG,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IAC9C,IAAI,CAAC,UAAU,EAAE;QACf,gBAAgB,GAAG,MAAM,IAAA,wBAAgB,EACvC,KAAK,CAAC,IAAI,CAAC;YACT,OAAO,EAAE,+CAA+C;YACxD,WAAW,EAAE,WAAW;SACzB,CAAC,CACH,CAAC;KACH;IAED,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE;QACpC,EAAE,CAAC,SAAS,CAAC,gBAAgB,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;KACrD;IAED,MAAM,aAAa,GAAG,6BAA6B,CAAC,OAAO,CAAC,CAAC;IAE7D,MAAM,iBAAiB,GAAG,GAAG,gBAAgB,IAAI,aAAa,eAAe,CAAC;IAE9E,EAAE,CAAC,aAAa,CAAC,iBAAiB,EAAE,aAAa,CAAC,CAAC;IAEnD,KAAK,CAAC,GAAG,CAAC,OAAO,CACf,gCAAgC,eAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAChE,CAAC;IAEF,MAAM,uBAAuB,GAAG,IAAA,uBAAe,EAAC,IAAI,EAAE,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CACxE,SAAS,CAAC,GAAG,IAAI,CACf,4DAA4D,CAC7D;;;;;4BAKuB,IAAI,CAAC,eAAe,CAAC;;;;QAIzC,IAAI,CAAC,2CAA2C,CAAC;;;;CAIxD,CAAC,CACC,CAAC;IAEF,MAAM,IAAA,iCAAyB,EAAC;QAC9B,YAAY,EAAE,8EAA8E,eAAK,CAAC,IAAI,CACpG,kBAAkB,CACnB,IAAI;QACL,WAAW,EAAE,uBAAuB;KACrC,CAAC,CAAC;AACL,CAAC;AAtDD,wDAsDC;AAED,SAAgB,6BAA6B,CAC3C,OAAgC;IAEhC,MAAM,cAAc,GAAG,IAAA,uBAAiB,EAAC,OAAO,CAAC,CAAC;IAElD,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;gBA2BO,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAoL7B,CAAC;AACF,CAAC;AArND,sEAqNC","sourcesContent":["import * as fs from 'fs';\nimport {\n  abortIfCancelled,\n  makeCodeSnippet,\n  showCopyPasteInstructions,\n} from '../utils/clack';\n\n// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport * as clack from '@clack/prompts';\nimport { getIssueStreamUrl } from '../utils/url';\nimport chalk from 'chalk';\n\ninterface ExampleComponentOptions {\n  url: string;\n  orgSlug: string;\n  projectId: string;\n}\n\nexport async function createExampleComponent(options: ExampleComponentOptions) {\n  const componentName = 'sentry-example';\n  const appRootPath = './src/app';\n\n  let componentDirPath = appRootPath;\n  const hasAppRoot = fs.existsSync(appRootPath);\n  if (!hasAppRoot) {\n    componentDirPath = await abortIfCancelled(\n      clack.text({\n        message: 'Where should we create the example component?',\n        placeholder: appRootPath,\n      }),\n    );\n  }\n\n  if (!fs.existsSync(componentDirPath)) {\n    fs.mkdirSync(componentDirPath, { recursive: true });\n  }\n\n  const componentCode = getSentryExampleComponentCode(options);\n\n  const componentFilePath = `${componentDirPath}/${componentName}.component.ts`;\n\n  fs.writeFileSync(componentFilePath, componentCode);\n\n  clack.log.success(\n    `Created example component at ${chalk.cyan(componentFilePath)}`,\n  );\n\n  const addComponentCodeSnippet = makeCodeSnippet(true, (unchanged, plus) =>\n    unchanged(`${plus(\n      \"import { SentryExample } from './sentry-example.component'\",\n    )}\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, ${plus('SentryExample')}],\n  template: \\`\n    <div class=\"app\">\n      <h1>Your Application</h1>\n      ${plus('<app-sentry-example></app-sentry-example>')}\n    </div>\n  \\`,\n})\n`),\n  );\n\n  await showCopyPasteInstructions({\n    instructions: `Add the example component one of your pages or components (for example, in ${chalk.cyan(\n      'app.component.ts',\n    )}).`,\n    codeSnippet: addComponentCodeSnippet,\n  });\n}\n\nexport function getSentryExampleComponentCode(\n  options: ExampleComponentOptions,\n) {\n  const issueStreamUrl = getIssueStreamUrl(options);\n\n  return `import { NgIf } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport * as Sentry from '@sentry/angular';\n\n/**\n * This is just a very simple component that throws an example error.\n * Feel free to delete this file once you verify that Sentry is working.\n */\n\n@Component({\n  selector: 'app-sentry-example',\n  standalone: true,\n  imports: [NgIf],\n  template: \\`\n    <svg height=\"40\" width=\"40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M21.85 2.995a3.698 3.698 0 0 1 1.353 1.354l16.303 28.278a3.703 3.703 0 0 1-1.354 5.053 3.694 3.694 0 0 1-1.848.496h-3.828a31.149 31.149 0 0 0 0-3.09h3.815a.61.61 0 0 0 .537-.917L20.523 5.893a.61.61 0 0 0-1.057 0l-3.739 6.494a28.948 28.948 0 0 1 9.63 10.453 28.988 28.988 0 0 1 3.499 13.78v1.542h-9.852v-1.544a19.106 19.106 0 0 0-2.182-8.85 19.08 19.08 0 0 0-6.032-6.829l-1.85 3.208a15.377 15.377 0 0 1 6.382 12.484v1.542H3.696A3.694 3.694 0 0 1 0 34.473c0-.648.17-1.286.494-1.849l2.33-4.074a8.562 8.562 0 0 1 2.689 1.536L3.158 34.17a.611.611 0 0 0 .538.917h8.448a12.481 12.481 0 0 0-6.037-9.09l-1.344-.772 4.908-8.545 1.344.77a22.16 22.16 0 0 1 7.705 7.444 22.193 22.193 0 0 1 3.316 10.193h3.699a25.892 25.892 0 0 0-3.811-12.033 25.856 25.856 0 0 0-9.046-8.796l-1.344-.772 5.269-9.136a3.698 3.698 0 0 1 3.2-1.849c.648 0 1.285.17 1.847.495Z\"\n        fill=\"currentcolor\"\n      />\n    </svg>\n\n    <h1>app-sentry-example</h1>\n\n    <p class=\"description\">\n      Click the button below, and view the sample error on the Sentry\n      <a\n        target=\"_blank\"\n        href=\"${issueStreamUrl}\"\n        >Issues Page</a\n      >. For more details about setting up Sentry,\n      <a\n        target=\"_blank\"\n        href=\"https://docs.sentry.io/platforms/javascript/guides/angular/\"\n        >read our docs</a\n      >.\n    </p>\n\n    <button (click)=\"throwError()\">\n      <span>Throw Sample Error</span>\n    </button>\n\n    <div *ngIf=\"isConnected && sentError\" class=\"success\">\n      Sample error was sent to Sentry.\n    </div>\n    <div *ngIf=\"isConnected && !sentError\" class=\"success_placeholder\"></div>\n\n    <div *ngIf=\"!isConnected\" class=\"connectivity-error\">\n      <p>\n        The Sentry SDK is not able to reach Sentry right now - this may be due\n        to an adblocker. For more information, see\n        <a\n          target=\"_blank\"\n          href=\"https://docs.sentry.io/platforms/javascript/guides/angular/troubleshooting/#the-sdk-is-not-sending-any-data\"\n          >the troubleshooting guide</a\n        >.\n      </p>\n    </div>\n\n    <p class=\"description\">\n      Adblockers will prevent errors from being sent to Sentry.\n    </p>\n  \\`,\n  styles: \\`\n    :host {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      align-items: center;\n      border: 2px solid #553DB8;\n      border-radius: 8px;\n      padding: 1em;\n      margin: 0.5em;\n      width: 500px;\n      height: 495px;\n      gap: 1em;\n    }\n\n    h1 {\n      padding: 0px 4px;\n      border-radius: 4px;\n      background-color: rgba(24, 20, 35, 0.03);\n      font-family: monospace;\n      font-size: 20px;\n      line-height: 1.2;\n    }\n\n    p {\n      margin: 0;\n      font-size: 20px;\n    } \n\n    a {\n      color: #6341F0;\n      text-decoration: underline;\n      cursor: pointer;\n\n      @media (prefers-color-scheme: dark) {\n        color: #B3A1FF;\n      }\n    }\n\n    button {\n      border-radius: 8px;\n      color: white;\n      cursor: pointer;\n      background-color: #553DB8;\n      border: none;\n      padding: 0;\n      margin-top: 4px;\n\n      & > span {\n        display: inline-block;\n        padding: 12px 16px;\n        border-radius: inherit;\n        font-size: 20px;\n        font-weight: bold;\n        line-height: 1;\n        background-color: #7553FF;\n        border: 1px solid #553DB8;\n        transform: translateY(-4px);\n      }\n\n      &:hover > span {\n        transform: translateY(-8px);\n      }\n\n      &:active > span {\n        transform: translateY(0);\n      }\n    }\n\n    .success {\n      padding: 12px 16px;\n      border-radius: 8px;\n      font-size: 20px;\n      line-height: 1;\n      background-color: #00F261;\n      border: 1px solid #00BF4D;\n      color: #181423;\n    }\n\n    .success_placeholder {\n      height: 46px;\n    }\n\n    .description {\n      text-align: center;\n      color: #6E6C75;\n      max-width: 500px;\n      line-height: 1.5;\n      font-size: 20px;\n\n      @media (prefers-color-scheme: dark) {\n        color: #A49FB5;\n      }\n    }\n\n    .connectivity-error {\n      padding: 12px 16px;\n      background-color: #E50045;\n      border-radius: 8px;\n      width: 500px;\n      color: #FFFFFF;\n      border: 1px solid #A80033;\n      text-align: center;\n      margin: 0;\n      max-width: 400px;\n    }\n  \n    .connectivity-error a {\n      color: #FFFFFF;\n      text-decoration: underline;\n    }\n  \\`,\n})\nexport class SentryExample implements OnInit {\n  sentError = false;\n  isConnected = true;\n\n  async ngOnInit(): Promise<void> {\n    const res = await Sentry.diagnoseSdkConnectivity();\n    this.isConnected = res !== 'sentry-unreachable';\n    console.log({ res });\n  }\n\n  throwError() {\n    Sentry.startSpan(\n      {\n        name: 'Example Frontend Span',\n        op: 'test',\n      },\n      () => {\n        this.sentError = true;\n        throw new SentryExampleError(\n          'This error was thrown by the Sentry example component.'\n        );\n      }\n    );\n  }\n}\n\nclass SentryExampleError extends Error {\n  constructor(message: string | undefined) {\n    super(message);\n    this.name = 'SentryExampleError';\n  }\n}\n`;\n}\n"]}