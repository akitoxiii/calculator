{"version":3,"file":"other-wizards.js","sourceRoot":"","sources":["../../../../src/sourcemaps/utils/other-wizards.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport clack from '@clack/prompts';\nimport chalk from 'chalk';\nimport { runSvelteKitWizard } from '../../sveltekit/sveltekit-wizard';\n\nimport { abort, abortIfCancelled, getPackageDotJson } from '../../utils/clack';\nimport {\n  findInstalledPackageFromList,\n  hasPackageInstalled,\n} from '../../utils/package-json';\n\nimport * as Sentry from '@sentry/node';\nimport { WizardOptions } from '../../utils/types';\n\nimport * as childProcess from 'child_process';\n\ntype WizardFunction = (options: WizardOptions) => Promise<void>;\n\ntype FrameworkInfo = {\n  frameworkName: string;\n  frameworkPackage: string;\n  troubleshootingDocsLink: string;\n  sourcemapsDocsLink: string;\n  wizard: WizardFunction;\n};\n\nconst sdkMap: Record<string, FrameworkInfo> = {\n  '@sentry/sveltekit': {\n    frameworkName: 'SvelteKit',\n    frameworkPackage: '@sveltejs/kit',\n    sourcemapsDocsLink:\n      'https://docs.sentry.io/platforms/javascript/guides/sveltekit/manual-setup/#configure-source-maps-upload',\n    troubleshootingDocsLink:\n      'https://docs.sentry.io/platforms/javascript/guides/sveltekit/sourcemaps/troubleshooting_js/',\n    wizard: runSvelteKitWizard,\n  },\n  '@sentry/react-native': {\n    frameworkName: 'React Native',\n    frameworkPackage: 'react-native',\n    sourcemapsDocsLink:\n      'https://docs.sentry.io/platforms/react-native/sourcemaps/',\n    troubleshootingDocsLink:\n      'https://docs.sentry.io/platforms/react-native/troubleshooting/#source-maps',\n    wizard: runReactNativeWizard,\n  },\n};\n\nexport async function checkIfMoreSuitableWizardExistsAndAskForRedirect(): Promise<\n  WizardFunction | undefined\n> {\n  const sdkName = await checkIfMoreSuitableWizardExists();\n\n  if (!sdkName) {\n    return undefined;\n  }\n\n  return await askForRedirect(sdkName);\n}\n\nasync function checkIfMoreSuitableWizardExists(): Promise<string | undefined> {\n  Sentry.setTag('using-wrong-wizard', false);\n\n  const packageJson = await getPackageDotJson();\n\n  const installedSdkPackage = findInstalledPackageFromList(\n    Object.keys(sdkMap),\n    packageJson,\n  );\n\n  if (!installedSdkPackage) {\n    return undefined;\n  }\n\n  const sdkPackageName = installedSdkPackage.name;\n\n  const { frameworkPackage } = sdkMap[sdkPackageName];\n\n  if (!hasPackageInstalled(frameworkPackage, packageJson)) {\n    // The user has installed the SDK but not the framework.\n    // Maybe it's a false positive and the user is using a different framework.\n    // Let's not redirect them to the framework wizard in that case.\n    return undefined;\n  }\n\n  Sentry.setTag('using-wrong-wizard', true);\n\n  return sdkPackageName;\n}\n\nasync function askForRedirect(\n  sdkName: string,\n): Promise<WizardFunction | undefined> {\n  const { frameworkName, sourcemapsDocsLink, troubleshootingDocsLink, wizard } =\n    sdkMap[sdkName];\n\n  clack.log.warn(\n    `${chalk.yellow(\n      `It seems like you're using this wizard in a ${frameworkName} project.`,\n    )}\n\nWe recommend using our dedicated ${frameworkName} wizard instead of this wizard.\nThe ${frameworkName} wizard will set up our ${sdkName} SDK and also configure uploading source maps for you.\n\nIf you already tried the ${frameworkName} wizard and it didn't work for you, check out the following guides:\n\nManual source maps configuration for ${frameworkName}:\n${sourcemapsDocsLink}\n\nTroubleshooting Source Maps:\n${troubleshootingDocsLink}\n`,\n  );\n\n  const nextStep: 'redirect' | 'continue' | 'stop' = await abortIfCancelled(\n    clack.select({\n      message: `Do you want to run the ${frameworkName} wizard now?`,\n      options: [\n        {\n          label: 'Yes',\n          value: 'redirect',\n          hint: `${chalk.green('Recommended')}`,\n        },\n        {\n          label: 'No, continue with this wizard',\n          value: 'continue',\n        },\n        {\n          label: \"No, I'll check out the guides \",\n          value: 'stop',\n          hint: 'Exit this wizard',\n        },\n      ],\n    }),\n  );\n\n  Sentry.setTag('wrong-wizard-decision', nextStep);\n\n  switch (nextStep) {\n    case 'redirect':\n      return wizard;\n    case 'stop':\n      await abort('Exiting Wizard', 0);\n      break;\n    default:\n      return undefined;\n  }\n}\n\nfunction runReactNativeWizard(): Promise<void> {\n  const [runner, ...wizardArgs] = [...process.argv];\n  wizardArgs.push('--integration', 'reactNative');\n\n  try {\n    childProcess.spawnSync(runner, wizardArgs, {\n      cwd: process.cwd(),\n      stdio: 'inherit',\n    });\n  } catch {\n    return Promise.reject();\n  }\n\n  return Promise.resolve();\n}\n"]}