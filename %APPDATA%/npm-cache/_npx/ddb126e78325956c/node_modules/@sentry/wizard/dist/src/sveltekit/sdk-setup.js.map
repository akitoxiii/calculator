{"version":3,"file":"sdk-setup.js","sourceRoot":"","sources":["../../../src/sveltekit/sdk-setup.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ExportNamedDeclaration, Program } from '@babel/types';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as url from 'url';\nimport chalk from 'chalk';\n\nimport * as Sentry from '@sentry/node';\n\n//@ts-expect-error - clack is ESM and TS complains about that. It works though\nimport clack from '@clack/prompts';\n// @ts-expect-error - magicast is ESM and TS complains about that. It works though\nimport type { ProxifiedModule } from 'magicast';\n// @ts-expect-error - magicast is ESM and TS complains about that. It works though\nimport { builders, generateCode, loadFile, parseModule } from 'magicast';\n// @ts-expect-error - magicast is ESM and TS complains about that. It works though\nimport { addVitePlugin } from 'magicast/helpers';\nimport { getClientHooksTemplate, getServerHooksTemplate } from './templates';\nimport {\n  abortIfCancelled,\n  featureSelectionPrompt,\n  isUsingTypeScript,\n} from '../utils/clack';\nimport { debug } from '../utils/debug';\nimport { findFile, hasSentryContent } from '../utils/ast-utils';\n\nimport * as recast from 'recast';\nimport x = recast.types;\nimport t = x.namedTypes;\nimport { traceStep } from '../telemetry';\n\nconst SVELTE_CONFIG_FILE = 'svelte.config.js';\n\nexport type PartialSvelteConfig = {\n  kit?: {\n    files?: {\n      hooks?: {\n        client?: string;\n        server?: string;\n      };\n      routes?: string;\n    };\n  };\n};\n\ntype ProjectInfo = {\n  dsn: string;\n  org: string;\n  project: string;\n  selfHosted: boolean;\n  url: string;\n};\n\nexport async function createOrMergeSvelteKitFiles(\n  projectInfo: ProjectInfo,\n  svelteConfig: PartialSvelteConfig,\n): Promise<void> {\n  const selectedFeatures = await featureSelectionPrompt([\n    {\n      id: 'performance',\n      prompt: `Do you want to enable ${chalk.bold(\n        'Tracing',\n      )} to track the performance of your application?`,\n      enabledHint: 'recommended',\n    },\n    {\n      id: 'replay',\n      prompt: `Do you want to enable ${chalk.bold(\n        'Session Replay',\n      )} to get a video-like reproduction of errors during a user session?`,\n      enabledHint: 'recommended, but increases bundle size',\n    },\n  ] as const);\n\n  const { clientHooksPath, serverHooksPath } = getHooksConfigDirs(svelteConfig);\n\n  // full file paths with correct file ending (or undefined if not found)\n  const originalClientHooksFile = findFile(clientHooksPath);\n  const originalServerHooksFile = findFile(serverHooksPath);\n\n  const viteConfig = findFile(path.resolve(process.cwd(), 'vite.config'));\n\n  const fileEnding = isUsingTypeScript() ? 'ts' : 'js';\n\n  const { dsn } = projectInfo;\n\n  Sentry.setTag(\n    'client-hooks-file-strategy',\n    originalClientHooksFile ? 'merge' : 'create',\n  );\n  if (!originalClientHooksFile) {\n    clack.log.info('No client hooks file found, creating a new one.');\n    await createNewHooksFile(\n      `${clientHooksPath}.${fileEnding}`,\n      'client',\n      dsn,\n      selectedFeatures,\n    );\n  } else {\n    await mergeHooksFile(\n      originalClientHooksFile,\n      'client',\n      dsn,\n      selectedFeatures,\n    );\n  }\n\n  Sentry.setTag(\n    'server-hooks-file-strategy',\n    originalServerHooksFile ? 'merge' : 'create',\n  );\n  if (!originalServerHooksFile) {\n    clack.log.info('No server hooks file found, creating a new one.');\n    await createNewHooksFile(\n      `${serverHooksPath}.${fileEnding}`,\n      'server',\n      dsn,\n      selectedFeatures,\n    );\n  } else {\n    await mergeHooksFile(\n      originalServerHooksFile,\n      'server',\n      dsn,\n      selectedFeatures,\n    );\n  }\n\n  if (viteConfig) {\n    await modifyViteConfig(viteConfig, projectInfo);\n  }\n}\n\n/**\n * Attempts to read the svelte.config.js file to find the location of the hooks files.\n * If users specified a custom location, we'll use that. Otherwise, we'll use the default.\n */\nfunction getHooksConfigDirs(svelteConfig: PartialSvelteConfig): {\n  clientHooksPath: string;\n  serverHooksPath: string;\n} {\n  const relativeUserClientHooksPath = svelteConfig?.kit?.files?.hooks?.client;\n  const relativeUserServerHooksPath = svelteConfig?.kit?.files?.hooks?.server;\n  const userClientHooksPath =\n    relativeUserClientHooksPath &&\n    path.resolve(process.cwd(), relativeUserClientHooksPath);\n  const userServerHooksPath =\n    relativeUserServerHooksPath &&\n    path.resolve(process.cwd(), relativeUserServerHooksPath);\n\n  const defaulHooksDir = path.resolve(process.cwd(), 'src');\n  const defaultClientHooksPath = path.resolve(defaulHooksDir, 'hooks.client'); // file ending missing on purpose\n  const defaultServerHooksPath = path.resolve(defaulHooksDir, 'hooks.server'); // same here\n\n  return {\n    clientHooksPath: userClientHooksPath || defaultClientHooksPath,\n    serverHooksPath: userServerHooksPath || defaultServerHooksPath,\n  };\n}\n\n/**\n * Reads the template, replaces the dsn placeholder with the actual dsn and writes the file to @param hooksFileDest\n */\nasync function createNewHooksFile(\n  hooksFileDest: string,\n  hooktype: 'client' | 'server',\n  dsn: string,\n  selectedFeatures: {\n    performance: boolean;\n    replay: boolean;\n  },\n): Promise<void> {\n  const filledTemplate =\n    hooktype === 'client'\n      ? getClientHooksTemplate(dsn, selectedFeatures)\n      : getServerHooksTemplate(dsn, selectedFeatures);\n\n  await fs.promises.mkdir(path.dirname(hooksFileDest), { recursive: true });\n  await fs.promises.writeFile(hooksFileDest, filledTemplate);\n\n  clack.log.success(`Created ${hooksFileDest}`);\n  Sentry.setTag(`created-${hooktype}-hooks`, 'success');\n}\n\n/**\n * Merges the users' hooks file with Sentry-related code.\n *\n * Both hooks:\n * - add import * as Sentry\n * - add Sentry.init\n * - add handleError hook wrapper\n *\n * Additionally in  Server hook:\n * - add handle hook handler\n */\nasync function mergeHooksFile(\n  hooksFile: string,\n  hookType: 'client' | 'server',\n  dsn: string,\n  selectedFeatures: {\n    performance: boolean;\n    replay: boolean;\n  },\n): Promise<void> {\n  const originalHooksMod = await loadFile(hooksFile);\n\n  const file: 'server-hooks' | 'client-hooks' = `${hookType}-hooks`;\n\n  if (hasSentryContent(originalHooksMod.$ast as t.Program)) {\n    // We don't want to mess with files that already have Sentry content.\n    // Let's just bail out at this point.\n    clack.log.warn(\n      `File ${chalk.cyan(\n        path.basename(hooksFile),\n      )} already contains Sentry code.\nSkipping adding Sentry functionality to.`,\n    );\n    Sentry.setTag(`modified-${file}`, 'fail');\n    Sentry.setTag(`${file}-fail-reason`, 'has-sentry-content');\n    return;\n  }\n\n  await modifyAndRecordFail(\n    () =>\n      originalHooksMod.imports.$add({\n        from: '@sentry/sveltekit',\n        imported: '*',\n        local: 'Sentry',\n      }),\n    'import-injection',\n    file,\n  );\n\n  await modifyAndRecordFail(\n    () => {\n      if (hookType === 'client') {\n        insertClientInitCall(dsn, originalHooksMod, selectedFeatures);\n      } else {\n        insertServerInitCall(dsn, originalHooksMod, selectedFeatures);\n      }\n    },\n    'init-call-injection',\n    file,\n  );\n\n  await modifyAndRecordFail(\n    () => wrapHandleError(originalHooksMod),\n    'wrap-handle-error',\n    file,\n  );\n\n  if (hookType === 'server') {\n    await modifyAndRecordFail(\n      () => wrapHandle(originalHooksMod),\n      'wrap-handle',\n      'server-hooks',\n    );\n  }\n\n  await modifyAndRecordFail(\n    async () => {\n      const modifiedCode = originalHooksMod.generate().code;\n      await fs.promises.writeFile(hooksFile, modifiedCode);\n    },\n    'write-file',\n    file,\n  );\n\n  clack.log.success(`Added Sentry code to ${hooksFile}`);\n  Sentry.setTag(`modified-${hookType}-hooks`, 'success');\n}\n\nfunction insertClientInitCall(\n  dsn: string,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  originalHooksMod: ProxifiedModule<any>,\n  selectedFeatures: {\n    performance: boolean;\n    replay: boolean;\n  },\n): void {\n  const initCallComment = `\n    // If you don't want to use Session Replay, remove the \\`Replay\\` integration,\n    // \\`replaysSessionSampleRate\\` and \\`replaysOnErrorSampleRate\\` options.`;\n\n  const initArgs: {\n    dsn: string;\n    tracesSampleRate?: number;\n    replaysSessionSampleRate?: number;\n    replaysOnErrorSampleRate?: number;\n    integrations?: string[];\n  } = {\n    dsn,\n  };\n\n  if (selectedFeatures.performance) {\n    initArgs.tracesSampleRate = 1.0;\n  }\n\n  if (selectedFeatures.replay) {\n    initArgs.replaysSessionSampleRate = 0.1;\n    initArgs.replaysOnErrorSampleRate = 1.0;\n    initArgs.integrations = [builders.functionCall('Sentry.replayIntegration')];\n  }\n\n  // This assignment of any values is fine because we're just creating a function call in magicast\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const initCall = builders.functionCall('Sentry.init', initArgs);\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const initCallWithComment = builders.raw(\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    `${initCallComment}\\n${generateCode(initCall).code}`,\n  );\n\n  const originalHooksModAST = originalHooksMod.$ast as Program;\n\n  const initCallInsertionIndex = getInitCallInsertionIndex(originalHooksModAST);\n\n  originalHooksModAST.body.splice(\n    initCallInsertionIndex,\n    0,\n    // @ts-expect-error - string works here because the AST is proxified by magicast\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    generateCode(initCallWithComment).code,\n  );\n}\n\nfunction insertServerInitCall(\n  dsn: string,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  originalHooksMod: ProxifiedModule<any>,\n  selectedFeatures: {\n    performance: boolean;\n  },\n): void {\n  const initArgs: {\n    dsn: string;\n    tracesSampleRate?: number;\n  } = {\n    dsn,\n  };\n\n  if (selectedFeatures.performance) {\n    initArgs.tracesSampleRate = 1.0;\n  }\n\n  // This assignment of any values is fine because we're just creating a function call in magicast\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const initCall = builders.functionCall('Sentry.init', initArgs);\n\n  const originalHooksModAST = originalHooksMod.$ast as Program;\n\n  const initCallInsertionIndex = getInitCallInsertionIndex(originalHooksModAST);\n\n  originalHooksModAST.body.splice(\n    initCallInsertionIndex,\n    0,\n    // @ts-expect-error - string works here because the AST is proxified by magicast\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    generateCode(initCall).code,\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapHandleError(mod: ProxifiedModule<any>): void {\n  const modAst = mod.exports.$ast as Program;\n  const namedExports = modAst.body.filter(\n    (node) => node.type === 'ExportNamedDeclaration',\n  ) as ExportNamedDeclaration[];\n\n  let foundHandleError = false;\n\n  namedExports.forEach((modExport) => {\n    const declaration = modExport.declaration;\n    if (!declaration) {\n      return;\n    }\n    if (declaration.type === 'FunctionDeclaration') {\n      if (!declaration.id || declaration.id.name !== 'handleError') {\n        return;\n      }\n      foundHandleError = true;\n      const userCode = generateCode(declaration).code;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      mod.exports.handleError = builders.raw(\n        `Sentry.handleErrorWithSentry(${userCode.replace(\n          'handleError',\n          '_handleError',\n        )})`,\n      );\n      // because magicast doesn't overwrite the original function export, we need to remove it manually\n      modAst.body = modAst.body.filter((node) => node !== modExport);\n    } else if (declaration.type === 'VariableDeclaration') {\n      const declarations = declaration.declarations;\n      declarations.forEach((declaration) => {\n        // @ts-expect-error - id should always have a name in this case\n        if (!declaration.id || declaration.id.name !== 'handleError') {\n          return;\n        }\n        foundHandleError = true;\n        const userCode = declaration.init;\n        const stringifiedUserCode = userCode ? generateCode(userCode).code : '';\n        // @ts-expect-error - we can just place a string here, magicast will convert it to a node\n        declaration.init = `Sentry.handleErrorWithSentry(${stringifiedUserCode})`;\n      });\n    }\n  });\n\n  if (!foundHandleError) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    mod.exports.handleError = builders.functionCall(\n      'Sentry.handleErrorWithSentry',\n    );\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapHandle(mod: ProxifiedModule<any>): void {\n  const modAst = mod.exports.$ast as Program;\n  const namedExports = modAst.body.filter(\n    (node) => node.type === 'ExportNamedDeclaration',\n  ) as ExportNamedDeclaration[];\n\n  let foundHandle = false;\n\n  namedExports.forEach((modExport) => {\n    const declaration = modExport.declaration;\n    if (!declaration) {\n      return;\n    }\n    if (declaration.type === 'FunctionDeclaration') {\n      if (!declaration.id || declaration.id.name !== 'handle') {\n        return;\n      }\n      foundHandle = true;\n      const userCode = generateCode(declaration).code;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      mod.exports.handle = builders.raw(\n        `sequence(Sentry.sentryHandle(), ${userCode.replace(\n          'handle',\n          '_handle',\n        )})`,\n      );\n      // because of an issue with magicast, we need to remove the original export\n      modAst.body = modAst.body.filter((node) => node !== modExport);\n    } else if (declaration.type === 'VariableDeclaration') {\n      const declarations = declaration.declarations;\n      declarations.forEach((declaration) => {\n        if (\n          !declaration.id ||\n          declaration.id.type !== 'Identifier' ||\n          (declaration.id.name && declaration.id.name !== 'handle')\n        ) {\n          return;\n        }\n        const userCode = declaration.init;\n        const stringifiedUserCode = userCode ? generateCode(userCode).code : '';\n        // @ts-expect-error - we can just place a string here, magicast will convert it to a node\n        declaration.init = `sequence(Sentry.sentryHandle(), ${stringifiedUserCode})`;\n        foundHandle = true;\n      });\n    }\n  });\n\n  if (!foundHandle) {\n    // can't use builders.functionCall here because it doesn't yet\n    // support member expressions (Sentry.sentryHandle()) in args\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    mod.exports.handle = builders.raw('sequence(Sentry.sentryHandle())');\n  }\n\n  try {\n    mod.imports.$add({\n      from: '@sveltejs/kit/hooks',\n      imported: 'sequence',\n      local: 'sequence',\n    });\n  } catch (_) {\n    // It's possible sequence is already imported. in this case, magicast throws but that's fine.\n  }\n}\n\nexport async function loadSvelteConfig(): Promise<PartialSvelteConfig> {\n  const configFilePath = path.join(process.cwd(), SVELTE_CONFIG_FILE);\n\n  try {\n    if (!fs.existsSync(configFilePath)) {\n      return {};\n    }\n\n    const configUrl = url.pathToFileURL(configFilePath).href;\n    const svelteConfigModule = (await import(configUrl)) as {\n      default: PartialSvelteConfig;\n    };\n\n    return svelteConfigModule?.default || {};\n  } catch (e: unknown) {\n    clack.log.error(`Couldn't load ${SVELTE_CONFIG_FILE}.\nPlease make sure, you're running this wizard with Node 16 or newer`);\n    clack.log.info(\n      chalk.dim(\n        typeof e === 'object' && e != null && 'toString' in e\n          ? e.toString()\n          : typeof e === 'string'\n          ? e\n          : 'Unknown error',\n      ),\n    );\n\n    return {};\n  }\n}\n\nasync function modifyViteConfig(\n  viteConfigPath: string,\n  projectInfo: ProjectInfo,\n): Promise<void> {\n  const viteConfigContent = (\n    await fs.promises.readFile(viteConfigPath, 'utf-8')\n  ).toString();\n\n  const { org, project, url, selfHosted } = projectInfo;\n\n  const prettyViteConfigFilename = chalk.cyan(path.basename(viteConfigPath));\n\n  try {\n    const viteModule = parseModule(viteConfigContent);\n\n    if (hasSentryContent(viteModule.$ast as t.Program)) {\n      clack.log.warn(\n        `File ${prettyViteConfigFilename} already contains Sentry code.\nSkipping adding Sentry functionality to.`,\n      );\n      Sentry.setTag(`modified-vite-cfg`, 'fail');\n      Sentry.setTag(`vite-cfg-fail-reason`, 'has-sentry-content');\n      return;\n    }\n\n    await modifyAndRecordFail(\n      () =>\n        addVitePlugin(viteModule, {\n          imported: 'sentrySvelteKit',\n          from: '@sentry/sveltekit',\n          constructor: 'sentrySvelteKit',\n          options: {\n            sourceMapsUploadOptions: {\n              org,\n              project,\n              ...(selfHosted && { url }),\n            },\n          },\n          index: 0,\n        }),\n      'add-vite-plugin',\n      'vite-cfg',\n    );\n\n    await modifyAndRecordFail(\n      async () => {\n        const code = generateCode(viteModule.$ast).code;\n        await fs.promises.writeFile(viteConfigPath, code);\n      },\n      'write-file',\n      'vite-cfg',\n    );\n  } catch (e) {\n    debug(e);\n    await showFallbackViteCopyPasteSnippet(\n      viteConfigPath,\n      getViteConfigCodeSnippet(org, project, selfHosted, url),\n    );\n    Sentry.captureException('Sveltekit Vite Config Modification Fail');\n  }\n\n  clack.log.success(`Added Sentry code to ${prettyViteConfigFilename}`);\n  Sentry.setTag(`modified-vite-cfg`, 'success');\n}\n\nasync function showFallbackViteCopyPasteSnippet(\n  viteConfigPath: string,\n  codeSnippet: string,\n) {\n  const viteConfigFilename = path.basename(viteConfigPath);\n\n  clack.log.warning(\n    `Couldn't automatically modify your ${chalk.cyan(viteConfigFilename)}\n${chalk.dim(`This sometimes happens when we encounter more complex vite configs.\nIt may not seem like it but sometimes our magical powers are limited ;)`)}`,\n  );\n\n  clack.log.info(\"But don't worry - it's super easy to do this yourself!\");\n\n  clack.log.step(\n    `Add the following code to your ${chalk.cyan(viteConfigFilename)}:`,\n  );\n\n  // Intentionally logging to console here for easier copy/pasting\n  // eslint-disable-next-line no-console\n  console.log(codeSnippet);\n\n  await abortIfCancelled(\n    clack.select({\n      message: 'Did you copy the snippet above?',\n      options: [\n        { label: 'Yes!', value: true, hint: \"Great, that's already it!\" },\n      ],\n      initialValue: true,\n    }),\n  );\n}\n\nconst getViteConfigCodeSnippet = (\n  org: string,\n  project: string,\n  selfHosted: boolean,\n  url: string,\n) =>\n  chalk.gray(`\nimport { sveltekit } from '@sveltejs/kit/vite';\nimport { defineConfig } from 'vite';\n${chalk.greenBright(\"import { sentrySvelteKit } from '@sentry/sveltekit'\")}\n\nexport default defineConfig({\n  plugins: [\n    // Make sure \\`sentrySvelteKit\\` is registered before \\`sveltekit\\`\n    ${chalk.greenBright(`sentrySvelteKit({\n      sourceMapsUploadOptions: {\n        org: '${org}',\n        project: '${project}',${selfHosted ? `\\n        url: '${url}',` : ''}\n      }\n    }),`)}\n    sveltekit(),\n  ]\n});\n`);\n\n/**\n * We want to insert the init call on top of the file but after all import statements\n */\nfunction getInitCallInsertionIndex(originalHooksModAST: Program): number {\n  // We need to deep-copy here because reverse mutates in place\n  const copiedBodyNodes = [...originalHooksModAST.body];\n  const lastImportDeclaration = copiedBodyNodes\n    .reverse()\n    .find((node) => node.type === 'ImportDeclaration');\n\n  const initCallInsertionIndex = lastImportDeclaration\n    ? originalHooksModAST.body.indexOf(lastImportDeclaration) + 1\n    : 0;\n  return initCallInsertionIndex;\n}\n\n/**\n * Applies the @param modifyCallback and records Sentry tags if the call failed.\n * In case of a failure, a tag is set with @param reason as a fail reason\n * and the error is rethrown.\n */\nasync function modifyAndRecordFail<T>(\n  modifyCallback: () => T | Promise<T>,\n  reason: string,\n  fileType: 'server-hooks' | 'client-hooks' | 'vite-cfg',\n): Promise<void> {\n  try {\n    await traceStep(`${fileType}-${reason}`, modifyCallback);\n  } catch (e) {\n    Sentry.setTag(`modified-${fileType}`, 'fail');\n    Sentry.setTag(`${fileType}-mod-fail-reason`, reason);\n    throw e;\n  }\n}\n"]}