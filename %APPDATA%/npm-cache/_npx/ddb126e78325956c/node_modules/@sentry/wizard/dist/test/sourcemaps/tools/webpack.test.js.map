{"version":3,"file":"webpack.test.js","sourceRoot":"","sources":["../../../../test/sourcemaps/tools/webpack.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\n\nimport { modifyWebpackConfig } from '../../../src/sourcemaps/tools/webpack';\n\nimport { vi, it, expect, describe, afterEach } from 'vitest';\n\nfunction updateFileContent(content: string): void {\n  fileContent = content;\n}\n\nlet fileContent = '';\n\nvi.mock('@clack/prompts', () => {\n  return {\n    log: {\n      info: vi.fn(),\n      success: vi.fn(),\n    },\n    select: vi.fn().mockImplementation(() => Promise.resolve(true)),\n    isCancel: vi.fn().mockReturnValue(false),\n  };\n});\n\nvi.spyOn(fs.promises, 'readFile').mockImplementation(() =>\n  Promise.resolve(fileContent),\n);\n\nconst writeFileSpy = vi\n  .spyOn(fs.promises, 'writeFile')\n  .mockImplementation(() => Promise.resolve(void 0));\n\nconst noSourcemapNoPluginsPojo = `module.exports = {\n  entry: \"./src/index.js\",\n  output: {\n    filename: \"main.js\",\n    path: path.resolve(__dirname, \"build\"),\n  },\n};`;\n\nconst noSourcemapNoPluginsPojoResult = `const {\n  sentryWebpackPlugin\n} = require(\"@sentry/webpack-plugin\");\n\nmodule.exports = {\n  entry: \"./src/index.js\",\n\n  output: {\n    filename: \"main.js\",\n    path: path.resolve(__dirname, \"build\"),\n  },\n\n  devtool: \"source-map\",\n\n  plugins: [sentryWebpackPlugin({\n    authToken: process.env.SENTRY_AUTH_TOKEN,\n    org: \"my-org\",\n    project: \"my-project\"\n  })]\n};`;\n\nconst noSourcemapsNoPluginsId = `const config = {\n  entry: \"./src/index.js\",\n\n  output: {\n    filename: \"main.js\",\n    path: path.resolve(__dirname, \"build\"),\n  },\n};\n\nmodule.exports = config;`;\n\nconst noSourcemapsNoPluginsIdResult = `const {\n  sentryWebpackPlugin\n} = require(\"@sentry/webpack-plugin\");\n\nconst config = {\n  entry: \"./src/index.js\",\n\n  output: {\n    filename: \"main.js\",\n    path: path.resolve(__dirname, \"build\"),\n  },\n\n  devtool: \"source-map\",\n\n  plugins: [sentryWebpackPlugin({\n    authToken: process.env.SENTRY_AUTH_TOKEN,\n    org: \"my-org\",\n    project: \"my-project\"\n  })]\n};\n\nmodule.exports = config;`;\n\nconst hiddenSourcemapNoPluginsId = `const config = {\n  entry: \"./src/index.js\",\n\n  output: {\n    filename: \"main.js\",\n    path: path.resolve(__dirname, \"build\"),\n  },\n\n  devtool: \"hidden-cheap-source-map\",\n};\n\nmodule.exports = config;\n    `;\nconst hiddenSourcemapNoPluginsIdResult = `const {\n  sentryWebpackPlugin\n} = require(\"@sentry/webpack-plugin\");\n\nconst config = {\n  entry: \"./src/index.js\",\n\n  output: {\n    filename: \"main.js\",\n    path: path.resolve(__dirname, \"build\"),\n  },\n\n  devtool: \"hidden-source-map\",\n\n  plugins: [sentryWebpackPlugin({\n    authToken: process.env.SENTRY_AUTH_TOKEN,\n    org: \"my-org\",\n    project: \"my-project\"\n  })]\n};\n\nmodule.exports = config;`;\n\nconst arbitrarySourcemapNoPluginsId = `\nconst config = {\n  entry: \"./src/index.js\",\n\n  output: {\n    filename: \"main.js\",\n    path: path.resolve(__dirname, \"build\"),\n  },\n\n  devtool: getSourcemapSetting(),\n};\n\nmodule.exports = config;\n    `;\nconst arbitrarySourcemapNoPluginsIdResult = `const {\n  sentryWebpackPlugin\n} = require(\"@sentry/webpack-plugin\");\n\nconst config = {\n  entry: \"./src/index.js\",\n\n  output: {\n    filename: \"main.js\",\n    path: path.resolve(__dirname, \"build\"),\n  },\n\n  devtool: \"source-map\",\n\n  plugins: [sentryWebpackPlugin({\n    authToken: process.env.SENTRY_AUTH_TOKEN,\n    org: \"my-org\",\n    project: \"my-project\"\n  })]\n};\n\nmodule.exports = config;`;\n\nconst noSourcemapUndefinedPluginsPojo = `module.exports = {\n  entry: \"./src/index.js\",\n  plugins: undefined,\n  output: {\n    filename: \"main.js\",\n    path: path.resolve(__dirname, \"build\"),\n  },\n};`;\n\nconst noSourcemapUndefinedPluginsPojoResult = `const {\n  sentryWebpackPlugin\n} = require(\"@sentry/webpack-plugin\");\n\nmodule.exports = {\n  entry: \"./src/index.js\",\n\n  plugins: [sentryWebpackPlugin({\n    authToken: process.env.SENTRY_AUTH_TOKEN,\n    org: \"my-org\",\n    project: \"my-project\"\n  })],\n\n  output: {\n    filename: \"main.js\",\n    path: path.resolve(__dirname, \"build\"),\n  },\n\n  devtool: \"source-map\"\n};`;\n\nconst noSourcemapPluginsPojo = `module.exports = {\n  entry: \"./src/index.js\",\n  plugins: [\n    new HtmlWebpackPlugin(),\n    new MiniCssExtractPlugin(),\n  ],\n  output: {\n    filename: \"main.js\",\n    path: path.resolve(__dirname, \"build\"),\n  },\n};`;\n\nconst noSourcemapPluginsPojoResult = `const {\n  sentryWebpackPlugin\n} = require(\"@sentry/webpack-plugin\");\n\nmodule.exports = {\n  entry: \"./src/index.js\",\n\n  plugins: [new HtmlWebpackPlugin(), new MiniCssExtractPlugin(), sentryWebpackPlugin({\n    authToken: process.env.SENTRY_AUTH_TOKEN,\n    org: \"my-org\",\n    project: \"my-project\"\n  })],\n\n  output: {\n    filename: \"main.js\",\n    path: path.resolve(__dirname, \"build\"),\n  },\n\n  devtool: \"source-map\"\n};`;\n\ndescribe('modifyWebpackConfig', () => {\n  afterEach(() => {\n    fileContent = '';\n    vi.clearAllMocks();\n  });\n\n  it.each([\n    [\n      'no sourcemap option, no plugins, object',\n      noSourcemapNoPluginsPojo,\n      noSourcemapNoPluginsPojoResult,\n    ],\n    [\n      'no sourcemap option, no plugins, identifier',\n      noSourcemapsNoPluginsId,\n      noSourcemapsNoPluginsIdResult,\n    ],\n    [\n      'hidden sourcemap option, no plugins, identifier',\n      hiddenSourcemapNoPluginsId,\n      hiddenSourcemapNoPluginsIdResult,\n    ],\n    [\n      'arbitrary sourcemap option, no plugins, identifier',\n      arbitrarySourcemapNoPluginsId,\n      arbitrarySourcemapNoPluginsIdResult,\n    ],\n    [\n      'no sourcemap option, plugins, object',\n      noSourcemapUndefinedPluginsPojo,\n      noSourcemapUndefinedPluginsPojoResult,\n    ],\n    [\n      'no sourcemap option, plugins, object',\n      noSourcemapPluginsPojo,\n      noSourcemapPluginsPojoResult,\n    ],\n  ])(\n    'adds plugin and source maps emission to the webpack config (%s)',\n    async (_, originalCode, expectedCode) => {\n      updateFileContent(originalCode);\n\n      //   updateFileContent(originalCode);\n      const addedCode = await modifyWebpackConfig('', {\n        authToken: '',\n        orgSlug: 'my-org',\n        projectSlug: 'my-project',\n        selfHosted: false,\n        url: 'https://sentry.io/',\n      });\n\n      expect(writeFileSpy).toHaveBeenCalledTimes(1);\n      const [[, fileContent]] = writeFileSpy.mock.calls;\n      expect(fileContent).toBe(expectedCode);\n      expect(addedCode).toBe(true);\n    },\n  );\n\n  it('adds the url parameter to the webpack plugin options if self-hosted', async () => {\n    updateFileContent(noSourcemapNoPluginsPojo);\n\n    const addedCode = await modifyWebpackConfig('', {\n      authToken: '',\n      orgSlug: 'my-org',\n      projectSlug: 'my-project',\n      selfHosted: true,\n      url: 'https://santry.io/',\n    });\n\n    expect(writeFileSpy).toHaveBeenCalledTimes(1);\n    const [[, fileContent]] = writeFileSpy.mock.calls;\n    expect(fileContent).toContain('url: \"https://santry.io/\"');\n    expect(addedCode).toBe(true);\n  });\n});\n"]}