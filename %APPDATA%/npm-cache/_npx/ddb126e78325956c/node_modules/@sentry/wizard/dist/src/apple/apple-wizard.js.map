{"version":3,"file":"apple-wizard.js","sourceRoot":"","sources":["../../../src/apple/apple-wizard.ts"],"names":[],"mappings":";;;;;;AAAA,+EAA+E;AAC/E,6DAAmC;AAEnC,4CAA6C;AAC7C,0CAIwB;AACxB,+DAA0D;AAC1D,6DAAyD;AACzD,2EAAsE;AACtE,iEAA4D;AAC5D,uEAAkE;AAClE,+DAA0D;AAC1D,iEAA4D;AAGrD,KAAK,UAAU,cAAc,CAClC,OAA2B;IAE3B,OAAO,IAAA,yBAAa,EAClB;QACE,OAAO,EAAE,OAAO,CAAC,gBAAgB;QACjC,WAAW,EAAE,KAAK;QAClB,aAAa,EAAE,OAAO;KACvB,EACD,GAAG,EAAE,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAC5C,CAAC;AACJ,CAAC;AAXD,wCAWC;AAED,KAAK,UAAU,4BAA4B,CACzC,OAA2B;IAE3B,+BAA+B;IAC/B,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC;IAEvD,yBAAyB;IACzB,IAAA,oBAAY,EAAC;QACX,UAAU,EAAE,qBAAqB;QACjC,SAAS,EAAE,OAAO,CAAC,SAAS;KAC7B,CAAC,CAAC;IAEH,0BAA0B;IAC1B,MAAM,IAAA,yCAAiC,EAAC;QACtC,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;QAC1C,GAAG,EAAE,UAAU;KAChB,CAAC,CAAC;IAEH,0BAA0B;IAC1B,MAAM,IAAA,uCAAiB,GAAE,CAAC;IAE1B,8BAA8B;IAC9B,qEAAqE;IACrE,gEAAgE;IAChE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,MAAM,IAAA,yCAAkB,EAAC;QACrD,UAAU;KACX,CAAC,CAAC;IAEH,oCAAoC;IACpC,MAAM,EAAE,eAAe,EAAE,SAAS,EAAE,GAAG,MAAM,IAAA,8BAAsB,EACjE,OAAO,EACP,WAAW,CACZ,CAAC;IAEF,wCAAwC;IACxC,IAAA,yCAAkB,EAAC;QACjB,UAAU;QACV,SAAS,EAAE,SAAS;KACrB,CAAC,CAAC;IAEH,gCAAgC;IAChC,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,IAAA,mDAAuB,EAAC;QACrD,UAAU;KACX,CAAC,CAAC;IAEH,iCAAiC;IACjC,IAAA,+CAAqB,EAAC;QACpB,SAAS;QACT,OAAO,EAAE,eAAe;QACxB,MAAM;QACN,YAAY;KACb,CAAC,CAAC;IAEH,0BAA0B;IAC1B,IAAA,uCAAiB,EAAC;QAChB,OAAO,EAAE,SAAS;QAClB,MAAM;QACN,GAAG,EAAE,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM;KACxC,CAAC,CAAC;IAEH,gCAAgC;IAChC,MAAM,IAAA,sCAAiB,EAAC;QACtB,UAAU;QACV,OAAO,EAAE,eAAe,CAAC,YAAY,CAAC,IAAI;QAC1C,WAAW,EAAE,eAAe,CAAC,IAAI;KAClC,CAAC,CAAC;IAEH,iBAAK,CAAC,GAAG,CAAC,OAAO,CACf,gKAAgK,CACjK,CAAC;AACJ,CAAC","sourcesContent":["// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport clack from '@clack/prompts';\n\nimport { withTelemetry } from '../telemetry';\nimport {\n  confirmContinueIfNoOrDirtyGitRepo,\n  getOrAskForProjectData,\n  printWelcome,\n} from '../utils/clack';\nimport { checkInstalledCLI } from './check-installed-cli';\nimport { configureFastlane } from './configure-fastlane';\nimport { configurePackageManager } from './configure-package-manager';\nimport { configureSentryCLI } from './configure-sentry-cli';\nimport { configureXcodeProject } from './configure-xcode-project';\nimport { injectCodeSnippet } from './inject-code-snippet';\nimport { lookupXcodeProject } from './lookup-xcode-project';\nimport { AppleWizardOptions } from './options';\n\nexport async function runAppleWizard(\n  options: AppleWizardOptions,\n): Promise<void> {\n  return withTelemetry(\n    {\n      enabled: options.telemetryEnabled,\n      integration: 'ios',\n      wizardOptions: options,\n    },\n    () => runAppleWizardWithTelementry(options),\n  );\n}\n\nasync function runAppleWizardWithTelementry(\n  options: AppleWizardOptions,\n): Promise<void> {\n  // Define options with defaults\n  const projectDir = options.projectDir ?? process.cwd();\n\n  // Step - Welcome Message\n  printWelcome({\n    wizardName: 'Sentry Apple Wizard',\n    promoCode: options.promoCode,\n  });\n\n  // Step - Git Status Check\n  await confirmContinueIfNoOrDirtyGitRepo({\n    ignoreGitChanges: options.ignoreGitChanges,\n    cwd: projectDir,\n  });\n\n  // Step - Sentry CLI Check\n  await checkInstalledCLI();\n\n  // Step - Xcode Project Lookup\n  // This step should be run before the Sentry Project and API Key step\n  // because it can abort the wizard if no Xcode project is found.\n  const { xcProject, target } = await lookupXcodeProject({\n    projectDir,\n  });\n\n  // Step - Sentry Project and API Key\n  const { selectedProject, authToken } = await getOrAskForProjectData(\n    options,\n    'apple-ios',\n  );\n\n  // Step - Sentry CLI Configuration Setup\n  configureSentryCLI({\n    projectDir,\n    authToken: authToken,\n  });\n\n  // Step - Set up Package Manager\n  const { shouldUseSPM } = await configurePackageManager({\n    projectDir,\n  });\n\n  // Step - Configure Xcode Project\n  configureXcodeProject({\n    xcProject,\n    project: selectedProject,\n    target,\n    shouldUseSPM,\n  });\n\n  // Step - Add Code Snippet\n  injectCodeSnippet({\n    project: xcProject,\n    target,\n    dsn: selectedProject.keys[0].dsn.public,\n  });\n\n  // Step - Fastlane Configuration\n  await configureFastlane({\n    projectDir,\n    orgSlug: selectedProject.organization.slug,\n    projectSlug: selectedProject.slug,\n  });\n\n  clack.log.success(\n    'Sentry was successfully added to your project! Run your project to send your first event to Sentry. Go to Sentry.io to see whether everything is working fine.',\n  );\n}\n"]}