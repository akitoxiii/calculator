{"version":3,"file":"SentryCli.js","sourceRoot":"","sources":["../../../lib/Helper/SentryCli.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'node:fs';\nimport type { Answers } from 'inquirer';\nimport * as path from 'node:path';\n\nimport type { Args } from '../Constants';\nimport { addToGitignore } from './Git';\nimport { green, l, nl, red } from './Logging';\nimport { Config } from '../Types';\n\nconst SENTRYCLIRC_FILENAME = '.sentryclirc';\nconst GITIGNORE_FILENAME = '.gitignore';\nconst PROPERTIES_FILENAME = 'sentry.properties';\n\nexport interface SentryCliProps {\n  'defaults/url': string;\n  'defaults/org': string | null;\n  'defaults/project': string | null;\n  'auth/token': string | null;\n  'cli/executable'?: string;\n}\n\ntype SentryCliConfig = Record<string, Partial<SentryCliProps>>;\ntype RequireResolve = typeof require.resolve;\n\nexport class SentryCli {\n  private _resolve: RequireResolve = require.resolve;\n\n  public constructor(protected _argv: Args) {}\n\n  public setResolveFunction(resolve: RequireResolve): void {\n    this._resolve = resolve;\n  }\n\n  public convertAnswersToProperties(\n    answers: Answers & { config?: Config },\n  ): SentryCliProps {\n    const props: SentryCliProps = {\n      'defaults/url': this._argv.url,\n      'defaults/org': answers.config?.organization?.slug ?? null,\n      'defaults/project': answers.config?.project?.slug ?? null,\n      'auth/token': answers.config?.auth?.token ?? null,\n    };\n\n    try {\n      const cliPath = this._resolve('@sentry/cli/bin/sentry-cli', {\n        paths: [process.cwd()],\n      });\n      props['cli/executable'] = path\n        .relative(process.cwd(), cliPath)\n        .replace(/\\\\/g, '\\\\\\\\');\n    } catch (e) {\n      // we do nothing and leave everything as it is\n    }\n    return props;\n  }\n\n  /**\n   * Create the contents of a `sentry.properties` file\n   * @param props the properties to write to the file\n   * @param format the format of the file, either `rc`\n   *  (.sentryclirc) or `properties` (sentry.properties)\n   */\n  public dumpProperties(\n    props: Partial<SentryCliProps>,\n    format: 'rc' | 'properties' = 'properties',\n  ): string {\n    const propEntries = Object.entries(props) as [\n      keyof SentryCliProps,\n      SentryCliProps[keyof SentryCliProps],\n    ][];\n    const rv: string[] = [];\n    for (const [key, value] of propEntries) {\n      const normalizedKey =\n        format === 'properties'\n          ? key.replace(/\\//g, '.')\n          : key.split('/').at(1) ?? '';\n      if (value === undefined || value === null) {\n        // comment that property out since it has no value\n        rv.push(`#${normalizedKey}=`);\n      } else {\n        rv.push(`${normalizedKey}=${value}`);\n      }\n    }\n    // eslint-disable-next-line prefer-template\n    return rv.join('\\n') + '\\n';\n  }\n\n  public dumpConfig(config: Partial<SentryCliConfig>): string {\n    const dumpedSections: string[] = [];\n    for (const [sectionName, values] of Object.entries(config)) {\n      const props = values ? this.dumpProperties(values, 'rc') : '';\n      const section = `[${sectionName}]\\n${props}`;\n      dumpedSections.push(section);\n    }\n    return dumpedSections.join('\\n');\n  }\n\n  /**\n   * Creates `.sentryclirc` and `sentry.properties` files with the CLI properties\n   * obtained from the user answers (or from logging into Sentry).\n   * The `.sentryclirc` only contains the auth token and will be added to the\n   * user's `.gitignore` file. The properties file contains the rest of the\n   * properties (org, project, etc.).\n   *\n   * @param sentryCli instance of the Sentry CLI\n   * @param cliProps the properties to write to the files\n   */\n  public async createSentryCliConfig(cliProps: SentryCliProps): Promise<void> {\n    const { 'auth/token': authToken, ...cliPropsToWrite } = cliProps;\n\n    /**\n     * To not commit the auth token to the VCS, instead of adding it to the\n     * properties file (like the rest of props), it's added to the Sentry CLI\n     * config, which is added to the gitignore. This way makes the properties\n     * file safe to commit without exposing any auth tokens.\n     */\n    if (authToken) {\n      try {\n        await fs.promises.appendFile(\n          SENTRYCLIRC_FILENAME,\n          this.dumpConfig({ auth: { 'auth/token': authToken } }),\n        );\n        green(`✓ Successfully added the auth token to ${SENTRYCLIRC_FILENAME}`);\n      } catch {\n        red(\n          `⚠ Could not add the auth token to ${SENTRYCLIRC_FILENAME}, ` +\n            `please add it to identify your user account:\\n${authToken}`,\n        );\n        nl();\n      }\n    } else {\n      red(\n        `⚠ Did not find an auth token, please add your token to ${SENTRYCLIRC_FILENAME}`,\n      );\n      l(\n        'To generate an auth token, visit https://sentry.io/settings/account/api/auth-tokens/',\n      );\n      l(\n        'To learn how to configure Sentry CLI, visit ' +\n          'https://docs.sentry.io/platforms/javascript/guides/nextjs/manual-setup/#configure-sentry-cli',\n      );\n    }\n\n    await addToGitignore(\n      SENTRYCLIRC_FILENAME,\n      `⚠ Could not add ${SENTRYCLIRC_FILENAME} to ${GITIGNORE_FILENAME}, please add it to not commit your auth key.`,\n    );\n\n    try {\n      await fs.promises.writeFile(\n        `./${PROPERTIES_FILENAME}`,\n        this.dumpProperties(cliPropsToWrite),\n      );\n      green('✓ Successfully created sentry.properties');\n    } catch {\n      red(`⚠ Could not add org and project data to ${PROPERTIES_FILENAME}`);\n      l(\n        'See docs for a manual setup: https://docs.sentry.io/platforms/javascript/guides/nextjs/manual-setup/#configure-sentry-cli',\n      );\n    }\n    nl();\n  }\n}\n"]}