{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/nuxt/utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+EAA+E;AAC/E,sDAAwC;AACxC,mCAAyC;AACzC,kFAAkF;AAClF,uCAAoC;AACpC,0CAAkD;AAE3C,KAAK,UAAU,QAAQ,CAC5B,UAAkB,EAClB,cAAkC;IAElC,IAAI,CAAC,cAAc,EAAE;QACnB,OAAO,KAAK,CAAC;KACd;IAED,MAAM,MAAM,GAAG,IAAA,mBAAU,EAAC,cAAc,CAAC,CAAC;IAC1C,IAAI,MAAM,IAAI,IAAA,YAAG,EAAC,MAAM,EAAE,OAAO,CAAC,EAAE;QAClC,OAAO,IAAI,CAAC;KACb;IAED,mDAAmD;IACnD,qDAAqD;IACrD,wBAAwB;IACxB,IAAI;QACF,+DAA+D;QAC/D,wGAAwG;QACxG,MAAM,GAAG,GAAG,MAAM,IAAA,mBAAQ,EAAC,UAAU,CAAC,CAAC;QACvC,MAAM,MAAM,GACV,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,KAAK,eAAe;YAC3C,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9B,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC;QAE1B,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,oBAAoB,KAAK,CAAC,EAAE;YACvE,OAAO,IAAI,CAAC;SACb;QACD,uGAAuG;KACxG;IAAC,MAAM;QACN,6CAA6C;QAC7C,OAAO,MAAM,IAAA,wBAAgB,EAC3B,KAAK,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,+BAA+B,EAAE,CAAC,CAC5D,CAAC;KACH;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AArCD,4BAqCC","sourcesContent":["// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport * as clack from '@clack/prompts';\nimport { gte, minVersion } from 'semver';\n// @ts-expect-error - magicast is ESM and TS complains about that. It works though\nimport { loadFile } from 'magicast';\nimport { abortIfCancelled } from '../utils/clack';\n\nexport async function isNuxtV4(\n  nuxtConfig: string,\n  packageVersion: string | undefined,\n) {\n  if (!packageVersion) {\n    return false;\n  }\n\n  const minVer = minVersion(packageVersion);\n  if (minVer && gte(minVer, '4.0.0')) {\n    return true;\n  }\n\n  // At the time of writing, nuxt 4 is not on its own\n  // major yet. We must read the `compatibilityVersion`\n  // from the nuxt config.\n  try {\n    // Magicast is hard to type correctly so we disable these rules\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */\n    const mod = await loadFile(nuxtConfig);\n    const config =\n      mod.exports.default.$type === 'function-call'\n        ? mod.exports.default.$args[0]\n        : mod.exports.default;\n\n    if (config && config.future && config.future.compatibilityVersion === 4) {\n      return true;\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */\n  } catch {\n    // If we cannot parse their config, just ask.\n    return await abortIfCancelled(\n      clack.confirm({ message: 'Are you using Nuxt version 4?' }),\n    );\n  }\n\n  return false;\n}\n"]}