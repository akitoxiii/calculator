{"version":3,"file":"configure-package-manager.js","sourceRoot":"","sources":["../../../src/apple/configure-package-manager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+EAA+E;AAC/E,6DAAmC;AACnC,qDAAuC;AACvC,kDAA0B;AAE1B,4CAAyC;AACzC,0CAAqD;AACrD,0CAAuC;AACvC,qDAAuC;AAEhC,KAAK,UAAU,uBAAuB,CAAC,EAC5C,UAAU,GAGX;IACC,IAAA,aAAK,EACH,+CAA+C,eAAK,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CACxE,CAAC;IAEF,8EAA8E;IAC9E,qDAAqD;IACrD,IAAI,YAAY,GAAG,IAAI,CAAC;IAExB,MAAM,oBAAoB,GAAG,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;IAC/D,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,CAAC;IACvD,IAAA,aAAK,EAAC,gBAAgB,oBAAoB,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC;IAE9E,IAAI,oBAAoB,EAAE;QACxB,mGAAmG;QACnG,wDAAwD;QACxD,IAAA,aAAK,EAAC,yCAAyC,CAAC,CAAC;QACjD,MAAM,EAAE,GAAG,CACT,MAAM,IAAA,qBAAS,EAAC,0BAA0B,EAAE,GAAG,EAAE,CAC/C,IAAA,2BAAmB,EACjB,CAAC,uBAAuB,EAAE,WAAW,CAAC,EACtC,4DAA4D,CAC7D,CACF,CACF,CAAC,KAAK,CAAC;QACR,IAAA,aAAK,EAAC,+BAA+B,eAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAEvD,YAAY,GAAG,EAAE,KAAK,uBAAuB,CAAC;QAE9C,IAAI,CAAC,YAAY,EAAE;YACjB,IAAA,aAAK,EAAC,4BAA4B,CAAC,CAAC;YACpC,MAAM,QAAQ,GAAG,MAAM,IAAA,qBAAS,EAAC,yBAAyB,EAAE,GAAG,EAAE,CAC/D,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,CAClC,CAAC;YACF,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC;YAC1C,IAAA,aAAK,EAAC,8BAA8B,eAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;YAEvE,IAAI,CAAC,QAAQ,EAAE;gBACb,iBAAK,CAAC,GAAG,CAAC,IAAI,CACZ,yKAAyK,CAC1K,CAAC;aACH;SACF;KACF;IACD,IAAA,aAAK,EAAC,mBAAmB,eAAK,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;IAChE,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;IAErE,OAAO,EAAE,YAAY,EAAE,CAAC;AAC1B,CAAC;AApDD,0DAoDC","sourcesContent":["// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport clack from '@clack/prompts';\nimport * as Sentry from '@sentry/node';\nimport chalk from 'chalk';\n\nimport { traceStep } from '../telemetry';\nimport { askForItemSelection } from '../utils/clack';\nimport { debug } from '../utils/debug';\nimport * as cocoapod from './cocoapod';\n\nexport async function configurePackageManager({\n  projectDir,\n}: {\n  projectDir: string;\n}) {\n  debug(\n    `Checking if CocoaPods is installed at path: ${chalk.cyan(projectDir)}`,\n  );\n\n  // Xcode ships with the Swift Package Manager and potentially using CocoaPods.\n  // We need to check if the user has CocoaPods set up.\n  let shouldUseSPM = true;\n\n  const isCocoaPodsAvailable = cocoapod.usesCocoaPod(projectDir);\n  Sentry.setTag('cocoapod-exists', isCocoaPodsAvailable);\n  debug(`CocoaPods is ${isCocoaPodsAvailable ? 'installed' : 'not installed'}`);\n\n  if (isCocoaPodsAvailable) {\n    // If the user has CocoaPods installed, we need to ask them which package manager they want to use.\n    // Otherwise, we can just use the Swift Package Manager.\n    debug('Asking user to choose a package manager');\n    const pm = (\n      await traceStep('Choose a package manager', () =>\n        askForItemSelection(\n          ['Swift Package Manager', 'CocoaPods'],\n          'Which package manager would you like to use to add Sentry?',\n        ),\n      )\n    ).value;\n    debug(`User chose package manager: ${chalk.cyan(pm)}`);\n\n    shouldUseSPM = pm === 'Swift Package Manager';\n\n    if (!shouldUseSPM) {\n      debug('Adding CocoaPods reference');\n      const podAdded = await traceStep('Add CocoaPods reference', () =>\n        cocoapod.addCocoaPods(projectDir),\n      );\n      Sentry.setTag('cocoapod-added', podAdded);\n      debug(`CocoaPods reference added: ${chalk.cyan(podAdded.toString())}`);\n\n      if (!podAdded) {\n        clack.log.warn(\n          \"Could not add Sentry pod to your Podfile. You'll have to add it manually.\\nPlease follow the instructions at https://docs.sentry.io/platforms/apple/guides/ios/#install\",\n        );\n      }\n    }\n  }\n  debug(`Should use SPM: ${chalk.cyan(shouldUseSPM.toString())}`);\n  Sentry.setTag('package-manager', shouldUseSPM ? 'SPM' : 'cocoapods');\n\n  return { shouldUseSPM };\n}\n"]}