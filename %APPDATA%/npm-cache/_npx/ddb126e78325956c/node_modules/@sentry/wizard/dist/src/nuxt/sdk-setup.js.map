{"version":3,"file":"sdk-setup.js","sourceRoot":"","sources":["../../../src/nuxt/sdk-setup.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'node:fs';\nimport path from 'node:path';\n// @ts-expect-error - clack is ESM and TS complains about that. It works though\nimport * as clack from '@clack/prompts';\nimport * as Sentry from '@sentry/node';\nimport chalk from 'chalk';\n// @ts-expect-error - magicast is ESM and TS complains about that. It works though\nimport { generateCode, loadFile } from 'magicast';\n// @ts-expect-error - magicast is ESM and TS complains about that. It works though\nimport { addNuxtModule } from 'magicast/helpers';\nimport opn from 'opn';\nimport { type SemVer, lt } from 'semver';\nimport { traceStep } from '../telemetry';\nimport {\n  abortIfCancelled,\n  askShouldAddPackageOverride,\n  askShouldInstallPackage,\n  featureSelectionPrompt,\n  installPackage,\n  isUsingTypeScript,\n} from '../utils/clack';\nimport {\n  type PackageDotJson,\n  hasPackageInstalled,\n} from '../utils/package-json';\nimport { PNPM, type PackageManager } from '../utils/package-manager';\nimport {\n  getConfigBody,\n  getDefaultNuxtConfig,\n  getNuxtModuleFallbackTemplate,\n  getSentryConfigContents,\n} from './templates';\nimport { type DeploymentPlatform, deploymentPlatforms } from './types';\n\nconst possibleNuxtConfig = [\n  'nuxt.config.js',\n  'nuxt.config.mjs',\n  'nuxt.config.cjs',\n  'nuxt.config.ts',\n  'nuxt.config.mts',\n  'nuxt.config.cts',\n];\n\nexport async function getNuxtConfig(): Promise<string> {\n  let configFile = possibleNuxtConfig.find((fileName) =>\n    fs.existsSync(path.join(process.cwd(), fileName)),\n  );\n\n  if (!configFile) {\n    clack.log.info('No Nuxt config file found, creating a new one.');\n    Sentry.setTag('nuxt-config-strategy', 'create');\n    // nuxt recommends its config to be .ts by default\n    configFile = 'nuxt.config.ts';\n\n    await fs.promises.writeFile(\n      path.join(process.cwd(), configFile),\n      getDefaultNuxtConfig(),\n      { encoding: 'utf-8', flag: 'w' },\n    );\n\n    clack.log.success(`Created ${chalk.cyan('nuxt.config.ts')}.`);\n  }\n\n  return path.join(process.cwd(), configFile);\n}\n\nexport async function askDeploymentPlatform(): Promise<\n  DeploymentPlatform | symbol\n> {\n  return await abortIfCancelled(\n    clack.select({\n      message: 'Please select your deployment platform.',\n      options: deploymentPlatforms.map((platform) => ({\n        value: platform,\n        label: `${platform.charAt(0).toUpperCase()}${platform.slice(1)}`,\n      })),\n    }),\n  );\n}\n\nexport async function addSDKModule(\n  config: string,\n  options: { org: string; project: string; url: string; selfHosted: boolean },\n  deploymentPlatform: DeploymentPlatform | symbol,\n): Promise<void> {\n  const failureTagKey = 'modify-nuxt-config-error';\n\n  const shouldTopLevelImport =\n    deploymentPlatform === 'vercel' || deploymentPlatform === 'netlify';\n\n  if (shouldTopLevelImport) {\n    clack.log.warn(\n      `Sentry needs to be initialized before the application starts. ${chalk.cyan(\n        `${deploymentPlatform\n          .charAt(0)\n          .toUpperCase()}${deploymentPlatform.slice(1)}`,\n      )} does not support this yet.\\n\\nWe will inject the Sentry server-side config at the top of your Nuxt server entry file instead.\\n\\nThis comes with some restrictions, for more info see:\\n\\n${chalk.underline(\n        'https://docs.sentry.io/platforms/javascript/guides/nuxt/install/top-level-import/',\n      )} `,\n    );\n  }\n\n  let module;\n\n  try {\n    module = await loadFile(config);\n  } catch (e) {\n    if (e instanceof Error) {\n      if (e instanceof SyntaxError || e.message.includes('Unexpected token')) {\n        Sentry.setTag(failureTagKey, 'loadFile-failed-syntax-error');\n      } else if (\n        e.message.includes('ENOENT') ||\n        e.message.includes('no such file')\n      ) {\n        Sentry.setTag(failureTagKey, 'loadFile-failed-file-not-found');\n      }\n    } else {\n      Sentry.setTag(failureTagKey, 'loadFile-failed');\n    }\n\n    clack.log.error(\n      `Error while loading Nuxt config file: ${\n        e instanceof Error ? e.message : 'Unknown'\n      }`,\n    );\n\n    showFallbackInstructions(config, options, shouldTopLevelImport);\n    throw e;\n  }\n\n  try {\n    addNuxtModule(module, '@sentry/nuxt/module', 'sentry', {\n      sourceMapsUploadOptions: {\n        org: options.org,\n        project: options.project,\n        ...(options.selfHosted && { url: options.url }),\n      },\n      ...(shouldTopLevelImport && {\n        autoInjectServerSentry: 'top-level-import',\n      }),\n    });\n  } catch (e) {\n    Sentry.setTag(failureTagKey, 'adding-sentry-options-failed');\n\n    clack.log.error(\n      `Error while modifying 'sentry' in Nuxt config: ${\n        e instanceof Error ? e.message : 'Unknown'\n      }`,\n    );\n\n    showFallbackInstructions(config, options, shouldTopLevelImport);\n    throw e;\n  }\n\n  try {\n    addNuxtModule(module, '@sentry/nuxt/module', 'sourcemap', {\n      client: 'hidden',\n    });\n  } catch (e) {\n    Sentry.setTag(failureTagKey, 'adding-sourcemap-options-failed');\n\n    clack.log.error(\n      `Error while modifying 'sourcemap' in Nuxt config: ${\n        e instanceof Error ? e.message : 'Unknown'\n      }`,\n    );\n\n    showFallbackInstructions(config, options, shouldTopLevelImport);\n    throw e;\n  }\n\n  let code;\n\n  try {\n    ({ code } = generateCode(module));\n  } catch (e) {\n    Sentry.setTag(failureTagKey, 'generateCode-failed');\n\n    clack.log.error(\n      `Error while generating module code: ${\n        e instanceof Error ? e.message : 'Unknown'\n      }`,\n    );\n\n    showFallbackInstructions(config, options, shouldTopLevelImport);\n    throw e;\n  }\n\n  try {\n    await fs.promises.writeFile(config, code, { encoding: 'utf-8', flag: 'w' });\n\n    clack.log.success(\n      `Added Sentry Nuxt Module to ${chalk.cyan(path.basename(config))}.`,\n    );\n  } catch (e: unknown) {\n    Sentry.setTag(failureTagKey, 'writeFile-failed');\n\n    clack.log.error(\n      `Error while writing Nuxt config: ${\n        e instanceof Error ? e.message : 'Unknown'\n      }`,\n    );\n\n    showFallbackInstructions(config, options, shouldTopLevelImport);\n    throw e;\n  }\n}\n\nfunction showFallbackInstructions(\n  config: string,\n  options: { org: string; project: string; url: string; selfHosted: boolean },\n  shouldTopLevelImport: boolean,\n) {\n  clack.log.warn(\n    `Please add the following settings to ${chalk.cyan(\n      path.basename(config),\n    )}:`,\n  );\n  // eslint-disable-next-line no-console\n  console.log(\n    `\\n\\n${getNuxtModuleFallbackTemplate(options, shouldTopLevelImport)}\\n\\n`,\n  );\n}\n\nexport async function createConfigFiles(dsn: string) {\n  const selectedFeatures = await featureSelectionPrompt([\n    {\n      id: 'performance',\n      prompt: `Do you want to enable ${chalk.bold(\n        'Tracing',\n      )} to track the performance of your application?`,\n      enabledHint: 'recommended',\n    },\n    {\n      id: 'replay',\n      prompt: `Do you want to enable ${chalk.bold(\n        'Session Replay',\n      )} to get a video-like reproduction of errors during a user session?`,\n      enabledHint: 'recommended, but increases bundle size',\n    },\n  ] as const);\n\n  const typeScriptDetected = isUsingTypeScript();\n\n  const configVariants = ['server', 'client'] as const;\n\n  for (const configVariant of configVariants) {\n    await traceStep(`create-sentry-${configVariant}-config`, async () => {\n      const jsConfig = `sentry.${configVariant}.config.js`;\n      const tsConfig = `sentry.${configVariant}.config.ts`;\n\n      const jsConfigExists = fs.existsSync(path.join(process.cwd(), jsConfig));\n      const tsConfigExists = fs.existsSync(path.join(process.cwd(), tsConfig));\n\n      let shouldWriteFile = true;\n\n      if (jsConfigExists || tsConfigExists) {\n        const existingConfigs = [];\n\n        if (jsConfigExists) {\n          existingConfigs.push(jsConfig);\n        }\n\n        if (tsConfigExists) {\n          existingConfigs.push(tsConfig);\n        }\n\n        const overwriteExistingConfigs = await abortIfCancelled(\n          clack.confirm({\n            message: `Found existing Sentry ${configVariant} config (${existingConfigs.join(\n              ', ',\n            )}). Overwrite ${existingConfigs.length > 1 ? 'them' : 'it'}?`,\n          }),\n        );\n        Sentry.setTag(\n          `overwrite-${configVariant}-config`,\n          overwriteExistingConfigs,\n        );\n\n        shouldWriteFile = overwriteExistingConfigs;\n\n        if (overwriteExistingConfigs) {\n          if (jsConfigExists) {\n            fs.unlinkSync(path.join(process.cwd(), jsConfig));\n            clack.log.warn(`Removed existing ${chalk.cyan(jsConfig)}.`);\n          }\n          if (tsConfigExists) {\n            fs.unlinkSync(path.join(process.cwd(), tsConfig));\n            clack.log.warn(`Removed existing ${chalk.cyan(tsConfig)}.`);\n          }\n        }\n      }\n\n      if (shouldWriteFile) {\n        await fs.promises.writeFile(\n          path.join(process.cwd(), typeScriptDetected ? tsConfig : jsConfig),\n          getSentryConfigContents(dsn, configVariant, selectedFeatures),\n          { encoding: 'utf8', flag: 'w' },\n        );\n        clack.log.success(\n          `Created new ${chalk.cyan(\n            typeScriptDetected ? tsConfig : jsConfig,\n          )}.`,\n        );\n        Sentry.setTag(`created-${configVariant}-config`, true);\n      } else {\n        clack.log.info(\n          `Okay, here are the changes your ${chalk.cyan(\n            typeScriptDetected ? tsConfig : jsConfig,\n          )} should contain:`,\n        );\n        // eslint-disable-next-line no-console\n        console.log(\n          '\\n\\n  ' +\n            getConfigBody(dsn, configVariant, selectedFeatures) +\n            '\\n\\n',\n        );\n      }\n    });\n  }\n}\n\nexport async function addNuxtOverrides(\n  packageJson: PackageDotJson,\n  packageManager: PackageManager,\n  nuxtMinVer: SemVer | null,\n  forceInstall?: boolean,\n) {\n  const isPNPM = PNPM.detect();\n\n  const overrides = [\n    {\n      pkgName: '@vercel/nft',\n      pkgVersion: '^0.27.4',\n    },\n    ...(nuxtMinVer && lt(nuxtMinVer, '3.14.0')\n      ? [{ pkgName: 'ofetch', pkgVersion: '^1.4.0' }]\n      : []),\n  ];\n\n  clack.log.warn(\n    `To ensure Sentry can properly instrument your code it needs to add version overrides for some Nuxt dependencies${\n      isPNPM ? ` and install ${chalk.cyan('import-in-the-middle')}.` : '.'\n    }\\n\\nFor more info see: ${chalk.underline(\n      'https://github.com/getsentry/sentry-javascript/issues/14514',\n    )}${\n      isPNPM\n        ? `\\n\\nand ${chalk.underline(\n            'https://docs.sentry.io/platforms/javascript/guides/nuxt/troubleshooting/#pnpm-dev-cannot-find-package-import-in-the-middle',\n          )}`\n        : ''\n    }`,\n  );\n\n  for (const { pkgName, pkgVersion } of overrides) {\n    const shouldAddOverride = await askShouldAddPackageOverride(\n      pkgName,\n      pkgVersion,\n    );\n\n    if (shouldAddOverride) {\n      await packageManager.addOverride(pkgName, pkgVersion);\n    }\n  }\n\n  if (PNPM.detect()) {\n    // For pnpm, we want to install iitm\n    // See: https://docs.sentry.io/platforms/javascript/guides/nuxt/troubleshooting/#pnpm-dev-cannot-find-package-import-in-the-middle\n    const iitmAlreadyInstalled = hasPackageInstalled(\n      'import-in-the-middle',\n      packageJson,\n    );\n    Sentry.setTag('iitm-already-installed', iitmAlreadyInstalled);\n\n    const shouldInstallIitm = await askShouldInstallPackage(\n      'import-in-the-middle',\n    );\n\n    if (shouldInstallIitm) {\n      await installPackage({\n        packageName: 'import-in-the-middle',\n        alreadyInstalled: iitmAlreadyInstalled,\n        packageManager,\n        forceInstall,\n      });\n    }\n  }\n}\n\nexport async function confirmReadImportDocs(\n  deploymentPlatform: DeploymentPlatform | symbol,\n) {\n  const canImportSentryServerConfigFile =\n    deploymentPlatform !== 'vercel' && deploymentPlatform !== 'netlify';\n\n  if (!canImportSentryServerConfigFile) {\n    // Nothing to do, users have been set up with automatic top-level-import instead\n    return;\n  }\n\n  const docsUrl =\n    'https://docs.sentry.io/platforms/javascript/guides/nuxt/install/cli-import/#initializing-sentry-with---import';\n\n  clack.log.info(\n    `After building your Nuxt app, you need to ${chalk.bold(\n      '--import',\n    )} the Sentry server config file when running your app.\\n\\nFor more info, see:\\n\\n${chalk.underline(\n      docsUrl,\n    )}`,\n  );\n\n  const shouldOpenDocs = await abortIfCancelled(\n    clack.confirm({ message: 'Do you want to open the docs?' }),\n  );\n\n  Sentry.setTag('init-with-import-docs-opened', shouldOpenDocs);\n\n  if (shouldOpenDocs) {\n    // opn throws in environments that don't have a browser (e.g. remote shells) so we just noop here\n    const noop = () => {}; // eslint-disable-line @typescript-eslint/no-empty-function\n    opn(docsUrl, { wait: false }).then((cp) => cp.on('error', noop), noop);\n  }\n}\n"]}