{"version":3,"file":"templates.js","sourceRoot":"","sources":["../../../src/sveltekit/templates.ts"],"names":[],"mappings":";;;AAAA,SAAgB,sBAAsB,CACpC,GAAW,EACX,gBAGC;IAED,OAAO;;;;UAIC,GAAG;EAEX,gBAAgB,CAAC,WAAW;QAC1B,CAAC,CAAC;;CAEL;QACG,CAAC,CAAC,EACN;EAEE,gBAAgB,CAAC,MAAM;QACrB,CAAC,CAAC;;;;;;;;;uCASiC;QACnC,CAAC,CAAC,EACN;;;;;CAKC,CAAC;AACF,CAAC;AAtCD,wDAsCC;AAED,SAAgB,sBAAsB,CACpC,GAAW,EACX,gBAGC;IAED,OAAO;;;;;UAKC,GAAG;EAEX,gBAAgB,CAAC,WAAW;QAC1B,CAAC,CAAC;;CAEL;QACG,CAAC,CAAC,EACN;;;;;;;;;;CAUC,CAAC;AACF,CAAC;AA9BD,wDA8BC;AAED;;GAEG;AACH,SAAgB,0BAA0B,CAAC,OAK1C;IACC,MAAM,cAAc,GAAG,OAAO,CAAC,UAAU;QACvC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,iBAAiB,OAAO,CAAC,OAAO,oBAAoB,OAAO,CAAC,SAAS,EAAE;QACvF,CAAC,CAAC,WAAW,OAAO,CAAC,OAAO,8BAA8B,OAAO,CAAC,SAAS,EAAE,CAAC;IAEhF,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iGAiDwF,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA2J9G,CAAC;AACF,CAAC;AAvND,gEAuNC;AAED,SAAgB,wBAAwB;IACtC,OAAO;;;;;;CAMR,CAAC;AACF,CAAC;AARD,4DAQC","sourcesContent":["export function getClientHooksTemplate(\n  dsn: string,\n  selectedFeatures: {\n    performance: boolean;\n    replay: boolean;\n  },\n) {\n  return `import { handleErrorWithSentry, replayIntegration } from \"@sentry/sveltekit\";\nimport * as Sentry from '@sentry/sveltekit';\n\nSentry.init({\n  dsn: '${dsn}',\n${\n  selectedFeatures.performance\n    ? `\n  tracesSampleRate: 1.0,\n`\n    : ''\n}\n${\n  selectedFeatures.replay\n    ? `  // This sets the sample rate to be 10%. You may want this to be 100% while\n  // in development and sample at a lower rate in production\n  replaysSessionSampleRate: 0.1,\n\n  // If the entire session is not sampled, use the below sample rate to sample\n  // sessions when an error occurs.\n  replaysOnErrorSampleRate: 1.0,\n\n  // If you don't want to use Session Replay, just remove the line below:\n  integrations: [replayIntegration()],`\n    : ''\n}\n});\n\n// If you have a custom error handler, pass it to \\`handleErrorWithSentry\\`\nexport const handleError = handleErrorWithSentry();\n`;\n}\n\nexport function getServerHooksTemplate(\n  dsn: string,\n  selectedFeatures: {\n    performance: boolean;\n    replay: boolean;\n  },\n) {\n  return `import { sequence } from \"@sveltejs/kit/hooks\";\nimport { handleErrorWithSentry, sentryHandle } from \"@sentry/sveltekit\";\nimport * as Sentry from '@sentry/sveltekit';\n\nSentry.init({\n  dsn: '${dsn}',\n${\n  selectedFeatures.performance\n    ? `\n  tracesSampleRate: 1.0,\n`\n    : ''\n}\n  // uncomment the line below to enable Spotlight (https://spotlightjs.com)\n  // spotlight: import.meta.env.DEV,\n});\n\n// If you have custom handlers, make sure to place them after \\`sentryHandle()\\` in the \\`sequence\\` function.\nexport const handle = sequence(sentryHandle());\n\n// If you have a custom error handler, pass it to \\`handleErrorWithSentry\\`\nexport const handleError = handleErrorWithSentry();\n`;\n}\n\n/**\n * +page.svelte with Sentry example\n */\nexport function getSentryExampleSveltePage(options: {\n  selfHosted: boolean;\n  url: string;\n  orgSlug: string;\n  projectId: string;\n}) {\n  const issuesPageLink = options.selfHosted\n    ? `${options.url}organizations/${options.orgSlug}/issues/?project=${options.projectId}`\n    : `https://${options.orgSlug}.sentry.io/issues/?project=${options.projectId}`;\n\n  return `<!--\nThis is just a very simple page with a button to throw an example error.\nFeel free to delete this file and the entire sentry route.\n-->\n\n<script>\n  import * as Sentry from '@sentry/sveltekit';\n  import { onMount } from 'svelte';\n  \n  // Svelte Runes (requires Svelte 5)\n  // let hasSentError = $state(false);\n  let hasSentError = false;\n  let isConnected = true;\n\n  onMount(async () => {\n    const result = await Sentry.diagnoseSdkConnectivity();\n    isConnected = result !== 'sentry-unreachable';\n  });\n\n  function getSentryData() {\n    Sentry.startSpan(\n      {\n        name: 'Example Frontend Span',\n        op: 'test'\n      },\n      async () => {\n        const res = await fetch('/sentry-example-page');\n        if (!res.ok) {\n          hasSentError = true;\n          throw new Error('Sentry Example Frontend Error');\n        }\n      }\n    );\n  }\n</script>\n\n<title>sentry-example-page</title>\n\n<div>\n  <main>\n    <div class=\"flex-spacer\"></div>\n    <svg height=\"40\" width=\"40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M21.85 2.995a3.698 3.698 0 0 1 1.353 1.354l16.303 28.278a3.703 3.703 0 0 1-1.354 5.053 3.694 3.694 0 0 1-1.848.496h-3.828a31.149 31.149 0 0 0 0-3.09h3.815a.61.61 0 0 0 .537-.917L20.523 5.893a.61.61 0 0 0-1.057 0l-3.739 6.494a28.948 28.948 0 0 1 9.63 10.453 28.988 28.988 0 0 1 3.499 13.78v1.542h-9.852v-1.544a19.106 19.106 0 0 0-2.182-8.85 19.08 19.08 0 0 0-6.032-6.829l-1.85 3.208a15.377 15.377 0 0 1 6.382 12.484v1.542H3.696A3.694 3.694 0 0 1 0 34.473c0-.648.17-1.286.494-1.849l2.33-4.074a8.562 8.562 0 0 1 2.689 1.536L3.158 34.17a.611.611 0 0 0 .538.917h8.448a12.481 12.481 0 0 0-6.037-9.09l-1.344-.772 4.908-8.545 1.344.77a22.16 22.16 0 0 1 7.705 7.444 22.193 22.193 0 0 1 3.316 10.193h3.699a25.892 25.892 0 0 0-3.811-12.033 25.856 25.856 0 0 0-9.046-8.796l-1.344-.772 5.269-9.136a3.698 3.698 0 0 1 3.2-1.849c.648 0 1.285.17 1.847.495Z\" fill=\"currentcolor\"/>\n    </svg>\n    <h1>\n      sentry-example-page\n    </h1>\n\n    <p class=\"description\">\n      Click the button below, and view the sample error on the Sentry <a target=\"_blank\" href=\"${issuesPageLink}\">Issues Page</a>. \n      For more details about setting up Sentry, <a target=\"_blank\" href=\"https://docs.sentry.io/platforms/javascript/guides/sveltekit/\">read our docs</a>.\n    </p>\n\n    <button\n      type=\"button\"\n      onclick={getSentryData}\n    >\n      <span>\n        Throw Sample Error\n      </span>\n    </button>\n\n    {#if hasSentError}\n      <p class=\"success\">\n        Sample error was sent to Sentry.\n      </p>\n    {:else if !isConnected}\n      <div class=\"connectivity-error\">\n        <p>The Sentry SDK is not able to reach Sentry right now - this may be due to an adblocker. For more information, see <a target=\"_blank\" href=\"https://docs.sentry.io/platforms/javascript/guides/sveltekit/troubleshooting/#the-sdk-is-not-sending-any-data\">the troubleshooting guide</a>.</p>\n      </div>\n    {:else}\n      <div class=\"success_placeholder\"></div>\n    {/if}\n\n    <div class=\"flex-spacer\"></div> \n    <p class=\"description\">\n      Adblockers will prevent errors from being sent to Sentry.\n    </p>\n  </main>\n</div>\n\n<style>\n  :global(body) {\n    margin: 0;\n\n    @media (prefers-color-scheme: dark) {\n      color: #ededed;\n      background-color: #0a0a0a;\n    }\n  }\n\n  main {\n    display: flex;\n    min-height: 100vh;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    box-sizing: border-box;\n    gap: 16px;\n    margin: 0;\n    padding: 16px;\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif;\n  }\n\n  h1 {\n    padding: 0px 4px;\n    border-radius: 4px;\n    background-color: rgba(24, 20, 35, 0.03);\n    font-family: monospace;\n    font-size: 20px;\n    line-height: 1.2;\n  }\n\n  p {\n    margin: 0;\n    font-size: 20px;\n  }\n\n  a {\n    color: #6341F0;\n    text-decoration: underline;\n    cursor: pointer;\n\n    @media (prefers-color-scheme: dark) {\n      color: #B3A1FF;\n    }\n  }\n\n  button {\n    border-radius: 8px;\n    color: white;\n    cursor: pointer;\n    background-color: #553DB8;\n    border: none;\n    padding: 0;\n    margin-top: 4px;\n\n    & > span {\n      display: inline-block;\n      padding: 12px 16px;\n      border-radius: inherit;\n      font-size: 20px;\n      font-weight: bold;\n      line-height: 1;\n      background-color: #7553FF;\n      border: 1px solid #553DB8;\n      transform: translateY(-4px);\n    }\n\n    &:hover > span {\n      transform: translateY(-8px);\n    }\n\n    &:active > span {\n      transform: translateY(0);\n    }\n  }\n\n  .description {\n    text-align: center;\n    color: #6E6C75;\n    max-width: 500px;\n    line-height: 1.5;\n    font-size: 20px;\n\n    @media (prefers-color-scheme: dark) {\n      color: #A49FB5;\n    }\n  }\n\n  .flex-spacer {\n    flex: 1;\n  }\n\n  .success {\n    padding: 12px 16px;\n    border-radius: 8px;\n    font-size: 20px;\n    line-height: 1;\n    background-color: #00F261;\n    border: 1px solid #00BF4D;\n    color: #181423;\n  }\n\n  .success_placeholder {\n    height: 46px;\n  }\n\n  .connectivity-error {\n    padding: 12px 16px;\n    background-color: #E50045;\n    border-radius: 8px;\n    width: 500px;\n    color: #FFFFFF;\n    border: 1px solid #A80033;\n    text-align: center;\n    margin: 0;\n  }\n  \n  .connectivity-error a {\n    color: #FFFFFF;\n    text-decoration: underline;\n  }\n</style>\n`;\n}\n\nexport function getSentryExampleApiRoute() {\n  return `// This is just a very simple API route that throws an example error.\n// Feel free to delete this file and the entire sentry route.\n\nexport const GET = async () => {\n  throw new Error(\"Sentry Example API Route Error\");\n};\n`;\n}\n"]}